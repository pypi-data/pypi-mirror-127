Metadata-Version: 2.1
Name: sqlq
Version: 1.5.0
Summary: A thread safe queue worker that executes SQL for multi-threaded applications.
Home-page: https://github.com/foxe6/
Author: f̣ộx̣ệ6
Author-email: foxe6@protonmail.com
License: AGPL-3.0
Project-URL: Sourcecode, https://github.com/foxe6/sqlq
Project-URL: Documentation, https://github.com/foxe6/sqlq/blob/master/test
Project-URL: Example, https://github.com/foxe6/sqlq/blob/master/sqlq/example
Project-URL: Issues, https://github.com/foxe6/sqlq/issues
Project-URL: Funding, https://paypal.me/foxe6
Project-URL: Say Thanks!, https://saythanks.io/to/foxe6
Keywords: sql sqlite3 queue socket server client rpc
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Utilities
Classifier: Natural Language :: English
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU Affero General Public License v3
Classifier: Operating System :: MacOS
Classifier: Operating System :: POSIX
Classifier: Operating System :: Microsoft :: Windows :: Windows 10
Classifier: Development Status :: 5 - Production/Stable
Requires-Python: >=3
Description-Content-Type: text/markdown
License-File: LICENSE

# Sqlite3 Execution Queue

<badges>[![version](https://img.shields.io/pypi/v/sqlq.svg)](https://pypi.org/project/sqlq/)
[![license](https://img.shields.io/pypi/l/sqlq.svg)](https://pypi.org/project/sqlq/)
[![pyversions](https://img.shields.io/pypi/pyversions/sqlq.svg)](https://pypi.org/project/sqlq/)  
[![powered](https://img.shields.io/badge/Say-Thanks-ddddff.svg)](https://saythanks.io/to/foxe6)
[![donate](https://img.shields.io/badge/Donate-Paypal-0070ba.svg)](https://paypal.me/foxe6)
[![made](https://img.shields.io/badge/Made%20with-PyCharm-red.svg)](https://paypal.me/foxe6)
</badges>

<i>A thread safe queue worker that executes SQL for multi-threaded applications.</i>

# Hierarchy

```
sqlqueue
|---- SqlQueueU()
|   |---- sql()
|   |---- _sql()
|   |---- sql_async()
|   |---- _sql_async()
|   |---- backup()
|   |---- commit()
|   '---- stop()
'---- SqlQueueE()
    |---- sql()
    |---- _sql()
    |---- sql_async()
    |---- _sql_async()
    |---- backup()
    |---- commit()
    '---- stop()
```

# Example

## python
See `test`.

