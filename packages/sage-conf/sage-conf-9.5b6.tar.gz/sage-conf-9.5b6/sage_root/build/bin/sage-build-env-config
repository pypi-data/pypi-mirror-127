# -*- shell-script -*-

###########################################################################
#
#  Set some environment variables for building Sage (the distribution).
#
#  NOTES:
#  - You must *source* this script instead of executing.
#  - Use "return" instead of "exit" to signal a failure.  Since this
#    file is sourced, an "exit" here will actually exit src/bin/sage,
#    which is probably not intended.
#  - All environment variables set here should be *exported*, otherwise
#    they won't be available in child programs.
#
#  If you want to set all environment variables for your shell like
#  they are during the build of Sage packages, type
#
#             sage --buildsh
#
##########################################################################

# The configured CXX without special flags added that enable C++11 support
export SAGE_CXX_WITHOUT_STD="g++"

# Export SAGE_FAT_BINARY if this was enabled during configure.
export SAGE_FAT_BINARY=""

export CONFIGURED_SAGE_DEBUG=""

# The configured compilation flags.
export CONFIGURED_CFLAGS="-g -O2"
export CONFIGURED_CXXFLAGS=""
export CONFIGURED_FCFLAGS=""
export CONFIGURED_F77FLAGS=""
export CFLAGS_MARCH="-march=native"

export SAGE_GMP_PREFIX=""
export SAGE_GMP_INCLUDE="///usr/include/x86_64-linux-gnu"

export SAGE_MPFR_PREFIX="$SAGE_LOCAL"

export SAGE_MPC_PREFIX="$SAGE_LOCAL"

# Location of system crti.o, in case we build our own gcc
export SAGE_CRTI_DIR="/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu"

export SAGE_NTL_PREFIX="$SAGE_LOCAL"

export SAGE_FLINT_PREFIX="$SAGE_LOCAL"

export SAGE_PARI_PREFIX="$SAGE_LOCAL"
export SAGE_PARI_CFG="$SAGE_LOCAL/lib/pari/pari.cfg"

export SAGE_GLPK_PREFIX="$SAGE_LOCAL"
export SAGE_FREETYPE_PREFIX=""
export SAGE_SUITESPARSE_PREFIX="$SAGE_LOCAL"

export SAGE_CONFIGURE_FFLAS_FFPACK=""

export SAGE_EDITABLE=""
