# generated by datamodel-codegen:
#   filename:  schema/entity/data/model.json
#   timestamp: 2021-10-31T21:55:34+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field, constr

from ...type import basic, entityHistory, entityReference, tagLabel, usageDetails


class Model(BaseModel):
    id: basic.Uuid = Field(..., description='Unique identifier of a model instance.')
    name: constr(min_length=1, max_length=64) = Field(
        ..., description='Name that identifies this model.'
    )
    fullyQualifiedName: Optional[constr(min_length=1, max_length=64)] = Field(
        None, description='A unique name that identifies a model.'
    )
    displayName: Optional[str] = Field(
        None, description='Display Name that identifies this model.'
    )
    version: Optional[entityHistory.EntityVersion] = Field(
        None, description='Metadata version of the entity.'
    )
    updatedAt: Optional[basic.DateTime] = Field(
        None,
        description='Last update time corresponding to the new version of the entity.',
    )
    updatedBy: Optional[str] = Field(None, description='User who made the update.')
    description: Optional[str] = Field(
        None, description='Description of the model, what it is, and how to use it.'
    )
    algorithm: str = Field(..., description='Algorithm used to train the model.')
    dashboard: Optional[entityReference.EntityReference] = Field(
        None, description='Performance Dashboard URL to track metric evolution.'
    )
    href: Optional[basic.Href] = Field(
        None, description='Link to the resource corresponding to this entity.'
    )
    owner: Optional[entityReference.EntityReference] = Field(
        None, description='Owner of this model.'
    )
    followers: Optional[entityReference.EntityReferenceList] = Field(
        None, description='Followers of this model.'
    )
    tags: Optional[List[tagLabel.TagLabel]] = Field(
        None, description='Tags for this model.'
    )
    usageSummary: Optional[usageDetails.TypeUsedToReturnUsageDetailsOfAnEntity] = Field(
        None, description='Latest usage information for this model.'
    )
    changeDescription: Optional[entityHistory.ChangeDescription] = Field(
        None, description='Change that lead to this version of the entity.'
    )
