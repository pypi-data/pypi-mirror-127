[metadata]
name = tnmf
author = Adrian Šošić, Mathias Winkel
author_email = adrian.sosic@merckgroup.com, mathias.winkel@merckgroup.com
description = Transform-Invariant Non-Negative Matrix Factorization
long_description = file: README.md
long_description_content_type = text/markdown
platforms = any
license = Apache License, Version 2.0
license_file = LICENSE
classifiers = 
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3.7
	Programming Language :: Python :: 3.8
	Programming Language :: Python :: 3.9
	Operating System :: OS Independent
	License :: OSI Approved :: Apache Software License
url = https://github.com/emdgroup/tnmf
project_urls = 
	Documentation = https://emdgroup.github.io/tnmf/
	Bug Tracker = https://github.com/emdgroup/tnmf/issues

[options]
package_dir = 
	= .
packages = find:
python_requires = >=3.7
install_requires = 
	matplotlib>=3.3.3
	more-itertools>=8.6.0
	numpy>=1.19.4
	opt-einsum>=3.3.0
	scipy>=1.5.4
	streamlit>=0.84.0
	torch>=1.8.1

[options.package_data]
logos = *

[options.entry_points]
console_scripts = 
	tnmf = scripts.tnmf:main

[aliases]
test = pytest

[tool:pytest]
log_cli = True
addopts = 
	--ignore doc

[flake8]
exclude = .git,__pycache__,doc,env,venv,.venv
max-complexity = 10
max-line-length = 127
count = True
show_source = True
statistics = True
extend-ignore = 
	S101
per-file-ignores = 
	tnmf/tests/test_init.py: F401, F403
	tnmf/backends/NumPy_FFT.py: C901
	demos/demo_image.py: E402

[pylint.MASTER]
ignore = .git,__pycache__,doc,env,venv,.venv,_version.py

[pylint.REPORTS]
output-format = colorized

[pylint.'MESSAGES CONTROL']
disable = invalid-name,
	fixme,
	too-many-instance-attributes,
	too-many-arguments,
	too-many-locals,
	too-many-statements,
	duplicate-code,
	logging-fstring-interpolation,
	missing-function-docstring

[pylint.'FORMAT']
max-line-length = 127

[pylint.BASIC]
bad-names-rgxs = _?num_.*

[pylint.TYPECHECK]
generated-members = numpy.*, torch.*

[coverage:run]
source = 
	tnmf
	examples
	demos
branch = True
command_line = -m pytest
parallel = True

[coverage:report]
fail_under = 95
skip_covered = True
skip_empty = True
show_missing = True
exclude_lines = 
	pragma: no cover
	raise NotImplementedError
	raise AssertionError
	raise ValueError
	except ImportError:
	except PackageNotFoundError:
omit = 
	tnmf/_version.py

[egg_info]
tag_build = 
tag_date = 0

