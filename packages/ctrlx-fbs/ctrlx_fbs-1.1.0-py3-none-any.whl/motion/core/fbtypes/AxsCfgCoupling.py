# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbtypes

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# configuration for coupling functions for a single axis
class AxsCfgCoupling(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsAxsCfgCoupling(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = AxsCfgCoupling()
        x.Init(buf, n + offset)
        return x

    # AxsCfgCoupling
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # configuration for gantry coupling function of a single axis
    # AxsCfgCoupling
    def Gantry(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from motion.core.fbtypes.AxsCfgGantry import AxsCfgGantry
            obj = AxsCfgGantry()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def AxsCfgCouplingStart(builder): builder.StartObject(1)
def AxsCfgCouplingAddGantry(builder, gantry): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(gantry), 0)
def AxsCfgCouplingEnd(builder): return builder.EndObject()
