# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbtypes

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# data of a single axis transformation set
class KinCfgAxsTrafoSet(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsKinCfgAxsTrafoSet(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = KinCfgAxsTrafoSet()
        x.Init(buf, n + offset)
        return x

    # KinCfgAxsTrafoSet
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # name of the axis transformation set
    # KinCfgAxsTrafoSet
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # name of the axis transformation
    # KinCfgAxsTrafoSet
    def AxsTrafo(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # configuration parameter of the axis transformation
    # KinCfgAxsTrafoSet
    def Param(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from motion.core.fbtypes.KinCfgAxsTrafoAllParam import KinCfgAxsTrafoAllParam
            obj = KinCfgAxsTrafoAllParam()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def KinCfgAxsTrafoSetStart(builder): builder.StartObject(3)
def KinCfgAxsTrafoSetAddName(builder, name): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)
def KinCfgAxsTrafoSetAddAxsTrafo(builder, axsTrafo): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(axsTrafo), 0)
def KinCfgAxsTrafoSetAddParam(builder, param): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(param), 0)
def KinCfgAxsTrafoSetEnd(builder): return builder.EndObject()
