# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbtypes

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# data of a single configuration parameter of an axis transformation
class KinCfgAxsTrafoParam(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsKinCfgAxsTrafoParam(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = KinCfgAxsTrafoParam()
        x.Init(buf, n + offset)
        return x

    # KinCfgAxsTrafoParam
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Name of the parameter
    # KinCfgAxsTrafoParam
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Description of the parameter
    # KinCfgAxsTrafoParam
    def Description(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Image (link) of the parameter
    # KinCfgAxsTrafoParam
    def Image(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Reference to the documentation of the parameter
    # KinCfgAxsTrafoParam
    def DocRef(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Group of the parameter (might be empty, when this parameter is not part of a group)
    # KinCfgAxsTrafoParam
    def Group(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Expected unit of the parameter (might be empty for unitless parameters
    # KinCfgAxsTrafoParam
    def Unit(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Valid values for the parameter (when it's a string parameter and a kind of enumeration, else empty)
    # KinCfgAxsTrafoParam
    def Values(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # KinCfgAxsTrafoParam
    def ValuesLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # KinCfgAxsTrafoParam
    def ValuesIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        return o == 0

    # Type of the variable
    # KinCfgAxsTrafoParam
    def Type(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 1

def KinCfgAxsTrafoParamStart(builder): builder.StartObject(8)
def KinCfgAxsTrafoParamAddName(builder, name): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)
def KinCfgAxsTrafoParamAddDescription(builder, description): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(description), 0)
def KinCfgAxsTrafoParamAddImage(builder, image): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(image), 0)
def KinCfgAxsTrafoParamAddDocRef(builder, docRef): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(docRef), 0)
def KinCfgAxsTrafoParamAddGroup(builder, group): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(group), 0)
def KinCfgAxsTrafoParamAddUnit(builder, unit): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(unit), 0)
def KinCfgAxsTrafoParamAddValues(builder, values): builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(values), 0)
def KinCfgAxsTrafoParamStartValuesVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def KinCfgAxsTrafoParamAddType(builder, type): builder.PrependInt8Slot(7, type, 1)
def KinCfgAxsTrafoParamEnd(builder): return builder.EndObject()
