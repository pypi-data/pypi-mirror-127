# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbtypes

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# configuration for gantry coupling function of a single axis
class AxsCfgGantry(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsAxsCfgGantry(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = AxsCfgGantry()
        x.Init(buf, n + offset)
        return x

    # AxsCfgGantry
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # is this axis a gantry member?
    # AxsCfgGantry
    def IsMember(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # is moving of this axis allowed, even when it's a gantry member and the gantry connection is not closed?
    # AxsCfgGantry
    def MoveAllowed(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def AxsCfgGantryStart(builder): builder.StartObject(2)
def AxsCfgGantryAddIsMember(builder, isMember): builder.PrependBoolSlot(0, isMember, 0)
def AxsCfgGantryAddMoveAllowed(builder, moveAllowed): builder.PrependBoolSlot(1, moveAllowed, 0)
def AxsCfgGantryEnd(builder): return builder.EndObject()
