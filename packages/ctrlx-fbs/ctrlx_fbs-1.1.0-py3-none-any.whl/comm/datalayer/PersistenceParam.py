# automatically generated by the FlatBuffers compiler, do not modify

# namespace: datalayer

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class PersistenceParam(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsPersistenceParam(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = PersistenceParam()
        x.Init(buf, n + offset)
        return x

    # PersistenceParam
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # PersistenceParam
    def ConfigurationPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # PersistenceParam
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # PersistenceParam
    def Phase(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def PersistenceParamStart(builder): builder.StartObject(3)
def PersistenceParamAddConfigurationPath(builder, configurationPath): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(configurationPath), 0)
def PersistenceParamAddId(builder, id): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(id), 0)
def PersistenceParamAddPhase(builder, phase): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(phase), 0)
def PersistenceParamEnd(builder): return builder.EndObject()
