# automatically generated by the FlatBuffers compiler, do not modify

# namespace: datalayer

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ChangeEvents(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsChangeEvents(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ChangeEvents()
        x.Init(buf, n + offset)
        return x

    # ChangeEvents
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ChangeEvents
    def ValueChange(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 1

    # ChangeEvents
    def BrowselistChange(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # ChangeEvents
    def MetadataChange(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def ChangeEventsStart(builder): builder.StartObject(3)
def ChangeEventsAddValueChange(builder, valueChange): builder.PrependInt32Slot(0, valueChange, 1)
def ChangeEventsAddBrowselistChange(builder, browselistChange): builder.PrependBoolSlot(1, browselistChange, 0)
def ChangeEventsAddMetadataChange(builder, metadataChange): builder.PrependBoolSlot(2, metadataChange, 0)
def ChangeEventsEnd(builder): return builder.EndObject()
