# automatically generated by the FlatBuffers compiler, do not modify

# namespace: framework

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Interface_(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsInterface_(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Interface_()
        x.Init(buf, n + offset)
        return x

    # Interface_
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Interface_
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Interface_
    def Version(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Interface_
    def Language(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Interface_
    def Properties(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from comm.datalayer.framework.Property import Property
            obj = Property()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Interface_
    def PropertiesLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # Interface_
    def PropertiesIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        return o == 0

def Interface_Start(builder): builder.StartObject(4)
def Interface_AddName(builder, name): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)
def Interface_AddVersion(builder, version): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(version), 0)
def Interface_AddLanguage(builder, language): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(language), 0)
def Interface_AddProperties(builder, properties): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(properties), 0)
def Interface_StartPropertiesVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def Interface_End(builder): return builder.EndObject()
