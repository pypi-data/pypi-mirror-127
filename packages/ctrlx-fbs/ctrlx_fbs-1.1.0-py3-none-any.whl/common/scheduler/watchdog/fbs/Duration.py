# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbs

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Duration(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsDuration(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Duration()
        x.Init(buf, n + offset)
        return x

    # Duration
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Duration
    def Time(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # Duration
    def ErrorCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # Duration
    def Reset(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # Duration
    def ErrorReaction(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from common.scheduler.watchdog.fbs.ErrorReaction import ErrorReaction
            obj = ErrorReaction()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def DurationStart(builder): builder.StartObject(4)
def DurationAddTime(builder, time): builder.PrependUint32Slot(0, time, 0)
def DurationAddErrorCount(builder, errorCount): builder.PrependUint32Slot(1, errorCount, 0)
def DurationAddReset(builder, reset): builder.PrependBoolSlot(2, reset, 0)
def DurationAddErrorReaction(builder, errorReaction): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(errorReaction), 0)
def DurationEnd(builder): return builder.EndObject()
