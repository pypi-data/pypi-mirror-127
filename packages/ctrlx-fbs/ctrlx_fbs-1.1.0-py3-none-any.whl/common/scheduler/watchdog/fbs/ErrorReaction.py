# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbs

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ErrorReaction(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsErrorReaction(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ErrorReaction()
        x.Init(buf, n + offset)
        return x

    # ErrorReaction
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ErrorReaction
    def Class_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from common.scheduler.watchdog.errorreaction.fbs.Class import Class
            obj = Class()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ErrorReaction
    def Configuration(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from common.scheduler.watchdog.errorreaction.fbs.Configuration import Configuration
            obj = Configuration()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ErrorReaction
    def MaxConsecutiveErrors(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

def ErrorReactionStart(builder): builder.StartObject(3)
def ErrorReactionAddClass_(builder, class_): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(class_), 0)
def ErrorReactionAddConfiguration(builder, configuration): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(configuration), 0)
def ErrorReactionAddMaxConsecutiveErrors(builder, maxConsecutiveErrors): builder.PrependUint32Slot(2, maxConsecutiveErrors, 0)
def ErrorReactionEnd(builder): return builder.EndObject()
