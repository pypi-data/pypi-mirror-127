# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbtypes

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class DiagInfo(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsDiagInfo(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = DiagInfo()
        x.Init(buf, n + offset)
        return x

    # DiagInfo
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # DiagInfo
    def LastMainDiag(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # DiagInfo
    def LastDetailDiag(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # DiagInfo
    def LastErrText(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # DiagInfo
    def LastErrTrace(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # DiagInfo
    def LastErrTraceLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # DiagInfo
    def LastErrTraceIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        return o == 0

def DiagInfoStart(builder): builder.StartObject(4)
def DiagInfoAddLastMainDiag(builder, lastMainDiag): builder.PrependUint32Slot(0, lastMainDiag, 0)
def DiagInfoAddLastDetailDiag(builder, lastDetailDiag): builder.PrependUint32Slot(1, lastDetailDiag, 0)
def DiagInfoAddLastErrText(builder, lastErrText): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(lastErrText), 0)
def DiagInfoAddLastErrTrace(builder, lastErrTrace): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(lastErrTrace), 0)
def DiagInfoStartLastErrTraceVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def DiagInfoEnd(builder): return builder.EndObject()
