# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbtypes

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class State_AxsActValues(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsState_AxsActValues(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = State_AxsActValues()
        x.Init(buf, n + offset)
        return x

    # State_AxsActValues
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # State_AxsActValues
    def Pos(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # State_AxsActValues
    def DistLeft(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # State_AxsActValues
    def Vel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # State_AxsActValues
    def Acc(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # State_AxsActValues
    def Torque(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

def State_AxsActValuesStart(builder): builder.StartObject(5)
def State_AxsActValuesAddPos(builder, pos): builder.PrependFloat64Slot(0, pos, 0.0)
def State_AxsActValuesAddDistLeft(builder, distLeft): builder.PrependFloat64Slot(1, distLeft, 0.0)
def State_AxsActValuesAddVel(builder, vel): builder.PrependFloat64Slot(2, vel, 0.0)
def State_AxsActValuesAddAcc(builder, acc): builder.PrependFloat64Slot(3, acc, 0.0)
def State_AxsActValuesAddTorque(builder, torque): builder.PrependFloat64Slot(4, torque, 0.0)
def State_AxsActValuesEnd(builder): return builder.EndObject()
