# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbtypes

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class State_KinGetPos(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsState_KinGetPos(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = State_KinGetPos()
        x.Init(buf, n + offset)
        return x

    # State_KinGetPos
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # State_KinGetPos
    def ObjName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # State_KinGetPos
    def CoordSysOut(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def State_KinGetPosStart(builder): builder.StartObject(2)
def State_KinGetPosAddObjName(builder, objName): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(objName), 0)
def State_KinGetPosAddCoordSysOut(builder, coordSysOut): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(coordSysOut), 0)
def State_KinGetPosEnd(builder): return builder.EndObject()
