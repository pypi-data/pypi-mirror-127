# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbtypes

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Misc_ActCmdData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsMisc_ActCmdData(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Misc_ActCmdData()
        x.Init(buf, n + offset)
        return x

    # Misc_ActCmdData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Misc_ActCmdData
    def SrcName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Misc_ActCmdData
    def SrcType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Misc_ActCmdData
    def SrcLine(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

def Misc_ActCmdDataStart(builder): builder.StartObject(3)
def Misc_ActCmdDataAddSrcName(builder, srcName): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(srcName), 0)
def Misc_ActCmdDataAddSrcType(builder, srcType): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(srcType), 0)
def Misc_ActCmdDataAddSrcLine(builder, srcLine): builder.PrependUint64Slot(2, srcLine, 0)
def Misc_ActCmdDataEnd(builder): return builder.EndObject()
