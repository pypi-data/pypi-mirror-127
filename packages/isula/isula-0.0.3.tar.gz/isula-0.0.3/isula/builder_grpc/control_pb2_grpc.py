# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import isula.builder_grpc.control_pb2 as control__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class ControlStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Build = channel.unary_unary(
                '/isula.build.v1.Control/Build',
                request_serializer=control__pb2.BuildRequest.SerializeToString,
                response_deserializer=control__pb2.BuildResponse.FromString,
                )
        self.Status = channel.unary_stream(
                '/isula.build.v1.Control/Status',
                request_serializer=control__pb2.StatusRequest.SerializeToString,
                response_deserializer=control__pb2.StatusResponse.FromString,
                )
        self.List = channel.unary_unary(
                '/isula.build.v1.Control/List',
                request_serializer=control__pb2.ListRequest.SerializeToString,
                response_deserializer=control__pb2.ListResponse.FromString,
                )
        self.Version = channel.unary_unary(
                '/isula.build.v1.Control/Version',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=control__pb2.VersionResponse.FromString,
                )
        self.Push = channel.unary_stream(
                '/isula.build.v1.Control/Push',
                request_serializer=control__pb2.PushRequest.SerializeToString,
                response_deserializer=control__pb2.PushResponse.FromString,
                )
        self.Pull = channel.unary_stream(
                '/isula.build.v1.Control/Pull',
                request_serializer=control__pb2.PullRequest.SerializeToString,
                response_deserializer=control__pb2.PullResponse.FromString,
                )
        self.Remove = channel.unary_stream(
                '/isula.build.v1.Control/Remove',
                request_serializer=control__pb2.RemoveRequest.SerializeToString,
                response_deserializer=control__pb2.RemoveResponse.FromString,
                )
        self.HealthCheck = channel.unary_unary(
                '/isula.build.v1.Control/HealthCheck',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=control__pb2.HealthCheckResponse.FromString,
                )
        self.Login = channel.unary_unary(
                '/isula.build.v1.Control/Login',
                request_serializer=control__pb2.LoginRequest.SerializeToString,
                response_deserializer=control__pb2.LoginResponse.FromString,
                )
        self.Logout = channel.unary_unary(
                '/isula.build.v1.Control/Logout',
                request_serializer=control__pb2.LogoutRequest.SerializeToString,
                response_deserializer=control__pb2.LogoutResponse.FromString,
                )
        self.Load = channel.unary_stream(
                '/isula.build.v1.Control/Load',
                request_serializer=control__pb2.LoadRequest.SerializeToString,
                response_deserializer=control__pb2.LoadResponse.FromString,
                )
        self.Import = channel.unary_stream(
                '/isula.build.v1.Control/Import',
                request_serializer=control__pb2.ImportRequest.SerializeToString,
                response_deserializer=control__pb2.ImportResponse.FromString,
                )
        self.Tag = channel.unary_unary(
                '/isula.build.v1.Control/Tag',
                request_serializer=control__pb2.TagRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.Save = channel.unary_stream(
                '/isula.build.v1.Control/Save',
                request_serializer=control__pb2.SaveRequest.SerializeToString,
                response_deserializer=control__pb2.SaveResponse.FromString,
                )
        self.Info = channel.unary_unary(
                '/isula.build.v1.Control/Info',
                request_serializer=control__pb2.InfoRequest.SerializeToString,
                response_deserializer=control__pb2.InfoResponse.FromString,
                )
        self.ManifestCreate = channel.unary_unary(
                '/isula.build.v1.Control/ManifestCreate',
                request_serializer=control__pb2.ManifestCreateRequest.SerializeToString,
                response_deserializer=control__pb2.ManifestCreateResponse.FromString,
                )
        self.ManifestAnnotate = channel.unary_unary(
                '/isula.build.v1.Control/ManifestAnnotate',
                request_serializer=control__pb2.ManifestAnnotateRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ManifestInspect = channel.unary_unary(
                '/isula.build.v1.Control/ManifestInspect',
                request_serializer=control__pb2.ManifestInspectRequest.SerializeToString,
                response_deserializer=control__pb2.ManifestInspectResponse.FromString,
                )
        self.ManifestPush = channel.unary_stream(
                '/isula.build.v1.Control/ManifestPush',
                request_serializer=control__pb2.ManifestPushRequest.SerializeToString,
                response_deserializer=control__pb2.ManifestPushResponse.FromString,
                )


class ControlServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Build(self, request, context):
        """Build requests a new image building
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Status(self, request, context):
        """Status pipes the image building process log back to client
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def List(self, request, context):
        """List lists all images in isula-builder
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Version(self, request, context):
        """Version requests version information of isula-builder
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Push(self, request, context):
        """Push pushes image to remote repository
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Pull(self, request, context):
        """Pull pulls image from remote repository
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Remove(self, request, context):
        """Remove sends an image remove request to isula-builder
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HealthCheck(self, request, context):
        """HealthCheck requests a health checking in isula-builder
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Login(self, request, context):
        """Login requests to access image registry with username and password
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Logout(self, request, context):
        """Logout requests to logout registry and delete any credentials
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Load(self, request, context):
        """Load requests an image tar load
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Import(self, request, context):
        """Import requests import a new image
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Tag(self, request, context):
        """Tag requests to tag an image
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Save(self, request, context):
        """Save saves the image to tarball
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Info(self, request, context):
        """Info requests isula-build system information
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ManifestCreate(self, request, context):
        """ManifestCreate requests to create manifest list
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ManifestAnnotate(self, request, context):
        """ManifestAnnotate requests to annotate manifest list
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ManifestInspect(self, request, context):
        """ManifestInspect requests to inspect manifest list
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ManifestPush(self, request, context):
        """ManifestPush requests to push manifest list
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ControlServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Build': grpc.unary_unary_rpc_method_handler(
                    servicer.Build,
                    request_deserializer=control__pb2.BuildRequest.FromString,
                    response_serializer=control__pb2.BuildResponse.SerializeToString,
            ),
            'Status': grpc.unary_stream_rpc_method_handler(
                    servicer.Status,
                    request_deserializer=control__pb2.StatusRequest.FromString,
                    response_serializer=control__pb2.StatusResponse.SerializeToString,
            ),
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=control__pb2.ListRequest.FromString,
                    response_serializer=control__pb2.ListResponse.SerializeToString,
            ),
            'Version': grpc.unary_unary_rpc_method_handler(
                    servicer.Version,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=control__pb2.VersionResponse.SerializeToString,
            ),
            'Push': grpc.unary_stream_rpc_method_handler(
                    servicer.Push,
                    request_deserializer=control__pb2.PushRequest.FromString,
                    response_serializer=control__pb2.PushResponse.SerializeToString,
            ),
            'Pull': grpc.unary_stream_rpc_method_handler(
                    servicer.Pull,
                    request_deserializer=control__pb2.PullRequest.FromString,
                    response_serializer=control__pb2.PullResponse.SerializeToString,
            ),
            'Remove': grpc.unary_stream_rpc_method_handler(
                    servicer.Remove,
                    request_deserializer=control__pb2.RemoveRequest.FromString,
                    response_serializer=control__pb2.RemoveResponse.SerializeToString,
            ),
            'HealthCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.HealthCheck,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=control__pb2.HealthCheckResponse.SerializeToString,
            ),
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=control__pb2.LoginRequest.FromString,
                    response_serializer=control__pb2.LoginResponse.SerializeToString,
            ),
            'Logout': grpc.unary_unary_rpc_method_handler(
                    servicer.Logout,
                    request_deserializer=control__pb2.LogoutRequest.FromString,
                    response_serializer=control__pb2.LogoutResponse.SerializeToString,
            ),
            'Load': grpc.unary_stream_rpc_method_handler(
                    servicer.Load,
                    request_deserializer=control__pb2.LoadRequest.FromString,
                    response_serializer=control__pb2.LoadResponse.SerializeToString,
            ),
            'Import': grpc.unary_stream_rpc_method_handler(
                    servicer.Import,
                    request_deserializer=control__pb2.ImportRequest.FromString,
                    response_serializer=control__pb2.ImportResponse.SerializeToString,
            ),
            'Tag': grpc.unary_unary_rpc_method_handler(
                    servicer.Tag,
                    request_deserializer=control__pb2.TagRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Save': grpc.unary_stream_rpc_method_handler(
                    servicer.Save,
                    request_deserializer=control__pb2.SaveRequest.FromString,
                    response_serializer=control__pb2.SaveResponse.SerializeToString,
            ),
            'Info': grpc.unary_unary_rpc_method_handler(
                    servicer.Info,
                    request_deserializer=control__pb2.InfoRequest.FromString,
                    response_serializer=control__pb2.InfoResponse.SerializeToString,
            ),
            'ManifestCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.ManifestCreate,
                    request_deserializer=control__pb2.ManifestCreateRequest.FromString,
                    response_serializer=control__pb2.ManifestCreateResponse.SerializeToString,
            ),
            'ManifestAnnotate': grpc.unary_unary_rpc_method_handler(
                    servicer.ManifestAnnotate,
                    request_deserializer=control__pb2.ManifestAnnotateRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ManifestInspect': grpc.unary_unary_rpc_method_handler(
                    servicer.ManifestInspect,
                    request_deserializer=control__pb2.ManifestInspectRequest.FromString,
                    response_serializer=control__pb2.ManifestInspectResponse.SerializeToString,
            ),
            'ManifestPush': grpc.unary_stream_rpc_method_handler(
                    servicer.ManifestPush,
                    request_deserializer=control__pb2.ManifestPushRequest.FromString,
                    response_serializer=control__pb2.ManifestPushResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'isula.build.v1.Control', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Control(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Build(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/isula.build.v1.Control/Build',
            control__pb2.BuildRequest.SerializeToString,
            control__pb2.BuildResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Status(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/isula.build.v1.Control/Status',
            control__pb2.StatusRequest.SerializeToString,
            control__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/isula.build.v1.Control/List',
            control__pb2.ListRequest.SerializeToString,
            control__pb2.ListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Version(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/isula.build.v1.Control/Version',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            control__pb2.VersionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Push(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/isula.build.v1.Control/Push',
            control__pb2.PushRequest.SerializeToString,
            control__pb2.PushResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Pull(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/isula.build.v1.Control/Pull',
            control__pb2.PullRequest.SerializeToString,
            control__pb2.PullResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Remove(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/isula.build.v1.Control/Remove',
            control__pb2.RemoveRequest.SerializeToString,
            control__pb2.RemoveResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HealthCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/isula.build.v1.Control/HealthCheck',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            control__pb2.HealthCheckResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/isula.build.v1.Control/Login',
            control__pb2.LoginRequest.SerializeToString,
            control__pb2.LoginResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Logout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/isula.build.v1.Control/Logout',
            control__pb2.LogoutRequest.SerializeToString,
            control__pb2.LogoutResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Load(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/isula.build.v1.Control/Load',
            control__pb2.LoadRequest.SerializeToString,
            control__pb2.LoadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Import(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/isula.build.v1.Control/Import',
            control__pb2.ImportRequest.SerializeToString,
            control__pb2.ImportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Tag(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/isula.build.v1.Control/Tag',
            control__pb2.TagRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Save(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/isula.build.v1.Control/Save',
            control__pb2.SaveRequest.SerializeToString,
            control__pb2.SaveResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/isula.build.v1.Control/Info',
            control__pb2.InfoRequest.SerializeToString,
            control__pb2.InfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ManifestCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/isula.build.v1.Control/ManifestCreate',
            control__pb2.ManifestCreateRequest.SerializeToString,
            control__pb2.ManifestCreateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ManifestAnnotate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/isula.build.v1.Control/ManifestAnnotate',
            control__pb2.ManifestAnnotateRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ManifestInspect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/isula.build.v1.Control/ManifestInspect',
            control__pb2.ManifestInspectRequest.SerializeToString,
            control__pb2.ManifestInspectResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ManifestPush(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/isula.build.v1.Control/ManifestPush',
            control__pb2.ManifestPushRequest.SerializeToString,
            control__pb2.ManifestPushResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
