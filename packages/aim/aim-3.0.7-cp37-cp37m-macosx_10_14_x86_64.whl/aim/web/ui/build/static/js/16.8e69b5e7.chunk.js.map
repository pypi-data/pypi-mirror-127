{"version":3,"sources":["services/analytics.ts","config/colors/colors.ts","components/BusyLoaderWrapper/BusyLoaderWrapper.tsx","assets/icons/noData.svg","components/EmptyComponent/EmptyComponent.tsx","components/AppBar/AppBar.tsx","services/api/apps/appsService.ts","services/api/dashboard/dashboardService.ts","components/ConfirmModal/ConfirmModal.tsx","components/CopyToClipBoard/CopyToClipBoard.tsx","components/CodeBlock/CodeBlock.tsx","services/models/bookmarks/bookmarksAppModel.ts","pages/Bookmarks/components/BookmarkCard/BookmarkCard.tsx","pages/Bookmarks/Bookmarks.tsx","pages/Bookmarks/BookmarksContainer.tsx"],"names":["SEGMENT_DEMO_WRITE_KEY","SEGMENT_WRITE_KEY","initialized","enabled","window","analytics","telemetry_enabled","init","location","hostname","indexOf","_writeKey","load","pageView","pageName","pageCat","page","path","pathname","url","search","referrer","title","trackEvent","eventName","properties","track","COLORS","BusyLoaderWrapper","isLoading","className","children","loaderType","loaderConfig","width","height","loaderComponent","style","loaderRender","React","memo","EmptyComponent","content","img","size","src","noData","alt","AppBar","props","component","weight","tint","endpoints","APPS","appsService","fetchAppsList","API","get","fetchApp","id","createApp","reqBody","post","updateApp","put","deleteApp","delete","DASHBOARD","dashboardService","createDashboard","headers","fetchDashboardsList","fetchDashboard","updateDashboard","deleteDashboard","ConfirmModal","open","onClose","onCancel","aria-labelledby","aria-describedby","PaperProps","elevation","icon","text","onClick","cancelBtnText","onSubmit","color","variant","autoFocus","confirmBtnText","defaultProps","displayName","CopyToClipboard","contentRef","showSuccessDelay","useState","showCopiedIcon","setShowCopiedIcon","useEffect","setTimeout","onCopy","useCallback","current","navigator","clipboard","writeText","innerText","trim","then","catch","fontSize","name","CodeBlock","code","language","createRef","theme","tokens","getLineProps","getTokenProps","ref","map","line","i","key","token","CopyToClipBoard","model","createModel","listData","a","setState","call","getState","newListData","filter","bookmark","console","log","bookmarkAppModel","initialize","getBookmarksData","data","appsList","item","app","find","appData","app_id","select","state","type","abort","onBookmarkDelete","BookmarkCard","description","openModal","setOpenModal","tags","useMemo","val","label","to","withOnlyIcon","advancedMode","advancedQuery","query","length","tag","index","Bookmarks","BookmarksContainer","bookmarksRequestRef","useRef","bookmarksData","useModel"],"mappings":";iGAAA,oEACO,IAAMA,EAAyB,mCACzBC,EAAoB,mCAKjC,IAAIC,GAAc,EAEZC,EAAU,WACd,OACoC,IAArBC,OAAOC,WAAqD,IAA7BD,OAAOE,mBAIjDC,EAAO,WACPL,KAEmD,IAArDE,OAAOI,SAASC,SAASC,QAAQ,iBACc,IAA9CN,OAAOI,SAASC,SAASC,QAAQ,UACc,IAA9CN,OAAOI,SAASC,SAASC,QAAQ,SAKnCN,OAAOC,UAAUM,UAAYV,EAC7BG,OAAOC,UAAUO,KAAKX,KAJtBG,OAAOC,UAAUM,UAAYX,EAC7BI,OAAOC,UAAUO,KAAKZ,IAKxBE,GAAc,IAGVW,EAAW,SAACC,GAA8B,IAApBC,EAAmB,uDAAT,KAC/BZ,MACLI,IACAH,OAAOC,UAAUW,KAAKD,EAASD,EAAU,CACvCG,KAAMb,OAAOI,SAASU,SACtBC,IAAKf,OAAOI,SAASC,SACrBW,OAAQ,KACRC,SAAU,KACVC,MAAO,SAILC,EAAa,SAACC,GAAwC,IAArBC,EAAoB,uDAAP,GAC7CtB,MACLI,IAEAH,OAAOC,UAAUqB,MAAMF,EAAWC,EAAY,CAC5CR,KAAMb,OAAOI,SAASU,SACtBC,IAAKf,OAAOI,SAASC,SACrBO,KAAM,CACJC,KAAM,KACNG,OAAQ,KACRC,SAAU,KACVC,MAAO,KACPH,IAAK,W,iCChBIQ,IAvCiB,CAC9B,CACE,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEF,CACE,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,a,8FC7BJ,SAASC,EAAT,GASqF,IAAD,IARlFC,iBAQkF,aAPlFC,iBAOkF,MAPtE,GAOsE,EANlFC,EAMkF,EANlFA,SAMkF,IALlFC,kBAKkF,MALrE,UAKqE,MAJlFC,oBAIkF,MAJnE,GAImE,MAHlFC,aAGkF,MAH1E,OAG0E,MAFlFC,cAEkF,MAFzE,OAEyE,EADlFC,EACkF,EADlFA,gBAYA,OAAOP,EACL,qBAAKC,UAAS,4BAAuBA,GAAaO,MAAO,CAAEH,QAAOC,UAAlE,SACGC,GAZL,WACE,OAAQJ,GACN,IAAK,WACH,OAAO,cAAC,IAAD,eAAcC,IAEvB,QACE,OAAO,cAAC,IAAD,eAAsBA,KAMXK,KAEpBP,GAEA,KAGSQ,QAAMC,KAAKZ,I,4CCnCX,G,OAAA,IAA0B,oC,OCIzC,SAASa,EAAT,GAM0D,IALxDnB,EAKuD,EALvDA,MAKuD,IAJvDoB,eAIuD,MAJ7C,UAI6C,EAHvDC,EAGuD,EAHvDA,IAGuD,IAFvDb,iBAEuD,MAF3C,GAE2C,MADvDc,YACuD,MADhD,QACgD,EACvD,OACE,sBAAKd,UAAS,yBAAoBA,GAAlC,UACE,qBAAKA,UAAS,0BAAqBc,EAArB,SAAd,SACGD,GAAO,qBAAKE,IAAKC,EAAQC,IAAI,OAEhC,mBAAGjB,UAAS,0BAAqBc,EAArB,WAAZ,SAAiDtB,IACjD,mBAAGQ,UAAS,0BAAqBc,EAArB,aAAZ,SAAmDF,OAK1CF,mBAAKC,I,6ECtBpB,iCA6BeO,IAvBf,SACEC,GAEA,OACE,sBAAKnB,UAAU,oBAAf,UACE,cAAC,IAAD,CACEoB,UAAU,KACVC,OAAQ,IACRP,KAAM,GACNQ,KAAM,IACNtB,UAAU,gBALZ,SAOGmB,EAAM3B,QAER2B,EAAMlB,UACL,qBAAKD,UAAS,0BAAqBmB,EAAMnB,WAAa,IAAtD,SACGmB,EAAMlB,gB,uDCtBjB,YAKMsB,EAAY,CAChBC,KAAM,QAsBR,IAAMC,EAAc,CAClBF,YACAG,cArBF,WACE,OAAOC,IAAIC,IAAIL,EAAUC,OAqBzBK,SAlBF,SAAkBC,GAChB,OAAOH,IAAIC,IAAJ,UAAWL,EAAUC,KAArB,YAA6BM,KAkBpCC,UAfF,SAAmBC,GACjB,OAAOL,IAAIM,KAAKV,EAAUC,KAAMQ,IAehCE,UAZF,SAAmBJ,EAAYE,GAC7B,OAAOL,IAAIQ,IAAJ,UAAWZ,EAAUC,KAArB,YAA6BM,GAAME,IAY1CI,UATF,SAAmBN,GACjB,OAAOH,IAAIU,OAAJ,UAAcd,EAAUC,KAAxB,YAAgCM,MAW1BL,O,iCCrCf,YAOMF,EAAY,CAChBe,UAAW,cA8Bb,IAAMC,EAAmB,CACvBhB,YACAiB,gBArBF,SACER,GAEA,OAAOL,IAAIM,KAAKV,EAAUe,UAAWN,EAAS,CAC5CS,QAAS,CAAE,eAAgB,uBAkB7BC,oBA9BF,WACE,OAAOf,IAAIC,IAAIL,EAAUe,YA8BzBK,eA3BF,SAAwBb,GACtB,OAAOH,IAAIC,IAAJ,UAAWL,EAAUe,UAArB,YAAkCR,KA2BzCc,gBAhBF,SACEd,EACAE,GAEA,OAAOL,IAAIQ,IAAJ,UAAWZ,EAAUe,UAArB,YAAkCR,GAAME,IAa/Ca,gBAVF,SAAyBf,GACvB,OAAOH,IAAIU,OAAJ,UAAcd,EAAUe,UAAxB,YAAqCR,MAY/BS,O,iCC/Cf,uEAOA,SAASO,EACP3B,GAEA,OACE,eAAC,IAAD,CACE4B,KAAM5B,EAAM4B,KACZC,QAAS7B,EAAM8B,SACfC,kBAAgB,eAChBC,mBAAiB,qBACjBC,WAAY,CACVC,UAAW,IANf,UASE,sBAAKrD,UAAU,qBAAf,UACE,qBAAKA,UAAU,kCAAf,SAAkDmB,EAAMmC,OACxD,sBAAKtD,UAAU,WAAf,UACGmB,EAAM3B,OACL,cAAC,IAAD,CAAaQ,UAAU,sBAAsB8B,GAAG,eAAhD,SACGX,EAAM3B,QAIX,sBAAKQ,UAAU,wBAAf,UACGmB,EAAMoC,MACL,cAAC,IAAD,CAAmBvD,UAAU,OAAO8B,GAAG,qBAAvC,SACGX,EAAMoC,MAAQ,KAGlBpC,EAAMlB,UAAYkB,EAAMlB,kBAI/B,sBAAKD,UAAU,uBAAf,UACE,cAAC,IAAD,CAAQwD,QAASrC,EAAM8B,SAAUjD,UAAU,6BAA3C,SACGmB,EAAMsC,gBAGT,cAAC,IAAD,CACED,QAASrC,EAAMuC,SACfC,MAAM,UACNC,QAAQ,YACRC,WAAS,EAJX,SAMG1C,EAAM2C,uBAOjBhB,EAAaiB,aAAe,CAC1BD,eAAgB,UAChBL,cAAe,UAGjBX,EAAakB,YAAc,eAEZvD,QAAMC,KAAyBoC,I,iJC3D9C,SAASmB,EAAT,GAIkF,IAHhFC,EAG+E,EAH/EA,WAG+E,IAF/EC,wBAE+E,MAF5D,KAE4D,MAD/EnE,iBAC+E,MADnE,GACmE,EAC/E,EAA4CS,IAAM2D,UAAkB,GAApE,mBAAOC,EAAP,KAAuBC,EAAvB,KAEA7D,IAAM8D,WAAU,WACVF,GACFG,YAAW,WACTF,GAAkB,KACjBH,KAEJ,CAACE,IAEJ,IAAMI,EAAShE,IAAMiE,aAAY,WAC3BR,EAAWS,UAAYN,GACzBO,UAAUC,UACPC,UAAUZ,EAAWS,QAAQI,UAAUC,KAAK,KAC5CC,MAAK,WACJX,GAAkB,MAEnBY,UAEJ,CAAChB,EAAYG,IAEhB,OACE,sBAAMrE,UAAWA,EAAWwD,QAASiB,EAArC,SACGJ,EACC,sBAAM9D,MAAO,CAAEoD,MAAO,QAASwB,SAAU,IAAzC,qBAEA,cAAC,IAAD,CAAMC,KAAK,WAMnBnB,EAAgBD,YAAc,kBAEfvD,UAAMC,KAA4BuD,G,OClCjD,SAASoB,EAAT,GAIsE,IAAD,IAHnEC,YAGmE,MAH5D,GAG4D,MAFnEtF,iBAEmE,MAFvD,GAEuD,MADnEuF,gBACmE,MADxD,SACwD,EAC7DrB,EAAazD,IAAM+E,YACzB,OACE,sBAAKxF,UAAS,oBAAeA,GAA7B,UACE,cAAC,IAAD,2BACM+D,KADN,IAEE0B,MAAOA,IACPH,KAAMA,EAAKN,OACXO,SAAUA,EAJZ,SAMG,gBAAGvF,EAAH,EAAGA,UAAWO,EAAd,EAAcA,MAAOmF,EAArB,EAAqBA,OAAQC,EAA7B,EAA6BA,aAAcC,EAA3C,EAA2CA,cAA3C,OACC,qBAAK5F,UAAWA,EAAWO,MAAOA,EAAOsF,IAAK3B,EAA9C,SACGwB,EAAOI,KAAI,SAACC,EAAMC,GAAP,OACV,+CAAiBL,EAAa,CAAEI,OAAME,IAAKD,KAA3C,aACGD,EAAKD,KAAI,SAACI,EAAOD,GAAR,OACR,oCAAoBL,EAAc,CAAEM,QAAOD,SAAhCA,QAFLD,YASlB,cAACG,EAAD,CACEnG,UAAU,wBACVkE,WAAYA,OAMLzD,QAAMC,KAAK2E,I,4LCrCpBe,EAAQC,YAA8C,CAC1DtG,WAAW,EACXuG,SAAU,K,4CAwBZ,WAAgCxE,GAAhC,mBAAAyE,EAAA,sEAEIH,EAAMI,SAAS,CAAEzG,WAAW,IAFhC,SAGUwC,IAAiBM,gBAAgBf,GAAI2E,OAH/C,OAIUH,EAJV,UAI6CF,EAAMM,kBAJnD,aAI6C,EAAkBJ,SACrDK,EAAc,YAAIL,GAAUM,QAAO,SAACC,GAAD,OAAcA,EAAS/E,KAAOA,KACvEsE,EAAMI,SAAS,CACbF,SAAUK,EACV5G,WAAW,IAEbxB,IAAqB,iCAVzB,kDAYIuI,QAAQC,IAAR,MAZJ,2D,sBAkBA,IAOeC,EAPO,2BACjBZ,GADiB,IAEpBa,WALF,WACEb,EAAM3H,QAKNyI,iBA1CF,WACE,MAAwB3E,IAAiBG,sBAAjC+D,EAAR,EAAQA,KACR,MAAO,CACLA,KAAM,kBACJA,IAAOxB,KAAP,uCAAY,WAAOkC,GAAP,iBAAAZ,EAAA,sEACa9E,IAAYC,gBAAgB+E,OADzC,OACJW,EADI,OAEJd,EAAWa,EAAKrB,KAAI,SAACuB,GACzB,IAAMC,EAAMF,EAASG,MACnB,SAACC,GAAD,OAAkBA,EAAQ1F,KAAOuF,EAAKI,UAExC,OAAO,2BAAKJ,GAAZ,IAAkBK,OAAQJ,EAAIK,MAAMD,OAAQE,KAAMN,EAAIM,UAExDxB,EAAMI,SAAS,CACbzG,WAAW,EACXuG,aAVQ,2CAAZ,wDAaFuB,MAhBF,EAAcA,QA0CdC,iB,iHCoDaC,MA9Ff,YAQyE,IAPvE3C,EAOsE,EAPtEA,KACAtD,EAMsE,EANtEA,GACA2F,EAKsE,EALtEA,OACAO,EAIsE,EAJtEA,YACAF,EAGsE,EAHtEA,iBACAJ,EAEsE,EAFtEA,OACAE,EACsE,EADtEA,KAEA,EAAkCnH,IAAM2D,UAAkB,GAA1D,mBAAO6D,EAAP,KAAkBC,EAAlB,KAaMC,EACJ1H,IAAM2H,SAAQ,WAAO,IAAD,EAClB,iBAAOV,EAAOE,UAAd,aAAO,EAAc9B,KAAI,SAACuC,GAAD,MAAe,CAAEC,MAAOD,EAAIC,YACpD,CAACZ,KAAY,GAElB,OACE,sBAAK1H,UAAU,0BAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,sBAAKA,UAAU,+BAAf,UACE,sBAAMA,UAAU,sBAAhB,SAAuCoF,IACvC,sBAAKpF,UAAU,eAAf,UACE,cAAC,IAAD,CAASuI,GAAE,WAAMX,EAAN,YAAcH,GAAzB,SACE,cAAC,IAAD,CACE7D,QAAQ,WACRJ,QAAS,kBACPjF,IAAqB,8BAHzB,6BASF,sBAAMyB,UAAU,uBAAhB,SACE,cAAC,IAAD,CAAQ2D,MAAM,YAAY6E,cAAY,EAAChF,QAjCnD,WACE0E,GAAa,IAgCH,SACE,cAAC,IAAD,CAAM9C,KAAK,qBAKnB,4BAAI4C,OAELN,EAAOe,aACN,qBAAKzI,UAAU,uBAAf,SACE,qBAAKA,UAAU,gCAAf,SACE,cAACqF,EAAA,EAAD,CAAWC,KAAMoC,EAAOgB,oBAI5B,qCACGhB,EAAOiB,OACN,qBAAK3I,UAAU,uBAAf,SACE,qBAAKA,UAAU,gCAAf,SACE,cAACqF,EAAA,EAAD,CAAWC,KAAMoC,EAAOiB,YAI7BR,EAAKS,OAAS,GACb,qBAAK5I,UAAU,oDAAf,SACGmI,EAAKrC,KAAI,SAAC+C,EAAKC,GACd,OACE,cAAC,IAAD,CAEER,MAAOO,EAAIP,MACX3E,MAAO9D,IAAO,GAAGiJ,EAAQjJ,IAAO,GAAG+I,SAF9BC,EAAIP,eAUvB,cAACxF,EAAA,EAAD,CACEC,KAAMkF,EACNhF,SAtEN,WACEiF,GAAa,IAsETxE,SAnEN,WACEoE,EAAiBhG,IAmEbyB,KAAK,iDACLD,KAAM,cAAC,IAAD,CAAM8B,KAAK,WACjB5F,MAAM,sB,oCChECuJ,MA3Bf,YAIsE,IAHpE5B,EAGmE,EAHnEA,KACAW,EAEmE,EAFnEA,iBACA/H,EACmE,EADnEA,UAEA,OACE,0BAASC,UAAU,YAAnB,UACE,cAACkB,EAAA,EAAD,CAAQ1B,MAAM,cACd,sBAAKQ,UAAU,4BAAf,UACE,cAACF,EAAA,EAAD,CAAmBC,UAAWA,EAA9B,UACO,OAAJoH,QAAI,IAAJA,OAAA,EAAAA,EAAMyB,QAAS,GACdzB,EAAKrB,KAAI,SAACe,GAAD,OACP,cAAC,EAAD,2BAEMA,GAFN,IAGEiB,iBAAkBA,IAFbjB,EAAS/E,SAMpB/B,GAA8B,KAAb,OAAJoH,QAAI,IAAJA,OAAA,EAAAA,EAAMyB,QAEjB,KADF,cAACjI,EAAA,EAAD,CAAgBG,KAAK,MAAMF,QAAS,wBCA/BoI,UAtBf,WACE,IAAMC,EAAsBxI,IAAMyI,OAAOlC,EAAiBE,oBACpDiC,EAAgBC,YAASpC,GAW/B,OATAvG,IAAM8D,WAAU,WAId,OAHAyC,EAAiBC,aACjBgC,EAAoBtE,QAAQ8B,OAC5BlI,IAAmB,eACZ,WACL0K,EAAoBtE,QAAQkD,WAE7B,IAGD,cAAC,EAAD,CACEV,KAAI,OAAEgC,QAAF,IAAEA,OAAF,EAAEA,EAAe7C,SACrBvG,UAAS,OAAEoJ,QAAF,IAAEA,OAAF,EAAEA,EAAepJ,UAC1B+H,iBAAkBd,EAAiBc","file":"static/js/16.8e69b5e7.chunk.js","sourcesContent":["//@ts-nocheck\nexport const SEGMENT_DEMO_WRITE_KEY = 'Rj1I4AisLSvsvAnPW7OqkoYBUTXJRBHK';\nexport const SEGMENT_WRITE_KEY = 'RrVqLHHD6WDXoFBkodO9KidodTtU92XO';\nexport function isDev() {\n  return process.env.NODE_ENV === 'development';\n}\n\nlet initialized = false;\n\nconst enabled = () => {\n  return (\n    (!isDev() && window.analytics !== false) || window.telemetry_enabled !== 0\n  ); //!isDev() && cookies.getCookie(configs.USER_ANALYTICS_COOKIE_NAME) == 1;\n};\n\nconst init = () => {\n  if (initialized) return;\n  if (\n    window.location.hostname.indexOf('aimstack.io') !== -1 &&\n    (window.location.hostname.indexOf('demo') !== -1 ||\n      window.location.hostname.indexOf('play') !== -1)\n  ) {\n    window.analytics._writeKey = SEGMENT_DEMO_WRITE_KEY;\n    window.analytics.load(SEGMENT_DEMO_WRITE_KEY);\n  } else {\n    window.analytics._writeKey = SEGMENT_WRITE_KEY;\n    window.analytics.load(SEGMENT_WRITE_KEY);\n  }\n  initialized = true;\n};\n\nconst pageView = (pageName, pageCat = null) => {\n  if (!enabled()) return;\n  init();\n  window.analytics.page(pageCat, pageName, {\n    path: window.location.pathname,\n    url: window.location.hostname,\n    search: null,\n    referrer: null,\n    title: null,\n  });\n};\n\nconst trackEvent = (eventName: string, properties = {}) => {\n  if (!enabled()) return;\n  init();\n\n  window.analytics.track(eventName, properties, {\n    path: window.location.pathname,\n    url: window.location.hostname,\n    page: {\n      path: null,\n      search: null,\n      referrer: null,\n      title: null,\n      url: null,\n    },\n  });\n};\n\nexport { init, pageView, trackEvent };\n","const COLORS: Array<string[]> = [\n  [\n    '#3E72E7',\n    '#18AB6D',\n    '#7A4CE0',\n    '#E149A0',\n    '#E43D3D',\n    '#E8853D',\n    '#0394B4',\n    '#729B1B',\n  ],\n  [\n    '#336699',\n    '#339966',\n    '#993399',\n    '#999966',\n    '#669966',\n    '#663333',\n    '#669999',\n    '#663366',\n    '#666633',\n    '#996666',\n    '#999933',\n    '#669933',\n    '#663399',\n    '#666699',\n    '#993366',\n    '#996633',\n    '#996699',\n    '#339999',\n    '#333366',\n    '#336633',\n    '#333399',\n    '#339933',\n    '#336666',\n    '#FD7272',\n  ],\n];\n\nexport default COLORS;\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Skeleton } from '@material-ui/lab';\nimport { IBusyLoaderWrapperProps } from 'types/components/BusyLoaderWrapper/BusyLoaderWrapper';\nimport './BusyLoaderWrapper.scss';\n\nfunction BusyLoaderWrapper({\n  isLoading = false,\n  className = '',\n  children,\n  loaderType = 'spinner',\n  loaderConfig = {},\n  width = '100%',\n  height = 'auto',\n  loaderComponent,\n}: IBusyLoaderWrapperProps): React.FunctionComponentElement<React.ReactNode> | null {\n  function loaderRender(): React.ReactElement {\n    switch (loaderType) {\n      case 'skeleton': {\n        return <Skeleton {...loaderConfig} />;\n      }\n      default: {\n        return <CircularProgress {...loaderConfig} />;\n      }\n    }\n  }\n  return isLoading ? (\n    <div className={`BusyLoaderWrapper ${className}`} style={{ width, height }}>\n      {loaderComponent || loaderRender()}\n    </div>\n  ) : children ? (\n    children\n  ) : null;\n}\n\nexport default React.memo(BusyLoaderWrapper);\n","export default __webpack_public_path__ + \"static/media/noData.3ca2c2cf.svg\";","import React, { memo } from 'react';\nimport './EmptyComponent.scss';\nimport noData from '../../assets/icons/noData.svg';\n\nfunction EmptyComponent({\n  title,\n  content = 'No Data',\n  img,\n  className = '',\n  size = 'small',\n}: any): React.FunctionComponentElement<React.ReactNode> {\n  return (\n    <div className={`EmptyComponent ${className}`}>\n      <div className={`EmptyComponent__${size}__img`}>\n        {img || <img src={noData} alt='' />}\n      </div>\n      <p className={`EmptyComponent__${size}__title`}>{title}</p>\n      <p className={`EmptyComponent__${size}__content`}>{content}</p>\n    </div>\n  );\n}\n\nexport default memo(EmptyComponent);\n","import { Text } from 'components/kit';\nimport React from 'react';\nimport { IAppBarProps } from 'types/components/AppBar/AppBar';\n\nimport './AppBar.scss';\n\nfunction AppBar(\n  props: IAppBarProps,\n): React.FunctionComponentElement<React.ReactNode> {\n  return (\n    <div className='AppBar__container'>\n      <Text\n        component='h3'\n        weight={600}\n        size={14}\n        tint={100}\n        className='AppBar__title'\n      >\n        {props.title}\n      </Text>\n      {props.children && (\n        <div className={`AppBar__content ${props.className || ''}`}>\n          {props.children}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AppBar;\n","import API from '../api';\n\nimport { IAppData } from 'types/services/models/metrics/metricsAppModel';\nimport { IApiRequest } from 'types/services/services';\n\nconst endpoints = {\n  APPS: 'apps',\n};\n\nfunction fetchAppsList(): IApiRequest<IAppData[]> {\n  return API.get(endpoints.APPS);\n}\n\nfunction fetchApp(id: string): IApiRequest<IAppData> {\n  return API.get(`${endpoints.APPS}/${id}`);\n}\n\nfunction createApp(reqBody: IAppData): IApiRequest<IAppData> {\n  return API.post(endpoints.APPS, reqBody);\n}\n\nfunction updateApp(id: string, reqBody: IAppData): IApiRequest<IAppData> {\n  return API.put(`${endpoints.APPS}/${id}`, reqBody);\n}\n\nfunction deleteApp(id: string): IApiRequest<any> {\n  return API.delete(`${endpoints.APPS}/${id}`);\n}\nconst appsService = {\n  endpoints,\n  fetchAppsList,\n  fetchApp,\n  createApp,\n  updateApp,\n  deleteApp,\n};\n\nexport default appsService;\n","import API from '../api';\nimport {\n  IAppData,\n  IDashboardRequestBody,\n} from 'types/services/models/metrics/metricsAppModel';\nimport { IApiRequest } from 'types/services/services';\n\nconst endpoints = {\n  DASHBOARD: 'dashboards',\n};\n\nfunction fetchDashboardsList(): IApiRequest<any> {\n  return API.get(endpoints.DASHBOARD);\n}\n\nfunction fetchDashboard(id: string): IApiRequest<any> {\n  return API.get(`${endpoints.DASHBOARD}/${id}`);\n}\n\nfunction createDashboard(\n  reqBody: IDashboardRequestBody,\n): IApiRequest<IAppData> {\n  return API.post(endpoints.DASHBOARD, reqBody, {\n    headers: { 'Content-type': 'application/json' },\n  });\n}\n\nfunction updateDashboard(\n  id: string,\n  reqBody: IDashboardRequestBody,\n): IApiRequest<any> {\n  return API.put(`${endpoints.DASHBOARD}/${id}`, reqBody);\n}\n\nfunction deleteDashboard(id: string): IApiRequest<any> {\n  return API.delete(`${endpoints.DASHBOARD}/${id}`);\n}\n\nconst dashboardService = {\n  endpoints,\n  createDashboard,\n  fetchDashboardsList,\n  fetchDashboard,\n  updateDashboard,\n  deleteDashboard,\n};\n\nexport default dashboardService;\n","import React from 'react';\nimport { IConfirmModalProps } from 'types/components/ConfirmModal/ConfirmModal';\nimport { Dialog, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { Button } from 'components/kit';\n\nimport './ConfirmModal.scss';\n\nfunction ConfirmModal(\n  props: IConfirmModalProps,\n): React.FunctionComponentElement<React.ReactNode> {\n  return (\n    <Dialog\n      open={props.open}\n      onClose={props.onCancel}\n      aria-labelledby='dialog-title'\n      aria-describedby='dialog-description'\n      PaperProps={{\n        elevation: 10,\n      }}\n    >\n      <div className='ConfirmModal__Body'>\n        <div className='ConfirmModal__Icon flex fjc fac'>{props.icon}</div>\n        <div className='flex fdc'>\n          {props.title && (\n            <DialogTitle className='ConfirmModal__Title' id='dialog-title'>\n              {props.title}\n            </DialogTitle>\n          )}\n\n          <div className='ConfirmModal__Content'>\n            {props.text && (\n              <DialogContentText className='Text' id='dialog-description'>\n                {props.text || ''}\n              </DialogContentText>\n            )}\n            {props.children && props.children}\n          </div>\n        </div>\n      </div>\n      <div className='ConfirmModal__Footer'>\n        <Button onClick={props.onCancel} className='ConfirmModal__CancelButton'>\n          {props.cancelBtnText}\n        </Button>\n\n        <Button\n          onClick={props.onSubmit}\n          color='primary'\n          variant='contained'\n          autoFocus\n        >\n          {props.confirmBtnText}\n        </Button>\n      </div>\n    </Dialog>\n  );\n}\n\nConfirmModal.defaultProps = {\n  confirmBtnText: 'Confirm',\n  cancelBtnText: 'Cancel',\n};\n\nConfirmModal.displayName = 'ConfirmModal';\n\nexport default React.memo<IConfirmModalProps>(ConfirmModal);\n","import React from 'react';\nimport { ICopyToClipBoardProps } from 'types/components/CopyToClipBoard/CopyToClipBoard';\n\nimport { Icon } from 'components/kit';\n\nfunction CopyToClipboard({\n  contentRef,\n  showSuccessDelay = 1500,\n  className = '',\n}: ICopyToClipBoardProps): React.FunctionComponentElement<ICopyToClipBoardProps> {\n  const [showCopiedIcon, setShowCopiedIcon] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    if (showCopiedIcon) {\n      setTimeout(() => {\n        setShowCopiedIcon(false);\n      }, showSuccessDelay);\n    }\n  }, [showCopiedIcon]);\n\n  const onCopy = React.useCallback(() => {\n    if (contentRef.current && !showCopiedIcon) {\n      navigator.clipboard\n        .writeText(contentRef.current.innerText.trim(''))\n        .then(function () {\n          setShowCopiedIcon(true);\n        })\n        .catch();\n    }\n  }, [contentRef, showCopiedIcon]);\n\n  return (\n    <span className={className} onClick={onCopy}>\n      {showCopiedIcon ? (\n        <span style={{ color: 'green', fontSize: 12 }}>Copied!</span>\n      ) : (\n        <Icon name='copy' />\n      )}\n    </span>\n  );\n}\n\nCopyToClipboard.displayName = 'CopyToClipBoard';\n\nexport default React.memo<ICopyToClipBoardProps>(CopyToClipboard);\n","import React from 'react';\n// import AssignmentTurnedInOutlinedIcon from '@material-kit/icons/AssignmentTurnedInOutlined';\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/nightOwlLight';\n\nimport { ICodeBlockProps } from 'types/components/CodeBlock/CodeBlock';\nimport CopyToClipBoard from 'components/CopyToClipBoard/CopyToClipBoard';\n\nimport './CodeBlock.scss';\n\nfunction CodeBlock({\n  code = '',\n  className = '',\n  language = 'python',\n}: ICodeBlockProps): React.FunctionComponentElement<React.ReactNode> {\n  const contentRef = React.createRef<HTMLPreElement>();\n  return (\n    <div className={`CodeBlock ${className}`}>\n      <Highlight\n        {...defaultProps}\n        theme={theme}\n        code={code.trim()}\n        language={language}\n      >\n        {({ className, style, tokens, getLineProps, getTokenProps }) => (\n          <pre className={className} style={style} ref={contentRef}>\n            {tokens.map((line, i) => (\n              <div key={i} {...getLineProps({ line, key: i })}>\n                {line.map((token, key) => (\n                  <span key={key} {...getTokenProps({ token, key })} />\n                ))}\n              </div>\n            ))}\n          </pre>\n        )}\n      </Highlight>\n      <CopyToClipBoard\n        className='CodeBlock__copy__span'\n        contentRef={contentRef}\n      />\n    </div>\n  );\n}\n\nexport default React.memo(CodeBlock);\n","import createModel from '../model';\nimport dashboardService from 'services/api/dashboard/dashboardService';\nimport appsService from 'services/api/apps/appsService';\nimport { IBookmarksAppModelState } from 'types/services/models/bookmarks/bookmarksAppModel';\nimport { IBookmarksData } from 'types/pages/bookmarks/Bookmarks';\nimport * as analytics from 'services/analytics';\n\nconst model = createModel<Partial<IBookmarksAppModelState>>({\n  isLoading: true,\n  listData: [],\n});\n\nfunction getBookmarksData() {\n  const { call, abort } = dashboardService.fetchDashboardsList();\n  return {\n    call: () =>\n      call().then(async (data: any) => {\n        const appsList = await appsService.fetchAppsList().call();\n        const listData = data.map((item: any) => {\n          const app = appsList.find(\n            (appData: any) => appData.id === item.app_id,\n          );\n          return { ...item, select: app.state.select, type: app.type };\n        });\n        model.setState({\n          isLoading: false,\n          listData,\n        });\n      }),\n    abort,\n  };\n}\n\nasync function onBookmarkDelete(id: string) {\n  try {\n    model.setState({ isLoading: true });\n    await dashboardService.deleteDashboard(id).call();\n    const listData: IBookmarksData[] | any = model.getState()?.listData;\n    const newListData = [...listData].filter((bookmark) => bookmark.id !== id);\n    model.setState({\n      listData: newListData,\n      isLoading: false,\n    });\n    analytics.trackEvent('[Bookmarks] Delete a bookmark');\n  } catch (err) {\n    console.log(err);\n  }\n}\nfunction initialize() {\n  model.init();\n}\nconst bookmarkAppModel = {\n  ...model,\n  initialize,\n  getBookmarksData,\n  onBookmarkDelete,\n};\n\nexport default bookmarkAppModel;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport ConfirmModal from 'components/ConfirmModal/ConfirmModal';\nimport CodeBlock from 'components/CodeBlock/CodeBlock';\nimport { Button, Icon, Badge } from 'components/kit';\n\nimport COLORS from 'config/colors/colors';\nimport { IBookmarkCardProps } from 'types/pages/bookmarks/components/BookmarkCard';\nimport * as analytics from 'services/analytics';\n\nimport './BookmarkCard.scss';\n\nfunction BookmarkCard({\n  name,\n  id,\n  app_id,\n  description,\n  onBookmarkDelete,\n  select,\n  type,\n}: IBookmarkCardProps): React.FunctionComponentElement<React.ReactNode> {\n  const [openModal, setOpenModal] = React.useState<boolean>(false);\n\n  function handleOpenModal() {\n    setOpenModal(true);\n  }\n  function handleCloseModal() {\n    setOpenModal(false);\n  }\n\n  function handleBookmarkDelete() {\n    onBookmarkDelete(id);\n  }\n\n  const tags: { label: string }[] =\n    React.useMemo(() => {\n      return select[type]?.map((val: any) => ({ label: val.label }));\n    }, [select]) || [];\n\n  return (\n    <div className='BookmarkCard__container'>\n      <div className='BookmarkCard__top'>\n        <div className='BookmarkCard__title__section'>\n          <span className='BookmarkCard__title'>{name}</span>\n          <div className='flex fac fjc'>\n            <NavLink to={`/${type}/${app_id}`}>\n              <Button\n                variant='outlined'\n                onClick={() =>\n                  analytics.trackEvent('[Bookmarks] View bookmark')\n                }\n              >\n                View Bookmark\n              </Button>\n            </NavLink>\n            <span className='BookmarkCard__delete'>\n              <Button color='secondary' withOnlyIcon onClick={handleOpenModal}>\n                <Icon name='delete' />\n              </Button>\n            </span>\n          </div>\n        </div>\n        <p>{description}</p>\n      </div>\n      {select.advancedMode ? (\n        <div className='BookmarkCard__bottom'>\n          <div className='BookmarkCard__run__expression'>\n            <CodeBlock code={select.advancedQuery} />\n          </div>\n        </div>\n      ) : (\n        <>\n          {select.query && (\n            <div className='BookmarkCard__bottom'>\n              <div className='BookmarkCard__run__expression'>\n                <CodeBlock code={select.query} />\n              </div>\n            </div>\n          )}\n          {tags.length > 0 && (\n            <div className='BookmarkCard__selected__metrics ScrollBar__hidden'>\n              {tags.map((tag, index) => {\n                return (\n                  <Badge\n                    key={tag.label}\n                    label={tag.label}\n                    color={COLORS[0][index % COLORS[0].length]}\n                  />\n                );\n              })}\n            </div>\n          )}\n        </>\n      )}\n      <ConfirmModal\n        open={openModal}\n        onCancel={handleCloseModal}\n        onSubmit={handleBookmarkDelete}\n        text='Are you sure you want to delete this bookmark?'\n        icon={<Icon name='delete' />}\n        title='Are you sure?'\n      />\n    </div>\n  );\n}\n\nexport default BookmarkCard;\n","import React from 'react';\n\nimport BookmarkCard from './components/BookmarkCard/BookmarkCard';\nimport { IBookmarksProps } from 'types/pages/bookmarks/Bookmarks';\nimport AppBar from 'components/AppBar/AppBar';\n\nimport './Bookmarks.scss';\nimport BusyLoaderWrapper from 'components/BusyLoaderWrapper/BusyLoaderWrapper';\nimport EmptyComponent from 'components/EmptyComponent/EmptyComponent';\n\nfunction Bookmarks({\n  data,\n  onBookmarkDelete,\n  isLoading,\n}: IBookmarksProps): React.FunctionComponentElement<React.ReactNode> {\n  return (\n    <section className='Bookmarks'>\n      <AppBar title='Bookmarks' />\n      <div className='Bookmarks__list container'>\n        <BusyLoaderWrapper isLoading={isLoading}>\n          {data?.length > 0 &&\n            data.map((bookmark) => (\n              <BookmarkCard\n                key={bookmark.id}\n                {...bookmark}\n                onBookmarkDelete={onBookmarkDelete}\n              />\n            ))}\n        </BusyLoaderWrapper>\n        {!isLoading && data?.length === 0 ? (\n          <EmptyComponent size='big' content={'No Bookmarks'} />\n        ) : null}\n      </div>\n    </section>\n  );\n}\n\nexport default Bookmarks;\n","import React from 'react';\n\nimport useModel from 'hooks/model/useModel';\nimport bookmarkAppModel from 'services/models/bookmarks/bookmarksAppModel';\nimport Bookmarks from './Bookmarks';\nimport * as analytics from 'services/analytics';\nimport { IBookmarksAppModelState } from 'types/services/models/bookmarks/bookmarksAppModel';\n\nfunction BookmarksContainer(): React.FunctionComponentElement<React.ReactNode> {\n  const bookmarksRequestRef = React.useRef(bookmarkAppModel.getBookmarksData());\n  const bookmarksData = useModel(bookmarkAppModel);\n\n  React.useEffect(() => {\n    bookmarkAppModel.initialize();\n    bookmarksRequestRef.current.call();\n    analytics.pageView('[Bookmarks]');\n    return () => {\n      bookmarksRequestRef.current.abort();\n    };\n  }, []);\n\n  return (\n    <Bookmarks\n      data={bookmarksData?.listData as IBookmarksAppModelState['listData']}\n      isLoading={bookmarksData?.isLoading as boolean}\n      onBookmarkDelete={bookmarkAppModel.onBookmarkDelete}\n    />\n  );\n}\n\nexport default BookmarksContainer;\n"],"sourceRoot":""}