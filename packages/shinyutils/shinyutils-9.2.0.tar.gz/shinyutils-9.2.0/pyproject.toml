[tool.black]
line-length = 88
skip-magic-trailing-comma = true

[tool.isort]
line_length = 88
force_grid_wrap = 0
multi_line_output = 3
use_parentheses = true
include_trailing_comma = true
combine_as_imports = true
force_alphabetical_sort_within_sections = true

[tool.pylint.MASTER]
extension-pkg-whitelist = "torch"

[tool.pylint.TYPECHECK]
generated-members = "torch.*"

[tool.pylint.FORMAT]
max-line-length = "88"

[tool.pylint.'MESSAGES CONTROL']
disable = """
    fixme,
    missing-docstring,
    invalid-name,
    ungrouped-imports,
    wrong-import-order,
    wrong-import-position,
    import-outside-toplevel,
    unused-argument,
    no-self-use,
    no-member,
    protected-access,
    attribute-defined-outside-init,
    too-few-public-methods,
    too-many-public-methods,
    too-many-ancestors,
    too-many-instance-attributes,
    too-many-arguments,
    too-many-locals,
    too-many-statements,
    too-many-lines,
    too-many-branches,
    too-many-nested-blocks,
    too-many-return-statements,
    too-many-boolean-expressions,
"""

[tool.pydocstyle]
convention = "pep257"
add-ignore = "D100,D101,D102,D103,D104,D105,D106,D107"

[tool.poetry]
name = "shinyutils"
version = "9.2.0"
description = "Personal collection of common utilities"
authors = ["Jayanth Koushik <jnkoushik@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/jayanthkoushik/shinyutils"
packages = [
    { include = "shinyutils" },
]
include = ["CHANGELOG.md", "docs"]

classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]

[tool.poetry.dependencies]
python = "^3.7"
corgy = "^2.0"

rich = { version = "^10.0", optional = true }
matplotlib = { version = "^3.0", optional = true }
seaborn = { version = "^0.10", optional = true }
torch = { version = "^1.5", optional = true }
torchvision = { version = "*", optional = true }
tensorboard = { extras = ["python"], version = "^2.0", optional = true }
tqdm = { version = "^4.4", optional = true }

[tool.poetry.extras]
color = ["rich"]
plotting = ["matplotlib", "seaborn"]
pytorch = ["torch", "torchvision", "tensorboard", "tqdm"]

[tool.poetry.dev-dependencies]
black = { version = ">=20.8b0", allow-prereleases = true }
pylint = "^2.9"
pre-commit = "^2.0"
isort = "^5.1"
mypy = ">=0.8"
pydocstyle = "^6.1"
Sphinx = "^4.0"
sphinx-markdown-builder = { git = "https://github.com/clayrisser/sphinx-markdown-builder" }
types-setuptools = "^57.0"

[build-system]
requires = ["poetry>=1.0"]
build-backend = "poetry.masonry.api"
