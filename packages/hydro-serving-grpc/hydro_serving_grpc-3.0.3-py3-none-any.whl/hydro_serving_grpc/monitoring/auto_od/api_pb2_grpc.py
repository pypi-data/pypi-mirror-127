# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from hydro_serving_grpc.monitoring.auto_od import api_pb2 as hydro__serving__grpc_dot_monitoring_dot_auto__od_dot_api__pb2


class AutoOdServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetModelStatus = channel.unary_unary(
                '/hydrosphere.monitoring.auto_od.AutoOdService/GetModelStatus',
                request_serializer=hydro__serving__grpc_dot_monitoring_dot_auto__od_dot_api__pb2.ModelStatusRequest.SerializeToString,
                response_deserializer=hydro__serving__grpc_dot_monitoring_dot_auto__od_dot_api__pb2.ModelStatusResponse.FromString,
                )
        self.LaunchAutoOd = channel.unary_unary(
                '/hydrosphere.monitoring.auto_od.AutoOdService/LaunchAutoOd',
                request_serializer=hydro__serving__grpc_dot_monitoring_dot_auto__od_dot_api__pb2.LaunchAutoOdRequest.SerializeToString,
                response_deserializer=hydro__serving__grpc_dot_monitoring_dot_auto__od_dot_api__pb2.LaunchAutoOdResponse.FromString,
                )


class AutoOdServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetModelStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LaunchAutoOd(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AutoOdServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetModelStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetModelStatus,
                    request_deserializer=hydro__serving__grpc_dot_monitoring_dot_auto__od_dot_api__pb2.ModelStatusRequest.FromString,
                    response_serializer=hydro__serving__grpc_dot_monitoring_dot_auto__od_dot_api__pb2.ModelStatusResponse.SerializeToString,
            ),
            'LaunchAutoOd': grpc.unary_unary_rpc_method_handler(
                    servicer.LaunchAutoOd,
                    request_deserializer=hydro__serving__grpc_dot_monitoring_dot_auto__od_dot_api__pb2.LaunchAutoOdRequest.FromString,
                    response_serializer=hydro__serving__grpc_dot_monitoring_dot_auto__od_dot_api__pb2.LaunchAutoOdResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'hydrosphere.monitoring.auto_od.AutoOdService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AutoOdService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetModelStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hydrosphere.monitoring.auto_od.AutoOdService/GetModelStatus',
            hydro__serving__grpc_dot_monitoring_dot_auto__od_dot_api__pb2.ModelStatusRequest.SerializeToString,
            hydro__serving__grpc_dot_monitoring_dot_auto__od_dot_api__pb2.ModelStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LaunchAutoOd(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hydrosphere.monitoring.auto_od.AutoOdService/LaunchAutoOd',
            hydro__serving__grpc_dot_monitoring_dot_auto__od_dot_api__pb2.LaunchAutoOdRequest.SerializeToString,
            hydro__serving__grpc_dot_monitoring_dot_auto__od_dot_api__pb2.LaunchAutoOdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
