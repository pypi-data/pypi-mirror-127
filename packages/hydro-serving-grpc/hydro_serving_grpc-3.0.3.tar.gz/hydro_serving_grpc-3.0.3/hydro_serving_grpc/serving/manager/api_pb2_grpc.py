# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from hydro_serving_grpc.serving.manager import api_pb2 as hydro__serving__grpc_dot_serving_dot_manager_dot_api__pb2
from hydro_serving_grpc.serving.manager import entities_pb2 as hydro__serving__grpc_dot_serving_dot_manager_dot_entities__pb2


class ManagerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAllVersions = channel.unary_stream(
                '/hydrosphere.serving.manager.ManagerService/GetAllVersions',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=hydro__serving__grpc_dot_serving_dot_manager_dot_entities__pb2.ModelVersion.FromString,
                )
        self.GetVersion = channel.unary_unary(
                '/hydrosphere.serving.manager.ManagerService/GetVersion',
                request_serializer=hydro__serving__grpc_dot_serving_dot_manager_dot_api__pb2.GetVersionRequest.SerializeToString,
                response_deserializer=hydro__serving__grpc_dot_serving_dot_manager_dot_entities__pb2.ModelVersion.FromString,
                )
        self.DeployServable = channel.unary_stream(
                '/hydrosphere.serving.manager.ManagerService/DeployServable',
                request_serializer=hydro__serving__grpc_dot_serving_dot_manager_dot_api__pb2.DeployServableRequest.SerializeToString,
                response_deserializer=hydro__serving__grpc_dot_serving_dot_manager_dot_entities__pb2.Servable.FromString,
                )
        self.GetServables = channel.unary_stream(
                '/hydrosphere.serving.manager.ManagerService/GetServables',
                request_serializer=hydro__serving__grpc_dot_serving_dot_manager_dot_api__pb2.GetServablesRequest.SerializeToString,
                response_deserializer=hydro__serving__grpc_dot_serving_dot_manager_dot_entities__pb2.Servable.FromString,
                )
        self.RemoveServable = channel.unary_unary(
                '/hydrosphere.serving.manager.ManagerService/RemoveServable',
                request_serializer=hydro__serving__grpc_dot_serving_dot_manager_dot_api__pb2.RemoveServableRequest.SerializeToString,
                response_deserializer=hydro__serving__grpc_dot_serving_dot_manager_dot_entities__pb2.Servable.FromString,
                )


class ManagerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetAllVersions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeployServable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetServables(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveServable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ManagerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAllVersions': grpc.unary_stream_rpc_method_handler(
                    servicer.GetAllVersions,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=hydro__serving__grpc_dot_serving_dot_manager_dot_entities__pb2.ModelVersion.SerializeToString,
            ),
            'GetVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVersion,
                    request_deserializer=hydro__serving__grpc_dot_serving_dot_manager_dot_api__pb2.GetVersionRequest.FromString,
                    response_serializer=hydro__serving__grpc_dot_serving_dot_manager_dot_entities__pb2.ModelVersion.SerializeToString,
            ),
            'DeployServable': grpc.unary_stream_rpc_method_handler(
                    servicer.DeployServable,
                    request_deserializer=hydro__serving__grpc_dot_serving_dot_manager_dot_api__pb2.DeployServableRequest.FromString,
                    response_serializer=hydro__serving__grpc_dot_serving_dot_manager_dot_entities__pb2.Servable.SerializeToString,
            ),
            'GetServables': grpc.unary_stream_rpc_method_handler(
                    servicer.GetServables,
                    request_deserializer=hydro__serving__grpc_dot_serving_dot_manager_dot_api__pb2.GetServablesRequest.FromString,
                    response_serializer=hydro__serving__grpc_dot_serving_dot_manager_dot_entities__pb2.Servable.SerializeToString,
            ),
            'RemoveServable': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveServable,
                    request_deserializer=hydro__serving__grpc_dot_serving_dot_manager_dot_api__pb2.RemoveServableRequest.FromString,
                    response_serializer=hydro__serving__grpc_dot_serving_dot_manager_dot_entities__pb2.Servable.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'hydrosphere.serving.manager.ManagerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ManagerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetAllVersions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/hydrosphere.serving.manager.ManagerService/GetAllVersions',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            hydro__serving__grpc_dot_serving_dot_manager_dot_entities__pb2.ModelVersion.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hydrosphere.serving.manager.ManagerService/GetVersion',
            hydro__serving__grpc_dot_serving_dot_manager_dot_api__pb2.GetVersionRequest.SerializeToString,
            hydro__serving__grpc_dot_serving_dot_manager_dot_entities__pb2.ModelVersion.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeployServable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/hydrosphere.serving.manager.ManagerService/DeployServable',
            hydro__serving__grpc_dot_serving_dot_manager_dot_api__pb2.DeployServableRequest.SerializeToString,
            hydro__serving__grpc_dot_serving_dot_manager_dot_entities__pb2.Servable.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetServables(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/hydrosphere.serving.manager.ManagerService/GetServables',
            hydro__serving__grpc_dot_serving_dot_manager_dot_api__pb2.GetServablesRequest.SerializeToString,
            hydro__serving__grpc_dot_serving_dot_manager_dot_entities__pb2.Servable.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveServable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hydrosphere.serving.manager.ManagerService/RemoveServable',
            hydro__serving__grpc_dot_serving_dot_manager_dot_api__pb2.RemoveServableRequest.SerializeToString,
            hydro__serving__grpc_dot_serving_dot_manager_dot_entities__pb2.Servable.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
