rules_metadata:
  # TODO: Fix this rule's metadata
  - rule_id: non_car_gcp_sql_database_ssl_required
    cloud_provider: google_cloud_provider
    name: Ensure SQL database requires SSL
    severity: major
    description: Ensure SQL database requires SSL
    human_readable_logic: Ensure SQL database requires SSL
    remediation_steps:
      terraform: Ensure SQL database requires SSL
      console: Ensure SQL database requires SSL
    rule_type: non_context_aware
    security_layer: networking
    resource_type:
      - database
    supported_iac_types:
      - terraform
  - rule_id: non_car_cloud_sql_restrict_trusted_ip
    cloud_provider: google_cloud_provider
    name: Ensure that Cloud SQL database instances are not open to the world
    severity: major
    description: To minimize attack surface on a Database server instance, only trusted/known and required IP(s) should be allowedto connect to it. An authorized network should not have IPs/networks configured to 0.0.0.0/0 which will allow access to the instance from anywhere in the world. Note that authorized networks apply only to instances with public IPs.
    human_readable_logic: Cloudrail will review the database instance configuration within your GCP subscription and Terraform plan to ensure that database connections are not permitted from 0.0.0.0/0.
    remediation_steps:
      terraform: For the google_sql_database_instance resource, set the authorized Networks parameter under ipConfiguration subblock to value other than 0.0.0.0/0.
      console:  Follow the guide at <https://console.cloud.google.com/sql/instances> in order to audit and delete any authorized networks with 0.0.0.0/0.
    rule_type: non_context_aware
    security_layer: networking
    resource_type:
      - database
    supported_iac_types:
      - terraform
  - rule_id: non_car_cloud_sql_database_instance_no_public_ip
    cloud_provider: google_cloud_provider
    name: Ensure that Cloud SQL database instances do not have public IPs
    severity: medium
    description: It is recommended to configure second generation sql instances to use private IPs and not public IPs to reduce the organization's attack surface.
    human_readable_logic: Cloudrail will review the database instance configuration within your GCP subscription and Terraform plan to ensure that Google Cloud database instances have 'ipv4_enabled' attribute not set to true.
    remediation_steps:
      terraform: For the google_sql_database_instance resources, ensure that ‘ipv4_enabled’ attribute is set to false for Google Cloud SQL database instances.
      console: Follow the guides at <https://cloud.google.com/sql/docs/mysql/private-ip>  and <https://console.cloud.google.com/iam-admin/orgpolicies/sql-restrictPublicIp>  in order to ensure that private IPs are used instead of public IPs.
    rule_type: non_context_aware
    security_layer: networking
    resource_type:
      - database
    supported_iac_types:
      - terraform
  - rule_id: non_car_compute_instance_ensure_serial_port_disabled
    cloud_provider: google_cloud_provider
    compliance:
      CIS:
        1.1.0:
        - '4.5'
    name: Ensure ‘Enable connecting to serial ports’ is not enabled for VM Instance
    severity: major
    description: The interactive serial console does not support IP-based access restrictions such as IP whitelists. 
      If the interactive serial console is enabled on an instance, clients can attempt to connect to that instance from any IP address.
      This allows unwanted access to that instance if they know the correct SSH key, username, project ID, zone, and instance name. 
      Hence interactive serial console support should be disabled.
    human_readable_logic: Cloudrail will review the compute instances configuration within your GCP subscription and Terraform plan to ensure that metadata value for serial-port-enable is not set to true.
    remediation_steps:
      terraform: For the google_compute_instance resource ensure the metadata serial-port-enable is not set to true (default is false).
      console: Follow the guides at <https://cloud.google.com/compute/docs/instances/interacting-with-serial-console> in order to disable the serial console access to the compute VM instance.
    rule_type: non_context_aware
    security_layer: networking
    resource_type:
      - compute
    supported_iac_types:
      - terraform
  - rule_id: non_car_compute_instance_ensure_shielded_vm
    cloud_provider: google_cloud_provider
    compliance:
      CIS:
        1.1.0:
        - '4.8'
    name: Ensure Compute instances are launched with Shielded VM enabled
    severity: medium
    description: Shielded VMs are virtual machines (VMs) hardened by a set of security controls that help defend against rootkits and bootkits.
      Shielded VM instances run firmware which is signed and verified using Google's Certificate Authority,
      ensuring that the instance's firmware is unmodified and establishing the root of trust for secure boot.
      Shielded VM's verifiable integrity is achieved through the use of secure boot, virtual trusted platform module (vTPM), and integrity monitoring.
    human_readable_logic: Cloudrail will review the compute instances configuration within your GCP subscription and Terraform plan to ensure that the instances have Shielded VM attributes enabled.
    remediation_steps:
      terraform: For the google_compute_instance resource ensure the shielded_instance_config block has attributes enable_secure_boot, enable_vtpm and enable_integrity_monitoring set to true.
      console: Follow the guides at <https://cloud.google.com/compute/docs/instances/modifying-shielded-vm> in order to turn on vTPM and integrity monitoring of VM instances.
    rule_type: non_context_aware
    security_layer: networking
    resource_type:
      - compute
    supported_iac_types:
      - terraform
  - rule_id: non_car_cloud_sql_enable_backup
    cloud_provider: google_cloud_provider
    compliance:
      CIS:
        1.1.0:
        - '6.7'
    name: Ensure that all Cloud SQL database instances have backup configuration enabled
    severity: medium
    description: Backups provide a way to restore a Cloud SQL instance to recover lost data or recover from a problem with that instance.
      Automated backups need to be set for any instance that contains data that should be protected from loss or damage.
    human_readable_logic: Cloudrail will review the database instance configuration within your GCP subscription and Terraform plan to ensure that database connections has backup_configured set to enabled with a specified start time.
    remediation_steps:
      terraform: For the google_sql_database_instance resources, ensure that backup_configuration option is set to enabled with start_time configured in 24 hr format in UTC.
      console: Follow the guide at <https://cloud.google.com/sql/docs/mysql/create-instance#>  in order to ensure that automated backups are set to enabled and backup time is mentioned.
    rule_type: non_context_aware
    security_layer: storage
    resource_type:
      - database
    supported_iac_types:
      - terraform
  - rule_id: non_car_compute_instance_no_default_service_account
    cloud_provider: google_cloud_provider
    compliance:
      CIS:
        1.1.0:
        - '4.1'
    name: Ensure that instances are not configured to use the default service account
    severity: medium
    description:
      The default compute engine service account has the Editor role on the project, which allows read and write access to most Google Cloud Services. To defend against privilege escalations if your VM is compromised and prevent an attacker from gaining access to all of your project, it is recommended to not use the default compute engine service account.
    human_readable_logic: Cloudrail will review the compute instances configuration within your GCP subscription and Terraform plan to ensure that the instances do not use default service account.
    remediation_steps:
      terraform: For the google_compute_instance resource ensure the service_account block has attribute email doesn’t use default service account [project_number]- compute@developer.gserviceaccount.com.
      console: Follow the guides at <https://cloud.google.com/compute/docs/access/service-accounts>  and <https://cloud.google.com/compute/docs/access/create-enable-service-accounts-for-instances> in order to ensure default service account is not used. VMs created by GKE should be excluded.
    rule_type: non_context_aware
    security_layer: networking
    resource_type:
      - compute
    supported_iac_types:
      - terraform

  - rule_id: non_car_cloud_sql_contained_database_authentication_off
    cloud_provider: google_cloud_provider
    compliance:
      CIS:
        1.1.0:
        - '6.3.2'
    name: Ensure SQL database ‘contained database authentication’ flag is set to ‘off’
    severity: medium
    description: Contained databases have some unique threats that should be understood and mitigated by
      SQL Server Database Engine administrators. Most of the threats are related to the USER WITH PASSWORD authentication
      process, which moves the authentication boundary from the Database Engine level to the database level,
      hence it is recommended to disable ‘contained database authentication’ flag.
      This recommendation is applicable to SQL Server database instances. 
    human_readable_logic: Cloudrail will review the database instance configuration within your GCP subscription and
      Terraform plan to ensure that SQL Server database instances have ‘contained database authentication’
      database flag set to off.
    remediation_steps:
      terraform: For the google_sql_database_instance resources, ensure that ‘contained database authentication’
        database flag is set to off for SQL Server databases.
      console: Follow the guide at <https://cloud.google.com/sql/docs/sqlserver/flags>  in order to ensure that
        ‘contained database authentication’ database flag is set to off.
    rule_type: non_context_aware
    security_layer: networking
    resource_type:
      - database
    supported_iac_types:
      - terraform

  - rule_id: non_car_cloud_sql_crossdb_ownership_chaining_on
    cloud_provider: google_cloud_provider
    compliance:
      CIS:
        1.1.0:
        - '6.3.1'
    name: Ensure SQL database ‘cross db ownership chaining’ flag is set to ‘on'
    severity: medium
    description: The ‘cross db ownership chaining’ database flag allows the admins to control cross-database ownership
      chaining at the database level or to allow cross-database ownership chaining for all databases.
      Enabling cross db ownership is not recommended unless all of the databases hosted by the instance of SQL Server
      must participate in cross- database ownership chaining.
      This recommendation is applicable to SQL Server database instances.
    human_readable_logic: Cloudrail will review the database instance configuration within your GCP subscription and
      Terraform plan to ensure that SQL Server database instances have ‘cross db ownership chaining’
      database flag set to off.
    remediation_steps:
      terraform: For the google_sql_database_instance resources, ensure that ‘cross db ownership chaining’
        database flag is set to off for SQL Server databases.
      console: Follow the guide at <https://cloud.google.com/sql/docs/sqlserver/flags> in order to ensure that
        ‘cross db ownership chaining’ database flag is set to off.
    rule_type: non_context_aware
    security_layer: iam
    resource_type:
      - database
    supported_iac_types:
      - terraform

  - rule_id: non_car_compute_instance_no_default_service_account_full_access_api
    cloud_provider: google_cloud_provider
    compliance:
      CIS:
        1.1.0:
        - '4.2'
    name: Ensure that instances are not configured to use the default service account with full access to all Cloud APIs
    severity: medium
    description:
      To ensure the principle of least privileges are followed and to prevent potential privilege escalation, the Compute Engine instances should not be configured to use the default service account with the Cloud API access scope set to "Allow full access to all Cloud APIs". 
    human_readable_logic: Cloudrail will review the compute instances configuration within your GCP subscription and Terraform plan to ensure that the instances do not use default service account with scope Allow full access to all Cloud APIs.
    remediation_steps:
      terraform: For the google_compute_instance resource ensure the service_account block has attribute email doesn’t use default service account [project_number]- compute@developer.gserviceaccount.com and the scope is not set to https://www.googleapis.com/auth/cloud-platform.
      console: Follow the guides at <https://cloud.google.com/compute/docs/access/service-accounts> and <https://cloud.google.com/compute/docs/access/create-enable-service-accounts-for-instances> in order to ensure default service account with scope Allow full access to all Cloud APIs is not being used. VMs created by GKE should be excluded.
    rule_type: non_context_aware
    security_layer: networking
    resource_type:
      - compute
    supported_iac_types:
      - terraform