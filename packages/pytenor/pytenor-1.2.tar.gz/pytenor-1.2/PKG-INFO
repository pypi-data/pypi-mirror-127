Metadata-Version: 2.1
Name: pytenor
Version: 1.2
Summary: A simple API wrapper for tenor's gif api that is built with asyncio.
Home-page: https://github.com/bossauh/pytenor
Author: Philippe Mathew
Author-email: philmattdev@gmail.com
License: MIT
Download-URL: https://github.com/bossauh/pytenor/archive/refs/tags/v1_2.tar.gz
Keywords: api,tools,utilities
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Build Tools
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Description-Content-Type: text/markdown
License-File: LICENSE

<p align="center">
    <img src="logo.png"></img>
</p>

# PyTenor
A simple API wrapper for tenor's gif api that is built with asyncio.

PyTenor's code is small and fairly documented as well using docstrings. There are plans to add an actual documentation in this README in the future..

## Installation
```
python -m pip install pytenor
```

## Examples
```py
import asyncio
from pytenor import Tenor

api = Tenor(key="api key here")


async def main():
    # Search for gifs. This returns a GIF object.
    gifs = await api.search("linux users opening a new tab")

    print("Here are the gifs I found")
    for gif in gifs:
        print(f"URL: {gif.url} | Available Formats: {gif.available_formats}")


if __name__ == "__main__":
    asyncio.run(main())

```

## Covered API Endpoints
- /search
- /trending
- /categories
- /search_suggestions
- /autocomplete
- /trending_terms
- /registershare
- /gifs

For more help on what parameters you can pass onto each method. Please red [Tenor's API documentation](https://tenor.com/gifapi/documentation).


