"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["U2fSign"],{"./app/components/u2f/u2fsign.tsx":(e,t,s)=>{s.r(t),s.d(t,{default:()=>f});var n=s("../node_modules/@babel/runtime/helpers/esm/defineProperty.js"),i=s("../node_modules/react/index.js"),r=s("./app/locale.tsx"),o=(s("../node_modules/core-js/modules/web.dom-collections.iterator.js"),s("../node_modules/@sentry/minimal/esm/index.js")),a=s("../node_modules/u2f-api/dist/index.js"),l=s.n(a),d=s("./app/stores/configStore.tsx"),p=s("../node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js");class c extends i.Component{constructor(...e){super(...e),(0,n.Z)(this,"state",{isSupported:null,formElement:null,challengeElement:null,hasBeenTapped:!1,deviceFailure:null,responseElement:null}),(0,n.Z)(this,"onTryAgain",(()=>{this.setState({hasBeenTapped:!1,deviceFailure:null},(()=>{this.invokeU2fFlow()}))})),(0,n.Z)(this,"bindChallengeElement",(e=>{this.setState({challengeElement:e,formElement:e&&e.form}),e&&(e.value=JSON.stringify(this.props.challengeData))})),(0,n.Z)(this,"bindResponseElement",(e=>this.setState({responseElement:e}))),(0,n.Z)(this,"renderFailure",(()=>{const{deviceFailure:e}=this.state,t=d.Z.get("supportEmail"),s=t?(0,p.tZ)("a",{href:"mailto:"+t,children:t}):(0,p.tZ)("span",{children:(0,r.t)("Support")});return(0,p.BX)("div",{className:"failure-message",children:[(0,p.BX)("div",{children:[(0,p.tZ)("strong",{children:(0,r.t)("Error: ")})," ",{UNKNOWN_ERROR:(0,r.t)("There was an unknown problem, please try again"),DEVICE_ERROR:(0,r.t)("Your U2F device reported an error."),DUPLICATE_DEVICE:(0,r.t)("This device is already registered with Sentry."),UNKNOWN_DEVICE:(0,r.t)("The device you used for sign-in is unknown."),BAD_APPID:(0,r._N)("[p1:The Sentry server administrator modified the device registrations.][p2:You need to remove and re-add the device to continue using your U2F device. Use a different sign-in method or contact [support] for assistance.]",{p1:(0,p.tZ)("p",{}),p2:(0,p.tZ)("p",{}),support:s})}[e||""]]}),this.canTryAgain&&(0,p.tZ)("div",{style:{marginTop:18},children:(0,p.tZ)("a",{onClick:this.onTryAgain,className:"btn btn-primary",children:(0,r.t)("Try Again")})})]})}))}async componentDidMount(){const e=await l().isSupported();this.setState({isSupported:e}),e&&this.invokeU2fFlow()}submitU2fResponse(e){e.then((e=>{this.setState({hasBeenTapped:!0},(()=>{const t=JSON.stringify(e),s=JSON.stringify(this.props.challengeData);var n;this.state.responseElement&&(this.state.responseElement.value=t),this.props.onTap?this.props.onTap({response:t,challenge:s}).catch((()=>{this.setState({deviceFailure:"UNKNOWN_ERROR",hasBeenTapped:!1})})):null===(n=this.state.formElement)||void 0===n||n.submit()}))})).catch((e=>{let t="DEVICE_ERROR";e.metaData&&("DEVICE_INELIGIBLE"===e.metaData.type?t="enroll"===this.props.flowMode?"DUPLICATE_DEVICE":"UNKNOWN_DEVICE":"BAD_REQUEST"===e.metaData.type&&(t="BAD_APPID")),o.Tb(e),this.setState({deviceFailure:t,hasBeenTapped:!1})}))}invokeU2fFlow(){let e;if("sign"===this.props.flowMode)e=l().sign(this.props.challengeData.authenticateRequests);else{if("enroll"!==this.props.flowMode)throw new Error("Unsupported flow mode '".concat(this.props.flowMode,"'"));{const{registerRequests:t,registeredKeys:s}=this.props.challengeData;e=l().register(t,s)}}this.submitU2fResponse(e)}renderUnsupported(){return this.props.silentIfUnsupported?null:(0,p.tZ)("div",{className:"u2f-box",children:(0,p.tZ)("div",{className:"inner",children:(0,p.tZ)("p",{className:"error",children:(0,r.t)("\n             Unfortunately your browser does not support U2F. You need to use\n             a different two-factor method or switch to a browser that supports\n             it (Google Chrome or Microsoft Edge).")})})})}get canTryAgain(){return"BAD_APPID"!==this.state.deviceFailure}renderBody(){return this.state.deviceFailure?this.renderFailure():this.props.children}renderPrompt(){const{style:e}=this.props;return(0,p.BX)("div",{style:e,className:"u2f-box"+(this.state.hasBeenTapped?" tapped":"")+(this.state.deviceFailure?" device-failure":""),children:[(0,p.BX)("div",{className:"device-animation-frame",children:[(0,p.tZ)("div",{className:"device-failed"}),(0,p.tZ)("div",{className:"device-animation"}),(0,p.BX)("div",{className:"loading-dots",children:[(0,p.tZ)("span",{className:"dot"}),(0,p.tZ)("span",{className:"dot"}),(0,p.tZ)("span",{className:"dot"})]})]}),(0,p.tZ)("input",{type:"hidden",name:"challenge",ref:this.bindChallengeElement}),(0,p.tZ)("input",{type:"hidden",name:"response",ref:this.bindResponseElement}),(0,p.tZ)("div",{className:"inner",children:this.renderBody()})]})}render(){const{isSupported:e}=this.state;return null===e?null:e?this.renderPrompt():this.renderUnsupported()}}c.displayName="U2fInterface";const h=c,u={signin:(0,r.t)("Insert your U2F device or tap the button on it to confirm the sign-in request."),sudo:(0,r.t)("Alternatively you can use your U2F device to confirm the action."),enroll:(0,r.t)("To enroll your U2F device insert it now or tap the button on it to activate it.")};class m extends i.Component{render(){const{displayMode:e,...t}=this.props,s="enroll"===e?"enroll":"sign";return(0,p.tZ)(h,{...t,silentIfUnsupported:"sudo"===e,flowMode:s,children:(0,p.tZ)("p",{children:u[e]||null})})}}m.displayName="U2fSign",(0,n.Z)(m,"defaultProps",{displayMode:"signin"});const f=m}}]);
//# sourceMappingURL=../sourcemaps/U2fSign.e8951d37d1def4f4de650aa220e3e158.js.map