{"version":3,"file":"chunks/app_views_dashboardsV2_manage_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/activity/item/avatar.tsx","webpack:///./app/components/sentryDocumentTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/dashboardsV2/manage/dashboardCard.tsx","webpack:///./app/views/dashboardsV2/manage/dashboardList.tsx","webpack:///./app/views/dashboardsV2/manage/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport UserAvatar from 'app/components/avatar/userAvatar';\nimport Placeholder from 'app/components/placeholder';\nimport {IconSentry} from 'app/icons';\nimport {AvatarUser} from 'app/types';\n\ntype Props = {\n  type: 'system' | 'user';\n  user?: AvatarUser;\n  className?: string;\n  size?: number;\n};\n\nfunction ActivityAvatar({className, type, user, size = 38}: Props) {\n  if (user) {\n    return <UserAvatar user={user} size={size} className={className} />;\n  }\n\n  if (type === 'system') {\n    // Return Sentry avatar\n    return (\n      <SystemAvatar className={className} size={size}>\n        <StyledIconSentry size=\"md\" />\n      </SystemAvatar>\n    );\n  }\n\n  return (\n    <Placeholder\n      className={className}\n      width={`${size}px`}\n      height={`${size}px`}\n      shape=\"circle\"\n    />\n  );\n}\n\nexport default ActivityAvatar;\n\ntype SystemAvatarProps = {\n  size: number;\n};\n\nconst SystemAvatar = styled('span')<SystemAvatarProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: ${p => p.size}px;\n  height: ${p => p.size}px;\n  background-color: ${p => p.theme.textColor};\n  color: ${p => p.theme.background};\n  border-radius: 50%;\n`;\n\nconst StyledIconSentry = styled(IconSentry)`\n  padding-bottom: 3px;\n`;\n","import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\ntype Props = {\n  // Main page title\n  title: string;\n  orgSlug?: string;\n  projectSlug?: string;\n  children?: React.ReactNode;\n};\n\nfunction SentryDocumentTitle({title, orgSlug, projectSlug, children}: Props) {\n  function getDocTitle() {\n    if (!orgSlug && !projectSlug) {\n      return title;\n    }\n\n    if (orgSlug && projectSlug) {\n      return `${title} - ${orgSlug} - ${projectSlug}`;\n    }\n\n    if (orgSlug) {\n      return `${title} - ${orgSlug}`;\n    }\n\n    return `${title} - ${projectSlug}`;\n  }\n\n  const docTitle = getDocTitle();\n\n  return (\n    <DocumentTitle title={`${docTitle} - Sentry`}>\n      {children as React.ReactChild}\n    </DocumentTitle>\n  );\n}\n\nexport default SentryDocumentTitle;\n","import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport ActivityAvatar from 'app/components/activity/item/avatar';\nimport Card from 'app/components/card';\nimport Link from 'app/components/links/link';\nimport {t} from 'app/locale';\nimport overflowEllipsis from 'app/styles/overflowEllipsis';\nimport space from 'app/styles/space';\nimport {User} from 'app/types';\n\ntype Props = {\n  title: string;\n  detail: React.ReactNode;\n  to: React.ComponentProps<typeof Link>['to'];\n  renderWidgets: () => React.ReactNode;\n  createdBy?: User;\n  dateStatus?: React.ReactNode;\n  onEventClick?: () => void;\n  renderContextMenu?: () => void;\n};\n\nfunction DashboardCard({\n  title,\n  detail,\n  createdBy,\n  renderWidgets,\n  dateStatus,\n  to,\n  onEventClick,\n  renderContextMenu,\n}: Props) {\n  function onClick() {\n    onEventClick?.();\n  }\n\n  return (\n    <Link data-test-id={`card-${title}`} onClick={onClick} to={to}>\n      <StyledDashboardCard interactive>\n        <CardHeader>\n          <CardContent>\n            <Title>{title}</Title>\n            <Detail>{detail}</Detail>\n          </CardContent>\n          <AvatarWrapper>\n            {createdBy ? (\n              <ActivityAvatar type=\"user\" user={createdBy} size={34} />\n            ) : (\n              <ActivityAvatar type=\"system\" size={34} />\n            )}\n          </AvatarWrapper>\n        </CardHeader>\n        <CardBody>{renderWidgets()}</CardBody>\n        <CardFooter>\n          <DateSelected>\n            {dateStatus ? (\n              <DateStatus>\n                {t('Created')} {dateStatus}\n              </DateStatus>\n            ) : (\n              <DateStatus />\n            )}\n          </DateSelected>\n          {renderContextMenu && renderContextMenu()}\n        </CardFooter>\n      </StyledDashboardCard>\n    </Link>\n  );\n}\n\nconst AvatarWrapper = styled('span')`\n  border: 3px solid ${p => p.theme.border};\n  border-radius: 50%;\n  height: min-content;\n`;\n\nconst CardContent = styled('div')`\n  flex-grow: 1;\n  overflow: hidden;\n  margin-right: ${space(1)};\n`;\n\nconst StyledDashboardCard = styled(Card)`\n  justify-content: space-between;\n  height: 100%;\n  &:focus,\n  &:hover {\n    top: -1px;\n  }\n`;\n\nconst CardHeader = styled('div')`\n  display: flex;\n  padding: ${space(1.5)} ${space(2)};\n`;\n\nconst Title = styled('div')`\n  color: ${p => p.theme.textColor};\n  ${overflowEllipsis};\n`;\n\nconst Detail = styled('div')`\n  font-family: ${p => p.theme.text.familyMono};\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: ${p => p.theme.gray300};\n  ${overflowEllipsis};\n  line-height: 1.5;\n`;\n\nconst CardBody = styled('div')`\n  background: ${p => p.theme.gray100};\n  padding: ${space(1.5)} ${space(2)};\n  max-height: 150px;\n  min-height: 150px;\n  overflow: hidden;\n`;\n\nconst CardFooter = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${space(1)} ${space(2)};\n`;\n\nconst DateSelected = styled('div')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  display: grid;\n  grid-column-gap: ${space(1)};\n  color: ${p => p.theme.textColor};\n  ${overflowEllipsis};\n`;\n\nconst DateStatus = styled('span')`\n  color: ${p => p.theme.purple300};\n  padding-left: ${space(1)};\n`;\n\nexport default DashboardCard;\n","import {Fragment} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location, Query} from 'history';\n\nimport WidgetArea from 'sentry-images/dashboard/widget-area.svg';\nimport WidgetBar from 'sentry-images/dashboard/widget-bar.svg';\nimport WidgetBigNumber from 'sentry-images/dashboard/widget-big-number.svg';\nimport WidgetLine from 'sentry-images/dashboard/widget-line-1.svg';\nimport WidgetTable from 'sentry-images/dashboard/widget-table.svg';\nimport WidgetWorldMap from 'sentry-images/dashboard/widget-world-map.svg';\n\nimport {\n  createDashboard,\n  deleteDashboard,\n  fetchDashboard,\n} from 'app/actionCreators/dashboards';\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport {openConfirmModal} from 'app/components/confirm';\nimport EmptyStateWarning from 'app/components/emptyStateWarning';\nimport MenuItem from 'app/components/menuItem';\nimport Pagination from 'app/components/pagination';\nimport TimeSince from 'app/components/timeSince';\nimport {t, tn} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Organization} from 'app/types';\nimport {trackAnalyticsEvent} from 'app/utils/analytics';\nimport withApi from 'app/utils/withApi';\nimport {DashboardListItem, DisplayType} from 'app/views/dashboardsV2/types';\n\nimport ContextMenu from '../contextMenu';\nimport {cloneDashboard} from '../utils';\n\nimport DashboardCard from './dashboardCard';\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  location: Location;\n  dashboards: DashboardListItem[] | null;\n  pageLinks: string;\n  onDashboardsChange: () => void;\n};\n\nfunction DashboardList({\n  api,\n  organization,\n  location,\n  dashboards,\n  pageLinks,\n  onDashboardsChange,\n}: Props) {\n  function miniWidget(displayType: DisplayType): string {\n    switch (displayType) {\n      case DisplayType.BAR:\n        return WidgetBar;\n      case DisplayType.AREA:\n      case DisplayType.TOP_N:\n        return WidgetArea;\n      case DisplayType.BIG_NUMBER:\n        return WidgetBigNumber;\n      case DisplayType.TABLE:\n        return WidgetTable;\n      case DisplayType.WORLD_MAP:\n        return WidgetWorldMap;\n      case DisplayType.LINE:\n      default:\n        return WidgetLine;\n    }\n  }\n\n  function handleDelete(dashboard: DashboardListItem) {\n    deleteDashboard(api, organization.slug, dashboard.id)\n      .then(() => {\n        trackAnalyticsEvent({\n          eventKey: 'dashboards_manage.delete',\n          eventName: 'Dashboards Manager: Dashboard Deleted',\n          organization_id: parseInt(organization.id, 10),\n          dashboard_id: parseInt(dashboard.id, 10),\n        });\n        onDashboardsChange();\n        addSuccessMessage(t('Dashboard deleted'));\n      })\n      .catch(() => {\n        addErrorMessage(t('Error deleting Dashboard'));\n      });\n  }\n\n  function handleDuplicate(dashboard: DashboardListItem) {\n    fetchDashboard(api, organization.slug, dashboard.id)\n      .then(dashboardDetail => {\n        const newDashboard = cloneDashboard(dashboardDetail);\n        newDashboard.widgets.map(widget => (widget.id = undefined));\n        createDashboard(api, organization.slug, newDashboard, true).then(() => {\n          trackAnalyticsEvent({\n            eventKey: 'dashboards_manage.duplicate',\n            eventName: 'Dashboards Manager: Dashboard Duplicated',\n            organization_id: parseInt(organization.id, 10),\n            dashboard_id: parseInt(dashboard.id, 10),\n          });\n          onDashboardsChange();\n          addSuccessMessage(t('Dashboard duplicated'));\n        });\n      })\n      .catch(() => addErrorMessage(t('Error duplicating Dashboard')));\n  }\n\n  function renderMiniDashboards() {\n    return dashboards?.map((dashboard, index) => {\n      return (\n        <DashboardCard\n          key={`${index}-${dashboard.id}`}\n          title={\n            dashboard.id === 'default-overview' ? 'Default Dashboard' : dashboard.title\n          }\n          to={{\n            pathname: `/organizations/${organization.slug}/dashboard/${dashboard.id}/`,\n            query: {...location.query},\n          }}\n          detail={tn('%s widget', '%s widgets', dashboard.widgetDisplay.length)}\n          dateStatus={\n            dashboard.dateCreated ? <TimeSince date={dashboard.dateCreated} /> : undefined\n          }\n          createdBy={dashboard.createdBy}\n          renderWidgets={() => (\n            <WidgetGrid>\n              {dashboard.widgetDisplay.map((displayType, i) => {\n                return displayType === DisplayType.BIG_NUMBER ? (\n                  <BigNumberWidgetWrapper key={`${i}-${displayType}`}>\n                    <WidgetImage src={miniWidget(displayType)} />\n                  </BigNumberWidgetWrapper>\n                ) : (\n                  <MiniWidgetWrapper key={`${i}-${displayType}`}>\n                    <WidgetImage src={miniWidget(displayType)} />\n                  </MiniWidgetWrapper>\n                );\n              })}\n            </WidgetGrid>\n          )}\n          renderContextMenu={() => (\n            <ContextMenu>\n              <MenuItem\n                data-test-id=\"dashboard-delete\"\n                disabled={dashboards.length <= 1}\n                onClick={event => {\n                  event.preventDefault();\n                  openConfirmModal({\n                    message: t('Are you sure you want to delete this dashboard?'),\n                    priority: 'danger',\n                    onConfirm: () => handleDelete(dashboard),\n                  });\n                }}\n              >\n                {t('Delete')}\n              </MenuItem>\n              <MenuItem\n                data-test-id=\"dashboard-duplicate\"\n                onClick={event => {\n                  event.preventDefault();\n                  handleDuplicate(dashboard);\n                }}\n              >\n                {t('Duplicate')}\n              </MenuItem>\n            </ContextMenu>\n          )}\n        />\n      );\n    });\n  }\n\n  function renderDashboardGrid() {\n    if (!dashboards?.length) {\n      return (\n        <EmptyStateWarning>\n          <p>{t('Sorry, no Dashboards match your filters.')}</p>\n        </EmptyStateWarning>\n      );\n    }\n    return <DashboardGrid>{renderMiniDashboards()}</DashboardGrid>;\n  }\n\n  return (\n    <Fragment>\n      {renderDashboardGrid()}\n      <PaginationRow\n        pageLinks={pageLinks}\n        onCursor={(cursor, path, query, direction) => {\n          const offset = Number(cursor?.split?.(':')?.[1] ?? 0);\n\n          const newQuery: Query & {cursor?: string} = {...query, cursor};\n          const isPrevious = direction === -1;\n\n          if (offset <= 0 && isPrevious) {\n            delete newQuery.cursor;\n          }\n\n          trackAnalyticsEvent({\n            eventKey: 'dashboards_manage.paginate',\n            eventName: 'Dashboards Manager: Paginate',\n            organization_id: parseInt(organization.id, 10),\n          });\n\n          browserHistory.push({\n            pathname: path,\n            query: newQuery,\n          });\n        }}\n      />\n    </Fragment>\n  );\n}\n\nconst DashboardGrid = styled('div')`\n  display: grid;\n  grid-template-columns: minmax(100px, 1fr);\n  grid-template-rows: repeat(3, max-content);\n  grid-gap: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints[1]}) {\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints[2]}) {\n    grid-template-columns: repeat(3, minmax(100px, 1fr));\n  }\n`;\n\nconst WidgetGrid = styled('div')`\n  display: grid;\n  grid-template-columns: repeat(2, minmax(0, 1fr));\n  grid-auto-flow: row dense;\n  grid-gap: ${space(0.25)};\n\n  @media (min-width: ${p => p.theme.breakpoints[1]}) {\n    grid-template-columns: repeat(4, minmax(0, 1fr));\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints[3]}) {\n    grid-template-columns: repeat(6, minmax(0, 1fr));\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints[4]}) {\n    grid-template-columns: repeat(8, minmax(0, 1fr));\n  }\n`;\n\nconst BigNumberWidgetWrapper = styled('div')`\n  display: flex;\n  align-items: flex-start;\n  width: 100%;\n  height: 100%;\n\n  /* 2 cols */\n  grid-area: span 1 / span 2;\n\n  @media (min-width: ${p => p.theme.breakpoints[0]}) {\n    /* 4 cols */\n    grid-area: span 1 / span 1;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints[3]}) {\n    /* 6 and 8 cols */\n    grid-area: span 1 / span 2;\n  }\n`;\n\nconst MiniWidgetWrapper = styled('div')`\n  display: flex;\n  align-items: flex-start;\n  width: 100%;\n  height: 100%;\n  grid-area: span 2 / span 2;\n`;\n\nconst WidgetImage = styled('img')`\n  width: 100%;\n  height: 100%;\n`;\n\nconst PaginationRow = styled(Pagination)`\n  margin-bottom: ${space(3)};\n`;\n\nexport default withApi(DashboardList);\n","import {browserHistory, InjectedRouter} from 'react-router';\nimport styled from '@emotion/styled';\nimport pick from 'lodash/pick';\n\nimport {Client} from 'app/api';\nimport Feature from 'app/components/acl/feature';\nimport Alert from 'app/components/alert';\nimport Button from 'app/components/button';\nimport DropdownControl, {DropdownItem} from 'app/components/dropdownControl';\nimport NoProjectMessage from 'app/components/noProjectMessage';\nimport SearchBar from 'app/components/searchBar';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport {IconAdd} from 'app/icons';\nimport {t} from 'app/locale';\nimport {PageContent} from 'app/styles/organization';\nimport space from 'app/styles/space';\nimport {Organization, SelectValue} from 'app/types';\nimport {trackAnalyticsEvent} from 'app/utils/analytics';\nimport {decodeScalar} from 'app/utils/queryString';\nimport withApi from 'app/utils/withApi';\nimport withOrganization from 'app/utils/withOrganization';\nimport AsyncView from 'app/views/asyncView';\n\nimport {DashboardListItem} from '../types';\n\nimport DashboardList from './dashboardList';\n\nconst SORT_OPTIONS: SelectValue<string>[] = [\n  {label: t('My Dashboards'), value: 'mydashboards'},\n  {label: t('Dashboard Name (A-Z)'), value: 'title'},\n  {label: t('Date Created (Newest)'), value: '-dateCreated'},\n  {label: t('Date Created (Oldest)'), value: 'dateCreated'},\n  {label: t('Most Popular'), value: 'mostPopular'},\n  {label: t('Recently Viewed'), value: 'recentlyViewed'},\n];\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  location: Location;\n  router: InjectedRouter;\n} & AsyncView['props'];\n\ntype State = {\n  dashboards: DashboardListItem[] | null;\n  dashboardsPageLinks: string;\n} & AsyncView['state'];\n\nclass ManageDashboards extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {organization, location} = this.props;\n    return [\n      [\n        'dashboards',\n        `/organizations/${organization.slug}/dashboards/`,\n        {\n          query: {\n            ...pick(location.query, ['cursor', 'query']),\n            sort: this.getActiveSort().value,\n            per_page: '9',\n          },\n        },\n      ],\n    ];\n  }\n\n  getActiveSort() {\n    const {location} = this.props;\n\n    const urlSort = decodeScalar(location.query.sort, 'mydashboards');\n    return SORT_OPTIONS.find(item => item.value === urlSort) || SORT_OPTIONS[0];\n  }\n\n  onDashboardsChange() {\n    this.reloadData();\n  }\n\n  handleSearch(query: string) {\n    const {location, router} = this.props;\n    trackAnalyticsEvent({\n      eventKey: 'dashboards_manage.search',\n      eventName: 'Dashboards Manager: Search',\n      organization_id: parseInt(this.props.organization.id, 10),\n    });\n\n    router.push({\n      pathname: location.pathname,\n      query: {...location.query, cursor: undefined, query},\n    });\n  }\n\n  handleSortChange = (value: string) => {\n    const {location} = this.props;\n    trackAnalyticsEvent({\n      eventKey: 'dashboards_manage.change_sort',\n      eventName: 'Dashboards Manager: Sort By Changed',\n      organization_id: parseInt(this.props.organization.id, 10),\n      sort: value,\n    });\n    browserHistory.push({\n      pathname: location.pathname,\n      query: {\n        ...location.query,\n        cursor: undefined,\n        sort: value,\n      },\n    });\n  };\n\n  getQuery() {\n    const {query} = this.props.location.query;\n\n    return typeof query === 'string' ? query : undefined;\n  }\n\n  renderActions() {\n    const activeSort = this.getActiveSort();\n\n    return (\n      <StyledActions>\n        <SearchBar\n          defaultQuery=\"\"\n          query={this.getQuery()}\n          placeholder={t('Search Dashboards')}\n          onSearch={query => this.handleSearch(query)}\n        />\n        <DropdownControl buttonProps={{prefix: t('Sort By')}} label={activeSort.label}>\n          {SORT_OPTIONS.map(({label, value}) => (\n            <DropdownItem\n              key={value}\n              onSelect={this.handleSortChange}\n              eventKey={value}\n              isActive={value === activeSort.value}\n            >\n              {label}\n            </DropdownItem>\n          ))}\n        </DropdownControl>\n      </StyledActions>\n    );\n  }\n\n  renderNoAccess() {\n    return (\n      <PageContent>\n        <Alert type=\"warning\">{t(\"You don't have access to this feature\")}</Alert>\n      </PageContent>\n    );\n  }\n\n  renderDashboards() {\n    const {dashboards, dashboardsPageLinks} = this.state;\n    const {organization, location, api} = this.props;\n    return (\n      <DashboardList\n        api={api}\n        dashboards={dashboards}\n        organization={organization}\n        pageLinks={dashboardsPageLinks}\n        location={location}\n        onDashboardsChange={() => this.onDashboardsChange()}\n      />\n    );\n  }\n\n  getTitle() {\n    return t('Dashboards');\n  }\n\n  onCreate() {\n    const {organization, location} = this.props;\n    trackAnalyticsEvent({\n      eventKey: 'dashboards_manage.create.start',\n      eventName: 'Dashboards Manager: Dashboard Create Started',\n      organization_id: parseInt(organization.id, 10),\n    });\n    browserHistory.push({\n      pathname: `/organizations/${organization.slug}/dashboards/new/`,\n      query: location.query,\n    });\n  }\n\n  renderBody() {\n    const {organization} = this.props;\n\n    return (\n      <Feature\n        organization={organization}\n        features={['dashboards-edit']}\n        renderDisabled={this.renderNoAccess}\n      >\n        <SentryDocumentTitle title={t('Dashboards')} orgSlug={organization.slug}>\n          <StyledPageContent>\n            <NoProjectMessage organization={organization}>\n              <PageContent>\n                <StyledPageHeader>\n                  {t('Dashboards')}\n                  <Button\n                    data-test-id=\"dashboard-create\"\n                    onClick={event => {\n                      event.preventDefault();\n                      this.onCreate();\n                    }}\n                    priority=\"primary\"\n                    icon={<IconAdd size=\"xs\" isCircled />}\n                  >\n                    {t('Create Dashboard')}\n                  </Button>\n                </StyledPageHeader>\n                {this.renderActions()}\n                {this.renderDashboards()}\n              </PageContent>\n            </NoProjectMessage>\n          </StyledPageContent>\n        </SentryDocumentTitle>\n      </Feature>\n    );\n  }\n}\n\nconst StyledPageContent = styled(PageContent)`\n  padding: 0;\n`;\n\nconst StyledPageHeader = styled('div')`\n  display: flex;\n  align-items: flex-end;\n  font-size: ${p => p.theme.headerFontSize};\n  color: ${p => p.theme.textColor};\n  justify-content: space-between;\n  margin-bottom: ${space(2)};\n`;\n\nconst StyledActions = styled('div')`\n  display: grid;\n  grid-template-columns: auto max-content;\n  grid-gap: ${space(2)};\n  margin-bottom: ${space(2)};\n\n  @media (max-width: ${p => p.theme.breakpoints[0]}) {\n    grid-template-columns: auto;\n  }\n`;\n\nexport default withApi(withOrganization(ManageDashboards));\n"],"names":["ActivityAvatar","className","type","user","size","SystemAvatar","StyledIconSentry","width","height","shape","p","theme","textColor","background","IconSentry","SentryDocumentTitle","title","orgSlug","projectSlug","children","docTitle","AsyncView","AsyncComponent","getTitle","render","this","renderComponent","DashboardCard","detail","createdBy","renderWidgets","dateStatus","to","onEventClick","renderContextMenu","onClick","StyledDashboardCard","interactive","CardHeader","CardContent","Title","Detail","AvatarWrapper","CardBody","CardFooter","DateSelected","DateStatus","t","border","space","Card","overflowEllipsis","text","familyMono","fontSizeSmall","gray300","gray100","purple300","DashboardList","api","organization","location","dashboards","pageLinks","onDashboardsChange","miniWidget","displayType","DisplayType","WidgetBar","WidgetArea","WidgetBigNumber","WidgetTable","WidgetWorldMap","WidgetLine","Fragment","length","DashboardGrid","map","dashboard","index","id","pathname","slug","query","tn","widgetDisplay","dateCreated","date","undefined","WidgetGrid","i","BigNumberWidgetWrapper","WidgetImage","src","MiniWidgetWrapper","disabled","event","preventDefault","openConfirmModal","message","priority","onConfirm","deleteDashboard","then","trackAnalyticsEvent","eventKey","eventName","organization_id","parseInt","dashboard_id","addSuccessMessage","catch","addErrorMessage","handleDelete","fetchDashboard","dashboardDetail","newDashboard","cloneDashboard","widgets","widget","createDashboard","handleDuplicate","PaginationRow","onCursor","cursor","path","direction","newQuery","Number","split","browserHistory","breakpoints","Pagination","withApi","SORT_OPTIONS","label","value","ManageDashboards","props","sort","getEndpoints","pick","getActiveSort","per_page","urlSort","decodeScalar","find","item","reloadData","handleSearch","router","push","getQuery","renderActions","activeSort","StyledActions","defaultQuery","placeholder","onSearch","buttonProps","prefix","onSelect","handleSortChange","isActive","renderNoAccess","renderDashboards","dashboardsPageLinks","state","onCreate","renderBody","features","renderDisabled","StyledPageContent","StyledPageHeader","icon","isCircled","PageContent","headerFontSize","withOrganization"],"sourceRoot":""}