{"version":3,"file":"chunks/app_views_organizationCreate_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"6nBAaA,MAAMA,UAAqBC,EAAAA,UAAiB,iDAU5B,IAAIC,EAAAA,KAVwB,4BAY3B,MACbC,EAAAA,EAAAA,IAAOC,KAAKC,KAAKC,MAAK,IAAMC,OAAOC,SAASC,OAAO,oBAZrDC,4BACEC,SAASC,KAAKC,UAAUC,IAAI,UAG9BC,uBACEX,KAAKC,IAAIW,QACTL,SAASC,KAAKC,UAAUI,OAAO,UASjCC,SACE,OACE,eAAKC,UAAU,MAAf,WACE,eAAKA,UAAU,gBACf,eAAKA,UAAU,YAAYC,MAAO,CAACC,SAAUjB,KAAKkB,MAAMD,UAAxD,UACE,eAAKF,UAAU,gBAAf,WACE,eAAKA,UAAU,aAAf,WACE,aAAGI,KAAK,IAAR,UACE,QAAC,KAAD,CAAYC,KAAK,SAElBpB,KAAKkB,MAAMG,aACV,aAAGN,UAAU,oBAAoBO,QAAStB,KAAKuB,aAA/C,UACE,QAACC,EAAD,WAASC,EAAAA,EAAAA,GAAE,oBAIjB,eAAKV,UAAU,2BAAf,SAA2Cf,KAAKkB,MAAMQ,oBAhC5D9B,EAAAA,YAAAA,eAwCN,MAAM4B,GAAS,OAAO,OAAP,qBAAH,0CAIZ,K,wSCjDe,MAAMG,UAGXC,EAAAA,EACRC,WACE,MAAO,GAGTf,SACE,MAAMgB,EAAQ9B,KAAK6B,WACnB,OACE,QAAC,IAAD,CAAeC,MAAK,UAAKA,EAAQ,GAAH,OAAMA,EAAN,OAAmB,GAA7B,UAApB,SACG9B,KAAK+B,qBAZOJ,EAAAA,YAAAA,a,yfCFN,MAAMK,UAA2BL,EAAAA,EAAU,8DACtCM,IAGhB9B,OAAOC,SAASe,KAAhB,yBAAyCc,EAAKC,KAA9C,qBAGFC,eACE,MAAO,GAGTN,WACE,OAAOJ,EAAAA,EAAAA,GAAE,uBAGXW,aACE,MAAMC,EAAWC,EAAAA,EAAAA,IAAgB,YAC3BC,EAAaD,EAAAA,EAAAA,IAAgB,cAEnC,OACE,QAAC,IAAD,CAAcjB,YAAU,EAAxB,WACE,wBAAKI,EAAAA,EAAAA,GAAE,gCAEP,uBACGA,EAAAA,EAAAA,GACC,6LAIJ,QAAC,KAAD,CACEe,YAAa,CAACC,aAAa,GAC3BC,aAAajB,EAAAA,EAAAA,GAAE,uBACfkB,YAAY,kBACZC,UAAU,OACVC,gBAAiB7C,KAAK6C,gBACtBC,gBAAc,EANhB,WAQE,QAAC,KAAD,CACEC,GAAG,oBACHC,KAAK,OACLC,OAAOxB,EAAAA,EAAAA,GAAE,qBACTyB,aAAazB,EAAAA,EAAAA,GAAE,mBACf0B,QAAQ,EACRC,0BAAwB,EACxBC,SAAO,EACPC,UAAQ,IAGTjB,GAAYE,IACX,QAAC,KAAD,CACEQ,GAAG,aACHC,KAAK,aACLC,OAAOM,EAAAA,EAAAA,IACL,mFACA,CACEC,WAAW,aAAGrC,KAAMkB,IACpBoB,aAAa,aAAGtC,KAAMoB,MAG1BY,QAAQ,EACRE,SAAO,EACPC,UAAQ","sources":["webpack:///./app/components/narrowLayout.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/organizationCreate.tsx"],"sourcesContent":["import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {logout} from 'app/actionCreators/account';\nimport {Client} from 'app/api';\nimport {IconSentry} from 'app/icons';\nimport {t} from 'app/locale';\n\ntype Props = {\n  showLogout?: boolean;\n  maxWidth?: string;\n};\n\nclass NarrowLayout extends Component<Props> {\n  UNSAFE_componentWillMount() {\n    document.body.classList.add('narrow');\n  }\n\n  componentWillUnmount() {\n    this.api.clear();\n    document.body.classList.remove('narrow');\n  }\n\n  private api = new Client();\n\n  handleLogout = () => {\n    logout(this.api).then(() => window.location.assign('/auth/login'));\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"pattern-bg\" />\n        <div className=\"container\" style={{maxWidth: this.props.maxWidth}}>\n          <div className=\"box box-modal\">\n            <div className=\"box-header\">\n              <a href=\"/\">\n                <IconSentry size=\"lg\" />\n              </a>\n              {this.props.showLogout && (\n                <a className=\"logout pull-right\" onClick={this.handleLogout}>\n                  <Logout>{t('Sign out')}</Logout>\n                </a>\n              )}\n            </div>\n            <div className=\"box-content with-padding\">{this.props.children}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Logout = styled('span')`\n  font-size: 16px;\n`;\n\nexport default NarrowLayout;\n","import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import NarrowLayout from 'app/components/narrowLayout';\nimport {t, tct} from 'app/locale';\nimport ConfigStore from 'app/stores/configStore';\nimport AsyncView from 'app/views/asyncView';\nimport {ApiForm, CheckboxField, TextField} from 'app/views/settings/components/forms';\n\nexport default class OrganizationCreate extends AsyncView {\n  onSubmitSuccess = data => {\n    // redirect to project creation *(BYPASS REACT ROUTER AND FORCE PAGE REFRESH TO GRAB CSRF TOKEN)*\n    // browserHistory.pushState(null, `/organizations/${data.slug}/projects/new/`);\n    window.location.href = `/organizations/${data.slug}/projects/new/`;\n  };\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [];\n  }\n\n  getTitle() {\n    return t('Create Organization');\n  }\n\n  renderBody() {\n    const termsUrl = ConfigStore.get('termsUrl');\n    const privacyUrl = ConfigStore.get('privacyUrl');\n\n    return (\n      <NarrowLayout showLogout>\n        <h3>{t('Create a New Organization')}</h3>\n\n        <p>\n          {t(\n            \"Organizations represent the top level in your hierarchy. You'll be able to bundle a collection of teams within an organization as well as give organization-wide permissions to users.\"\n          )}\n        </p>\n\n        <ApiForm\n          initialData={{defaultTeam: true}}\n          submitLabel={t('Create Organization')}\n          apiEndpoint=\"/organizations/\"\n          apiMethod=\"POST\"\n          onSubmitSuccess={this.onSubmitSuccess}\n          requireChanges\n        >\n          <TextField\n            id=\"organization-name\"\n            name=\"name\"\n            label={t('Organization Name')}\n            placeholder={t('e.g. My Company')}\n            inline={false}\n            flexibleControlStateSize\n            stacked\n            required\n          />\n\n          {termsUrl && privacyUrl && (\n            <CheckboxField\n              id=\"agreeTerms\"\n              name=\"agreeTerms\"\n              label={tct(\n                'I agree to the [termsLink:Terms of Service] and the [privacyLink:Privacy Policy]',\n                {\n                  termsLink: <a href={termsUrl} />,\n                  privacyLink: <a href={privacyUrl} />,\n                }\n              )}\n              inline={false}\n              stacked\n              required\n            />\n          )}\n        </ApiForm>\n      </NarrowLayout>\n    );\n  }\n}\n"],"names":["NarrowLayout","Component","Client","logout","this","api","then","window","location","assign","UNSAFE_componentWillMount","document","body","classList","add","componentWillUnmount","clear","remove","render","className","style","maxWidth","props","href","size","showLogout","onClick","handleLogout","Logout","t","children","AsyncView","AsyncComponent","getTitle","title","renderComponent","OrganizationCreate","data","slug","getEndpoints","renderBody","termsUrl","ConfigStore","privacyUrl","initialData","defaultTeam","submitLabel","apiEndpoint","apiMethod","onSubmitSuccess","requireChanges","id","name","label","placeholder","inline","flexibleControlStateSize","stacked","required","tct","termsLink","privacyLink"],"sourceRoot":""}