{"version":3,"file":"chunks/app_views_organizationStats_teamInsights_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"0aAWA,SAASA,GAAoB,MAACC,EAAD,QAAQC,EAAR,YAAiBC,EAAjB,SAA8BC,IAiBzD,MAAMC,EAfCH,GAAYC,EAIbD,GAAWC,EACb,UAAUF,EAAV,cAAqBC,EAArB,cAAkCC,GAGhCD,EACF,UAAUD,EAAV,cAAqBC,GAGvB,UAAUD,EAAV,cAAqBE,GAXZF,EAgBX,OACE,QAAC,IAAD,CAAeA,MAAK,UAAKI,EAAL,aAApB,SACGD,IArBEJ,EAAAA,YAAAA,sBA0BT,W,8aCvBA,SAASM,GAAsB,SAACF,EAAD,aAAWG,IACxC,OACE,QAAC,IAAD,CAASA,aAAcA,EAAcC,SAAU,CAAC,iBAAhD,UACE,QAAC,IAAD,CAAkBD,aAAcA,EAAhC,UACE,QAAC,IAAD,CAAqBN,OAAOQ,EAAAA,EAAAA,GAAE,mBAAoBP,QAASK,EAAaG,KAAxE,SACGN,IAAYO,EAAAA,EAAAA,gBAAeP,IACxBQ,EAAAA,EAAAA,cAAaR,EAAU,CACrBG,aAAAA,IAEFH,QATLE,EAAAA,YAAAA,wBAgBT,SAAeO,EAAAA,EAAAA,GAAiBP","sources":["webpack:///./app/components/sentryDocumentTitle.tsx","webpack:///./app/views/organizationStats/teamInsights/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\ntype Props = {\n  // Main page title\n  title: string;\n  orgSlug?: string;\n  projectSlug?: string;\n  children?: React.ReactNode;\n};\n\nfunction SentryDocumentTitle({title, orgSlug, projectSlug, children}: Props) {\n  function getDocTitle() {\n    if (!orgSlug && !projectSlug) {\n      return title;\n    }\n\n    if (orgSlug && projectSlug) {\n      return `${title} - ${orgSlug} - ${projectSlug}`;\n    }\n\n    if (orgSlug) {\n      return `${title} - ${orgSlug}`;\n    }\n\n    return `${title} - ${projectSlug}`;\n  }\n\n  const docTitle = getDocTitle();\n\n  return (\n    <DocumentTitle title={`${docTitle} - Sentry`}>\n      {children as React.ReactChild}\n    </DocumentTitle>\n  );\n}\n\nexport default SentryDocumentTitle;\n","import {cloneElement, isValidElement} from 'react';\n\nimport Feature from 'app/components/acl/feature';\nimport NoProjectMessage from 'app/components/noProjectMessage';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport {t} from 'app/locale';\nimport {Organization} from 'app/types';\nimport withOrganization from 'app/utils/withOrganization';\n\ntype Props = {\n  organization: Organization;\n  children?: React.ReactNode;\n};\n\nfunction TeamInsightsContainer({children, organization}: Props) {\n  return (\n    <Feature organization={organization} features={['team-insights']}>\n      <NoProjectMessage organization={organization}>\n        <SentryDocumentTitle title={t('Project Reports')} orgSlug={organization.slug}>\n          {children && isValidElement(children)\n            ? cloneElement(children, {\n                organization,\n              })\n            : children}\n        </SentryDocumentTitle>\n      </NoProjectMessage>\n    </Feature>\n  );\n}\n\nexport default withOrganization(TeamInsightsContainer);\n"],"names":["SentryDocumentTitle","title","orgSlug","projectSlug","children","docTitle","TeamInsightsContainer","organization","features","t","slug","isValidElement","cloneElement","withOrganization"],"sourceRoot":""}