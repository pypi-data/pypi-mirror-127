{"version":3,"file":"chunks/app_views_settings_account_accountAuthorizations_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"+ZAQe,MAAMA,UAGXC,EAAAA,EACRC,WACE,MAAO,GAGTC,SACE,MAAMC,EAAQC,KAAKH,WACnB,OACE,QAAC,IAAD,CAAeE,MAAK,UAAKA,EAAQ,GAAH,OAAMA,EAAN,OAAmB,GAA7B,UAApB,SACGC,KAAKC,qBAZON,EAAAA,YAAAA,a,01BCqBrB,MAAMO,UAA8BP,EAAAA,EAAwB,2DAS3CQ,IACb,MAAMC,EAAUJ,KAAKK,MAAMC,KAE3BN,KAAKO,UACHF,IAAS,CACPC,KAAMD,EAAMC,KAAKE,QAAO,EAAEC,GAAAA,KAAQA,IAAON,EAAcM,SAEzDC,UACE,UACQV,KAAKW,IAAIC,eAAe,uBAAwB,CACpDC,OAAQ,SACRP,KAAM,CAACH,cAAeA,EAAcM,OAGtCK,EAAAA,EAAAA,KAAkBC,EAAAA,EAAAA,GAAE,kBACpB,MAAOC,GACPhB,KAAKO,SAAS,CACZD,KAAMF,KAERa,EAAAA,EAAAA,KAAgBF,EAAAA,EAAAA,GAAE,oDA3B1BG,eACE,MAAO,CAAC,CAAC,OAAQ,yBAGnBrB,WACE,MAAO,wBA4BTsB,aACE,MAAM,KAACb,GAAQN,KAAKK,MACde,EAA0B,IAAhBd,EAAKe,OACrB,OACE,0BACE,QAAC,IAAD,CAAoBtB,MAAM,6BAC1B,QAACuB,EAAD,WACGC,EAAAA,EAAAA,IAAI,qEAAsE,CACzEC,MAAM,QAAC,IAAD,CAAMC,GAAG,gCAInB,QAAC,KAAD,YACE,QAAC,KAAD,WAAcV,EAAAA,EAAAA,GAAE,4BAEhB,QAAC,IAAD,WACGK,IACC,QAAC,IAAD,WACGL,EAAAA,EAAAA,GAAE,yDAILK,IACA,wBACGd,EAAKoB,KAAIvB,IACR,QAACwB,EAAD,YACE,QAACC,EAAD,YACE,QAACC,EAAD,UAAkB1B,EAAc2B,YAAYC,OAC3C5B,EAAc6B,cACb,QAACC,EAAD,WACE,QAAC,IAAD,CAAcC,KAAM/B,EAAc6B,YAAlC,SACG7B,EAAc6B,iBAIrB,QAACG,EAAD,UAAShC,EAAciC,OAAOC,KAAK,YAErC,QAAC,KAAD,CACEC,KAAK,QACLC,QAAS,IAAMvC,KAAKwC,aAAarC,GACjCsC,MAAM,QAAC,KAAD,QAfYtC,EAAcM,kBA4BtD,UAEMa,GAAc,OAAO,IAAP,qBAAH,cACFoB,GAAKA,EAAEC,MAAMC,uBADX,mBAEEC,EAAAA,EAAAA,GAAM,GAFR,KAKXlB,GAAkB,OAAOmB,EAAAA,GAAP,qBAAH,8CAIflB,GAAqB,OAAO,MAAP,qBAAH,qEAMlBC,GAAkB,OAAO,MAAP,qBAAH,mCAEFgB,EAAAA,EAAAA,GAAM,IAFJ,KASfZ,GAAM,OAAO,MAAP,qBAAH,kBACUY,EAAAA,EAAAA,GAAM,IADhB,eAEMH,GAAKA,EAAEC,MAAMC,uBAFnB,KAKHT,GAAS,OAAO,MAAP,qBAAH,UACDO,GAAKA,EAAEC,MAAMI,SADZ,eAEGL,GAAKA,EAAEC,MAAMC,uBAFhB","sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/account/accountAuthorizations.tsx"],"sourcesContent":["import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport Button from 'app/components/button';\nimport ExternalLink from 'app/components/links/externalLink';\nimport Link from 'app/components/links/link';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport {IconDelete} from 'app/icons';\nimport {t, tct} from 'app/locale';\nimport space from 'app/styles/space';\nimport {ApiApplication} from 'app/types';\nimport AsyncView from 'app/views/asyncView';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\n\ntype Authorization = {\n  application: ApiApplication;\n  homepageUrl: string;\n  id: string;\n  scopes: string[];\n};\n\ntype Props = RouteComponentProps<{}, {}>;\n\ntype State = {\n  data: Authorization[];\n} & AsyncView['state'];\n\nclass AccountAuthorizations extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['data', '/api-authorizations/']];\n  }\n\n  getTitle() {\n    return 'Approved Applications';\n  }\n\n  handleRevoke = authorization => {\n    const oldData = this.state.data;\n\n    this.setState(\n      state => ({\n        data: state.data.filter(({id}) => id !== authorization.id),\n      }),\n      async () => {\n        try {\n          await this.api.requestPromise('/api-authorizations/', {\n            method: 'DELETE',\n            data: {authorization: authorization.id},\n          });\n\n          addSuccessMessage(t('Saved changes'));\n        } catch (_err) {\n          this.setState({\n            data: oldData,\n          });\n          addErrorMessage(t('Unable to save changes, please try again'));\n        }\n      }\n    );\n  };\n\n  renderBody() {\n    const {data} = this.state;\n    const isEmpty = data.length === 0;\n    return (\n      <div>\n        <SettingsPageHeader title=\"Authorized Applications\" />\n        <Description>\n          {tct('You can manage your own applications via the [link:API dashboard].', {\n            link: <Link to=\"/settings/account/api/\" />,\n          })}\n        </Description>\n\n        <Panel>\n          <PanelHeader>{t('Approved Applications')}</PanelHeader>\n\n          <PanelBody>\n            {isEmpty && (\n              <EmptyMessage>\n                {t(\"You haven't approved any third party applications.\")}\n              </EmptyMessage>\n            )}\n\n            {!isEmpty && (\n              <div>\n                {data.map(authorization => (\n                  <PanelItemCenter key={authorization.id}>\n                    <ApplicationDetails>\n                      <ApplicationName>{authorization.application.name}</ApplicationName>\n                      {authorization.homepageUrl && (\n                        <Url>\n                          <ExternalLink href={authorization.homepageUrl}>\n                            {authorization.homepageUrl}\n                          </ExternalLink>\n                        </Url>\n                      )}\n                      <Scopes>{authorization.scopes.join(', ')}</Scopes>\n                    </ApplicationDetails>\n                    <Button\n                      size=\"small\"\n                      onClick={() => this.handleRevoke(authorization)}\n                      icon={<IconDelete />}\n                    />\n                  </PanelItemCenter>\n                ))}\n              </div>\n            )}\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default AccountAuthorizations;\n\nconst Description = styled('p')`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  margin-bottom: ${space(4)};\n`;\n\nconst PanelItemCenter = styled(PanelItem)`\n  align-items: center;\n`;\n\nconst ApplicationDetails = styled('div')`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nconst ApplicationName = styled('div')`\n  font-weight: bold;\n  margin-bottom: ${space(0.5)};\n`;\n\n/**\n * Intentionally wrap <a> so that it does not take up full width and cause\n * hit box issues\n */\nconst Url = styled('div')`\n  margin-bottom: ${space(0.5)};\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n`;\n\nconst Scopes = styled('div')`\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n`;\n"],"names":["AsyncView","AsyncComponent","getTitle","render","title","this","renderComponent","AccountAuthorizations","authorization","oldData","state","data","setState","filter","id","async","api","requestPromise","method","addSuccessMessage","t","_err","addErrorMessage","getEndpoints","renderBody","isEmpty","length","Description","tct","link","to","map","PanelItemCenter","ApplicationDetails","ApplicationName","application","name","homepageUrl","Url","href","Scopes","scopes","join","size","onClick","handleRevoke","icon","p","theme","fontSizeRelativeSmall","space","PanelItem","gray300"],"sourceRoot":""}