{"version":3,"file":"chunks/app_components_pageTimeRangeSelector_tsx-app_views_organizationStats_header_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"isBAaA,SAASA,GAAsB,UAACC,KAAcC,IAC5C,MAAOC,EAAgBC,IAAqBC,EAAAA,EAAAA,WAAS,GAErD,OACE,QAACC,EAAD,CAAcL,UAAWA,EAAWE,eAAgBA,EAApD,UACE,QAAC,IAAD,CAEEI,OAAO,QAACC,EAAD,WAAgBC,EAAAA,EAAAA,GAAE,iBACzBC,iBAAkBC,GAAUP,EAAkBO,GAC9CC,gBAAiBC,EAAAA,MACbX,GALN,iBACiBA,EAAMY,SADvB,kBACyCZ,EAAMa,MAD/C,gBAC4Db,EAAMc,IADlE,gBAC6Ed,EAAMe,IADnF,0BACwGf,EAAMgB,kBAN3GlB,EAAAA,YAAAA,wBAgBT,MAAMM,GAAe,OAAOa,EAAAA,GAAP,sBAAH,kFAMFC,GAAKA,EAAEC,MAAMC,YANX,sBAOIF,GAAKA,EAAEC,MAAME,QAPjB,mBAQCH,GACfA,EAAEjB,eAAF,UACOiB,EAAEC,MAAMG,aADf,YAC+BJ,EAAEC,MAAMG,aADvC,QAEIJ,EAAEC,MAAMG,cAXE,kCAcHJ,GAAKA,EAAEC,MAAMI,gBAdV,WAePL,GAAKA,EAAEC,MAAMK,WAfN,wEAyBDC,EAAAA,EAAAA,GAAM,GAzBL,gEAoCZnB,GAAgB,OAAO,OAAP,sBAAH,0CAGRY,GAAKA,EAAEC,MAAMK,WAHL,uCAUnB,K,wfC3DA,SAASE,GAAY,aAACC,EAAD,UAAeC,IAClC,OACE,QAAC,EAAAC,SAAD,YACE,QAACC,EAAD,YACE,QAACC,EAAD,WACE,QAACC,EAAD,WAAoBzB,EAAAA,EAAAA,GAAE,aAET,SAAdqB,IACC,QAAC,KAAD,WACE,QAAC,KAAD,CACEK,OAAO1B,EAAAA,EAAAA,GAAE,8BACT2B,KAAK,QACLC,KAAK,iEAHP,UAKG5B,EAAAA,EAAAA,GAAE,yBAKX,QAAC,KAAD,WACE,QAAC,KAAD,CAAsB6B,YAAU,EAAhC,WACE,cAAIrC,UAAS,UAAmB,UAAd6B,EAAwB,SAAW,IAArD,UACE,QAAC,IAAD,CAAMS,GAAE,yBAAoBV,EAAaW,KAAjC,WAAR,UACG/B,EAAAA,EAAAA,GAAE,oBAGP,cAAIR,UAAS,UAAmB,SAAd6B,EAAuB,SAAW,IAApD,UACE,QAAC,IAAD,CAAMS,GAAE,yBAAoBV,EAAaW,KAAjC,gBAAR,WACG/B,EAAAA,EAAAA,GAAE,eACH,QAAC,IAAD,CAAcgC,KAAK,sBA7BxBb,EAAAA,YAAAA,cAsCT,UAEMI,GAAmB,OAAOU,EAAAA,GAAP,qBAAH,0EAOhBT,GAAsB,OAAOS,EAAAA,GAAP,qBAAH,2CAInBR,GAAoB,OAAOQ,EAAAA,GAAP,qBAAH,eACPf,EAAAA,EAAAA,GAAM,IADC","sources":["webpack:///./app/components/pageTimeRangeSelector.tsx","webpack:///./app/views/organizationStats/header.tsx"],"sourcesContent":["import {ComponentProps, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport TimeRangeSelector from 'app/components/organizations/timeRangeSelector';\nimport {Panel} from 'app/components/panels';\nimport {DEFAULT_RELATIVE_PERIODS} from 'app/constants';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\n\ntype Props = ComponentProps<typeof TimeRangeSelector> & {\n  className?: string;\n};\n\nfunction PageTimeRangeSelector({className, ...props}: Props) {\n  const [isCalendarOpen, setIsCalendarOpen] = useState(false);\n\n  return (\n    <DropdownDate className={className} isCalendarOpen={isCalendarOpen}>\n      <TimeRangeSelector\n        key={`period:${props.relative}-start:${props.start}-end:${props.end}-utc:${props.utc}-defaultPeriod:${props.defaultPeriod}`}\n        label={<DropdownLabel>{t('Date Range:')}</DropdownLabel>}\n        onToggleSelector={isOpen => setIsCalendarOpen(isOpen)}\n        relativeOptions={DEFAULT_RELATIVE_PERIODS}\n        {...props}\n      />\n    </DropdownDate>\n  );\n}\n\nconst DropdownDate = styled(Panel)<{isCalendarOpen: boolean}>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 42px;\n\n  background: ${p => p.theme.background};\n  border: 1px solid ${p => p.theme.border};\n  border-radius: ${p =>\n    p.isCalendarOpen\n      ? `${p.theme.borderRadius} ${p.theme.borderRadius} 0 0`\n      : p.theme.borderRadius};\n  padding: 0;\n  margin: 0;\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.textColor};\n\n  /* TimeRangeRoot in TimeRangeSelector */\n  > div {\n    width: 100%;\n    align-self: stretch;\n  }\n\n  /* StyledItemHeader used to show selected value of TimeRangeSelector */\n  > div > div:first-child {\n    padding: 0 ${space(2)};\n  }\n\n  /* Menu that dropdowns from TimeRangeSelector */\n  > div > div:last-child {\n    /* Remove awkward 1px width difference on dropdown due to border */\n    box-sizing: content-box;\n    font-size: 1em;\n  }\n`;\n\nconst DropdownLabel = styled('span')`\n  text-align: left;\n  font-weight: 600;\n  color: ${p => p.theme.textColor};\n\n  > span:last-child {\n    font-weight: 400;\n  }\n`;\n\nexport default PageTimeRangeSelector;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Button from 'app/components/button';\nimport FeatureBadge from 'app/components/featureBadge';\nimport * as Layout from 'app/components/layouts/thirds';\nimport Link from 'app/components/links/link';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Organization} from 'app/types';\n\ntype Props = {\n  organization: Organization;\n  activeTab: 'stats' | 'team';\n};\n\nfunction StatsHeader({organization, activeTab}: Props) {\n  return (\n    <Fragment>\n      <BorderlessHeader>\n        <StyledHeaderContent>\n          <StyledLayoutTitle>{t('Stats')}</StyledLayoutTitle>\n        </StyledHeaderContent>\n        {activeTab === 'team' && (\n          <Layout.HeaderActions>\n            <Button\n              title={t('Send us feedback via email')}\n              size=\"small\"\n              href=\"mailto:workflow-feedback@sentry.io?subject=Team Stats Feedback\"\n            >\n              {t('Give Feedback')}\n            </Button>\n          </Layout.HeaderActions>\n        )}\n      </BorderlessHeader>\n      <Layout.Header>\n        <Layout.HeaderNavTabs underlined>\n          <li className={`${activeTab === 'stats' ? 'active' : ''}`}>\n            <Link to={`/organizations/${organization.slug}/stats/`}>\n              {t('Usage Stats')}\n            </Link>\n          </li>\n          <li className={`${activeTab === 'team' ? 'active' : ''}`}>\n            <Link to={`/organizations/${organization.slug}/stats/team/`}>\n              {t('Team Stats')}\n              <FeatureBadge type=\"beta\" />\n            </Link>\n          </li>\n        </Layout.HeaderNavTabs>\n      </Layout.Header>\n    </Fragment>\n  );\n}\n\nexport default StatsHeader;\n\nconst BorderlessHeader = styled(Layout.Header)`\n  border-bottom: 0;\n\n  /* Not enough buttons to change direction for mobile view */\n  grid-template-columns: 1fr auto;\n`;\n\nconst StyledHeaderContent = styled(Layout.HeaderContent)`\n  margin-bottom: 0;\n`;\n\nconst StyledLayoutTitle = styled(Layout.Title)`\n  margin-top: ${space(0.5)};\n`;\n"],"names":["PageTimeRangeSelector","className","props","isCalendarOpen","setIsCalendarOpen","useState","DropdownDate","label","DropdownLabel","t","onToggleSelector","isOpen","relativeOptions","DEFAULT_RELATIVE_PERIODS","relative","start","end","utc","defaultPeriod","Panel","p","theme","background","border","borderRadius","fontSizeMedium","textColor","space","StatsHeader","organization","activeTab","Fragment","BorderlessHeader","StyledHeaderContent","StyledLayoutTitle","title","size","href","underlined","to","slug","type","Layout"],"sourceRoot":""}