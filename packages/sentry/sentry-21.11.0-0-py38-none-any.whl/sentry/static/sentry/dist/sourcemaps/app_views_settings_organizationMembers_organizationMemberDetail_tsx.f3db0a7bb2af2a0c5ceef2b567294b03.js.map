{"version":3,"file":"chunks/app_views_settings_organizationMembers_organizationMemberDetail_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/isMemberDisabledFromLimit.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/utils/teams.tsx","webpack:///./app/views/settings/organizationMembers/inviteMember/roleSelect.tsx","webpack:///./app/views/settings/organizationMembers/organizationMemberDetail.tsx"],"sourcesContent":["import {Member} from 'app/types';\n\n// check to see if a member has been disabled because of the member limit\nexport default function isMemberDisabledFromLimit(member?: Member | null) {\n  return member?.flags['member-limit:restricted'] ?? false;\n}\n","import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\nimport {RouteWithName} from 'app/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  routes: RouteWithName[];\n\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n  location?: Location;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import {Fragment} from 'react';\n\nimport useTeams from 'app/utils/useTeams';\n\ntype RenderProps = ReturnType<typeof useTeams>;\n\ntype Props = Parameters<typeof useTeams>[0] & {\n  children: (props: RenderProps) => React.ReactNode;\n};\n\n/**\n * This is a utility component to leverage the useTeams hook to provide\n * a render props component which returns teams through a variety of inputs\n * such as a list of slugs or user teams.\n */\nfunction Teams({children, ...props}: Props) {\n  const renderProps = useTeams(props);\n\n  return <Fragment>{children(renderProps)}</Fragment>;\n}\n\nexport default Teams;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport Radio from 'app/components/radio';\nimport {t} from 'app/locale';\nimport {MemberRole} from 'app/types';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\n\nconst Label = styled('label')`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  margin-bottom: 0;\n`;\n\ntype Props = {\n  enforceAllowed: boolean;\n  disabled: boolean;\n  selectedRole: string;\n  roleList: MemberRole[];\n  setRole: (id: string) => void;\n};\n\nclass RoleSelect extends Component<Props> {\n  render() {\n    const {disabled, enforceAllowed, roleList, selectedRole} = this.props;\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Role')}</PanelHeader>\n\n        <PanelBody>\n          {roleList.map(role => {\n            const {desc, name, id, allowed} = role;\n            const isDisabled = disabled || (enforceAllowed && !allowed);\n            return (\n              <PanelItem\n                key={id}\n                onClick={() => !isDisabled && this.props.setRole(id)}\n                css={!isDisabled ? {} : {color: 'grey', cursor: 'default'}}\n              >\n                <Label>\n                  <Radio id={id} value={name} checked={id === selectedRole} readOnly />\n                  <div style={{flex: 1, padding: '0 16px'}}>\n                    {name}\n                    <TextBlock noMargin>\n                      <div className=\"help-block\">{desc}</div>\n                    </TextBlock>\n                  </div>\n                </Label>\n              </PanelItem>\n            );\n          })}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nexport default RoleSelect;\n","import {Fragment} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\n\nimport {removeAuthenticator} from 'app/actionCreators/account';\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'app/actionCreators/indicator';\nimport {resendMemberInvite, updateMember} from 'app/actionCreators/members';\nimport AutoSelectText from 'app/components/autoSelectText';\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\nimport DateTime from 'app/components/dateTime';\nimport NotFound from 'app/components/errors/notFound';\nimport HookOrDefault from 'app/components/hookOrDefault';\nimport ExternalLink from 'app/components/links/externalLink';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport Tooltip from 'app/components/tooltip';\nimport {t, tct} from 'app/locale';\nimport {inputStyles} from 'app/styles/input';\nimport space from 'app/styles/space';\nimport {Member, Organization, Team} from 'app/types';\nimport isMemberDisabledFromLimit from 'app/utils/isMemberDisabledFromLimit';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport Teams from 'app/utils/teams';\nimport withOrganization from 'app/utils/withOrganization';\nimport AsyncView from 'app/views/asyncView';\nimport Field from 'app/views/settings/components/forms/field';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TeamSelect from 'app/views/settings/components/teamSelect';\n\nimport RoleSelect from './inviteMember/roleSelect';\n\nconst MULTIPLE_ORGS = t('Cannot be reset since user is in more than one organization');\nconst NOT_ENROLLED = t('Not enrolled in two-factor authentication');\nconst NO_PERMISSION = t('You do not have permission to perform this action');\nconst TWO_FACTOR_REQUIRED = t(\n  'Cannot be reset since two-factor is required for this organization'\n);\n\ntype RouteParams = {\n  orgId: string;\n  memberId: string;\n};\n\ntype Props = {\n  organization: Organization;\n} & RouteComponentProps<RouteParams, {}>;\n\ntype State = {\n  roleList: Member['roles'];\n  selectedRole: Member['role'];\n  member: Member | null;\n} & AsyncView['state'];\n\nconst DisabledMemberTooltip = HookOrDefault({\n  hookName: 'component:disabled-member-tooltip',\n  defaultComponent: ({children}) => <Fragment>{children}</Fragment>,\n});\n\nclass OrganizationMemberDetail extends AsyncView<Props, State> {\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      roleList: [],\n      selectedRole: '',\n      member: null,\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {organization, params} = this.props;\n    return [\n      ['member', `/organizations/${organization.slug}/members/${params.memberId}/`],\n    ];\n  }\n\n  redirectToMemberPage() {\n    const {location, params, routes} = this.props;\n    const members = recreateRoute('members/', {\n      location,\n      routes,\n      params,\n      stepBack: -2,\n    });\n    browserHistory.push(members);\n  }\n\n  handleSave = async () => {\n    const {organization, params} = this.props;\n\n    addLoadingMessage(t('Saving...'));\n    this.setState({busy: true});\n\n    try {\n      await updateMember(this.api, {\n        orgId: organization.slug,\n        memberId: params.memberId,\n        data: this.state.member,\n      });\n      addSuccessMessage(t('Saved'));\n      this.redirectToMemberPage();\n    } catch (resp) {\n      const errorMessage =\n        (resp && resp.responseJSON && resp.responseJSON.detail) || t('Could not save...');\n      addErrorMessage(errorMessage);\n    }\n    this.setState({busy: false});\n  };\n\n  handleInvite = async (regenerate: boolean) => {\n    const {organization, params} = this.props;\n\n    addLoadingMessage(t('Sending invite...'));\n\n    this.setState({busy: true});\n\n    try {\n      const data = await resendMemberInvite(this.api, {\n        orgId: organization.slug,\n        memberId: params.memberId,\n        regenerate,\n      });\n\n      addSuccessMessage(t('Sent invite!'));\n\n      if (regenerate) {\n        this.setState(state => ({member: {...state.member, ...data}}));\n      }\n    } catch (_err) {\n      addErrorMessage(t('Could not send invite'));\n    }\n\n    this.setState({busy: false});\n  };\n\n  handleAddTeam = (team: Team) => {\n    const {member} = this.state;\n    if (!member!.teams.includes(team.slug)) {\n      member!.teams.push(team.slug);\n    }\n    this.setState({member});\n  };\n\n  handleRemoveTeam = (removedTeam: string) => {\n    const {member} = this.state;\n\n    this.setState({\n      member: {\n        ...member!,\n        teams: member!.teams.filter(slug => slug !== removedTeam),\n      },\n    });\n  };\n\n  handle2faReset = async () => {\n    const {organization, router} = this.props;\n    const {user} = this.state.member!;\n\n    const requests = user.authenticators.map(auth =>\n      removeAuthenticator(this.api, user.id, auth.id)\n    );\n\n    try {\n      await Promise.all(requests);\n      router.push(`/settings/${organization.slug}/members/`);\n      addSuccessMessage(t('All authenticators have been removed'));\n    } catch (err) {\n      addErrorMessage(t('Error removing authenticators'));\n      Sentry.captureException(err);\n    }\n  };\n\n  showResetButton = () => {\n    const {organization} = this.props;\n    const {member} = this.state;\n    const {user} = member!;\n\n    if (!user || !user.authenticators || organization.require2FA) {\n      return false;\n    }\n    const hasAuth = user.authenticators.length >= 1;\n    return hasAuth && user.canReset2fa;\n  };\n\n  getTooltip = (): string => {\n    const {organization} = this.props;\n    const {member} = this.state;\n    const {user} = member!;\n\n    if (!user) {\n      return '';\n    }\n\n    if (!user.authenticators) {\n      return NO_PERMISSION;\n    }\n    if (!user.authenticators.length) {\n      return NOT_ENROLLED;\n    }\n    if (!user.canReset2fa) {\n      return MULTIPLE_ORGS;\n    }\n    if (organization.require2FA) {\n      return TWO_FACTOR_REQUIRED;\n    }\n\n    return '';\n  };\n\n  get memberDeactivated() {\n    return isMemberDisabledFromLimit(this.state.member);\n  }\n\n  renderMemberStatus(member: Member) {\n    if (this.memberDeactivated) {\n      return (\n        <em>\n          <DisabledMemberTooltip>{t('Deactivated')}</DisabledMemberTooltip>\n        </em>\n      );\n    }\n    if (member.expired) {\n      return <em>{t('Invitation Expired')}</em>;\n    }\n    if (member.pending) {\n      return <em>{t('Invitation Pending')}</em>;\n    }\n    return t('Active');\n  }\n\n  renderBody() {\n    const {organization} = this.props;\n    const {member} = this.state;\n\n    if (!member) {\n      return <NotFound />;\n    }\n\n    const {access} = organization;\n    const inviteLink = member.invite_link;\n    const canEdit = access.includes('org:write') && !this.memberDeactivated;\n\n    const {email, expired, pending} = member;\n    const canResend = !expired;\n    const showAuth = !pending;\n\n    return (\n      <Fragment>\n        <SettingsPageHeader\n          title={\n            <Fragment>\n              <div>{member.name}</div>\n              <ExtraHeaderText>{t('Member Settings')}</ExtraHeaderText>\n            </Fragment>\n          }\n        />\n\n        <Panel>\n          <PanelHeader>{t('Basics')}</PanelHeader>\n\n          <PanelBody>\n            <PanelItem>\n              <OverflowWrapper>\n                <Details>\n                  <div>\n                    <DetailLabel>{t('Email')}</DetailLabel>\n                    <div>\n                      <ExternalLink href={`mailto:${email}`}>{email}</ExternalLink>\n                    </div>\n                  </div>\n                  <div>\n                    <DetailLabel>{t('Status')}</DetailLabel>\n                    <div data-test-id=\"member-status\">\n                      {this.renderMemberStatus(member)}\n                    </div>\n                  </div>\n                  <div>\n                    <DetailLabel>{t('Added')}</DetailLabel>\n                    <div>\n                      <DateTime dateOnly date={member.dateCreated} />\n                    </div>\n                  </div>\n                </Details>\n\n                {inviteLink && (\n                  <InviteSection>\n                    <div>\n                      <DetailLabel>{t('Invite Link')}</DetailLabel>\n                      <AutoSelectText>\n                        <CodeInput>{inviteLink}</CodeInput>\n                      </AutoSelectText>\n                      <p className=\"help-block\">\n                        {t('This unique invite link may only be used by this member.')}\n                      </p>\n                    </div>\n                    <InviteActions>\n                      <Button onClick={() => this.handleInvite(true)}>\n                        {t('Generate New Invite')}\n                      </Button>\n                      {canResend && (\n                        <Button\n                          data-test-id=\"resend-invite\"\n                          onClick={() => this.handleInvite(false)}\n                        >\n                          {t('Resend Invite')}\n                        </Button>\n                      )}\n                    </InviteActions>\n                  </InviteSection>\n                )}\n              </OverflowWrapper>\n            </PanelItem>\n          </PanelBody>\n        </Panel>\n\n        {showAuth && (\n          <Panel>\n            <PanelHeader>{t('Authentication')}</PanelHeader>\n            <PanelBody>\n              <Field\n                alignRight\n                flexibleControlStateSize\n                label={t('Reset two-factor authentication')}\n                help={t(\n                  'Resetting two-factor authentication will remove all two-factor authentication methods for this member.'\n                )}\n              >\n                <Tooltip\n                  data-test-id=\"reset-2fa-tooltip\"\n                  disabled={this.showResetButton()}\n                  title={this.getTooltip()}\n                >\n                  <Confirm\n                    disabled={!this.showResetButton()}\n                    message={tct(\n                      'Are you sure you want to disable all two-factor authentication methods for [name]?',\n                      {name: member.name ? member.name : 'this member'}\n                    )}\n                    onConfirm={this.handle2faReset}\n                    data-test-id=\"reset-2fa-confirm\"\n                  >\n                    <Button data-test-id=\"reset-2fa\" priority=\"danger\">\n                      {t('Reset two-factor authentication')}\n                    </Button>\n                  </Confirm>\n                </Tooltip>\n              </Field>\n            </PanelBody>\n          </Panel>\n        )}\n\n        <RoleSelect\n          enforceAllowed={false}\n          disabled={!canEdit}\n          roleList={member.roles}\n          selectedRole={member.role}\n          setRole={slug => this.setState({member: {...member, role: slug}})}\n        />\n\n        <Teams slugs={member.teams}>\n          {({teams, initiallyLoaded}) => (\n            <TeamSelect\n              organization={organization}\n              selectedTeams={teams}\n              disabled={!canEdit}\n              onAddTeam={this.handleAddTeam}\n              onRemoveTeam={this.handleRemoveTeam}\n              loadingTeams={!initiallyLoaded}\n            />\n          )}\n        </Teams>\n\n        <Footer>\n          <Button\n            priority=\"primary\"\n            busy={this.state.busy}\n            onClick={this.handleSave}\n            disabled={!canEdit}\n          >\n            {t('Save Member')}\n          </Button>\n        </Footer>\n      </Fragment>\n    );\n  }\n}\n\nexport default withOrganization(OrganizationMemberDetail);\n\nconst ExtraHeaderText = styled('div')`\n  color: ${p => p.theme.gray300};\n  font-weight: normal;\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n\nconst Details = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  grid-template-columns: 2fr 1fr 1fr;\n  grid-gap: ${space(2)};\n  width: 100%;\n\n  @media (max-width: ${p => p.theme.breakpoints[0]}) {\n    grid-auto-flow: row;\n    grid-template-columns: auto;\n  }\n`;\n\nconst DetailLabel = styled('div')`\n  font-weight: bold;\n  margin-bottom: ${space(0.5)};\n  color: ${p => p.theme.textColor};\n`;\n\nconst OverflowWrapper = styled('div')`\n  overflow: hidden;\n  flex: 1;\n`;\n\nconst InviteSection = styled('div')`\n  border-top: 1px solid ${p => p.theme.border};\n  margin-top: ${space(2)};\n  padding-top: ${space(2)};\n`;\n\nconst CodeInput = styled('code')`\n  ${p => inputStyles(p)}; /* Have to do this for typescript :( */\n`;\n\nconst InviteActions = styled('div')`\n  display: grid;\n  grid-gap: ${space(1)};\n  grid-auto-flow: column;\n  justify-content: flex-end;\n  margin-top: ${space(2)};\n`;\n\nconst Footer = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n`;\n"],"names":["isMemberDisabledFromLimit","member","flags","recreateRoute","to","options","routes","params","location","stepBack","paths","map","path","lastRootIndex","routeIndex","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","Teams","children","props","renderProps","useTeams","Fragment","Label","RoleSelect","Component","render","disabled","enforceAllowed","roleList","selectedRole","this","t","role","desc","name","id","allowed","isDisabled","onClick","setRole","css","color","cursor","value","checked","readOnly","style","flex","padding","noMargin","className","MULTIPLE_ORGS","NOT_ENROLLED","NO_PERMISSION","TWO_FACTOR_REQUIRED","DisabledMemberTooltip","HookOrDefault","hookName","defaultComponent","OrganizationMemberDetail","AsyncView","async","organization","addLoadingMessage","setState","busy","updateMember","api","orgId","slug","memberId","data","state","addSuccessMessage","redirectToMemberPage","resp","errorMessage","responseJSON","detail","addErrorMessage","resendMemberInvite","regenerate","_err","team","teams","includes","push","removedTeam","filter","router","user","requests","authenticators","auth","removeAuthenticator","Promise","all","err","Sentry","require2FA","length","canReset2fa","getDefaultState","super","getEndpoints","members","browserHistory","renderMemberStatus","memberDeactivated","expired","pending","renderBody","access","inviteLink","invite_link","canEdit","email","canResend","showAuth","title","ExtraHeaderText","OverflowWrapper","Details","DetailLabel","href","dateOnly","date","dateCreated","InviteSection","CodeInput","InviteActions","handleInvite","alignRight","flexibleControlStateSize","label","help","showResetButton","getTooltip","message","tct","onConfirm","handle2faReset","priority","roles","slugs","initiallyLoaded","selectedTeams","onAddTeam","handleAddTeam","onRemoveTeam","handleRemoveTeam","loadingTeams","Footer","handleSave","withOrganization","p","theme","gray300","fontSizeLarge","space","breakpoints","textColor","border","inputStyles"],"sourceRoot":""}