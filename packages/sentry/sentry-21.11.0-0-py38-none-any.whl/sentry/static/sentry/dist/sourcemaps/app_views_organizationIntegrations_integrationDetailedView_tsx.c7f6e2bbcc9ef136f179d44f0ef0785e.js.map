{"version":3,"file":"chunks/app_views_organizationIntegrations_integrationDetailedView_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"iiBA2Be,MAAMA,UAAuBC,EAAAA,UAAuB,oDAUzC,OAVyC,0BAqCnDC,IACZ,MAAM,QAACC,EAAD,gBAAUC,EAAV,YAA2BC,EAA3B,aAAwCC,EAAxC,SAAsDC,GAAYC,KAAKC,OAE7EC,EAAAA,EAAAA,IAA0B,kCAAmC,CAC3DC,YAAaJ,EAASK,IACtBC,iBAAkB,cAClBP,aAAAA,KACGF,IAEL,MACM,IAACU,EAAD,MAAMC,EAAN,OAAaC,GAAUT,EAASU,aAChC,KAACC,EAAD,IAAOC,GAAOX,KAAKY,sBAAsBL,EAAOC,GAEtD,IAAIK,EAAiC,IAAInB,GAErCC,IACFkB,EAAMlB,QAAUA,GAGdE,IACFgB,EAAQ,IAAIA,KAAUhB,IAGxB,MAAMiB,EAAa,GAAH,OAAMR,EAAN,YAAaS,EAAAA,UAAsBF,IAC7CG,EAAO,wBAAH,OAA2BT,EAA3B,mBAA2CC,EAA3C,gBAAyDG,EAAzD,iBAAqED,GAE/EV,KAAKiB,OAASC,OAAOC,KAAKL,EAjBb,uBAiB+BE,GAC5ChB,KAAKiB,QAAUjB,KAAKiB,OAAOG,YAhEoC,iCAmE5CC,IACnB,MAAM,gBAACzB,EAAD,UAAkB0B,EAAlB,aAA6BxB,EAA7B,SAA2CC,GAAYC,KAAKC,MAElE,GAAIoB,EAAQE,SAAWC,SAASC,SAASF,OACvC,OAGF,GAAIF,EAAQK,SAAW1B,KAAKiB,OAC1B,OAGF,MAAM,QAACU,EAAD,KAAUC,GAAQP,EAAQO,KAChC5B,KAAKiB,OAAS,KAETU,EAKAC,KAGL1B,EAAAA,EAAAA,IAA0B,qCAAsC,CAC9DC,YAAaJ,EAASK,IACtBC,iBAAkB,cAClBP,aAAAA,KACGF,KAELiC,EAAAA,EAAAA,KAAkBC,EAAAA,EAAAA,GAAE,WAAY/B,EAASgC,OACzCT,EAAUM,KAdRI,EAAAA,EAAAA,IAAgBJ,EAAKK,UAjFzBC,oBACEhB,OAAOiB,iBAAiB,UAAWnC,KAAKoC,mBAG1CC,uBACEnB,OAAOoB,oBAAoB,UAAWtC,KAAKoC,mBAC3CpC,KAAKiB,QAAUjB,KAAKiB,OAAOsB,QAK7B3B,sBAAsBL,EAAeC,GAEnC,MAAMgC,OACkBC,IAAtBvB,OAAOsB,WAA2BtB,OAAOsB,WAAatB,OAAOwB,QAEzDC,OAAiCF,IAArBvB,OAAOyB,UAA0BzB,OAAOyB,UAAYzB,OAAO0B,QAiB7E,MAAO,CAAClC,MAfWQ,OAAO2B,WACtB3B,OAAO2B,WACPrB,SAASsB,gBAAgBC,YACzBvB,SAASsB,gBAAgBC,YACzBC,OAAOzC,OAQe,EAAIA,EAAQ,EAAIiC,EAG5B7B,KATMO,OAAO+B,YACvB/B,OAAO+B,YACPzB,SAASsB,gBAAgBI,aACzB1B,SAASsB,gBAAgBI,aACzBF,OAAOxC,QAGe,EAAIA,EAAS,EAAImC,GAmE7CQ,SACE,MAAM,SAACC,GAAYpD,KAAKC,MAExB,OAAOmD,EAASpD,KAAKqD,aAtGJ7D,EAAAA,YAAAA,kB,mYCRN,MAAM8D,UAA6B7D,EAAAA,UAChD0D,SACE,MAAM,SACJpD,EADI,WAEJwD,EAFI,iBAGJC,EAHI,aAIJ1D,EAJI,UAKJ2D,EALI,gBAMJ7D,EANI,YAOJC,KACG6D,GACD1D,KAAKC,MAEH0D,EACJJ,IAAczB,EAAAA,EAAAA,GAAE2B,EAAY,SAAW,SAAU1D,EAAS6D,SAASC,MAErE,OACE,QAAC,IAAD,CACEC,SAAU/D,EAASgE,OACnBC,MAAK,iFAA4EjE,EAASgC,KAArF,cAFP,UAIE,QAAC,IAAD,CACEhC,SAAUA,EACVuB,UAAWkC,EACX1D,aAAcA,EACdF,gBAAiBA,EACjBC,YAAaA,EALf,SAOGoE,IACC,QAAC,KAAD,CACEH,UAAW/D,EAASgE,UAChBL,EACJO,QAAS,IAAMA,IAHjB,SAKGN,SAlCML,EAAAA,YAAAA,wB,suCCWN,MAAMY,UAA6BzE,EAAAA,UAAuB,mEAChD,KACrBO,KAAKC,MAAMC,0BAA0B,qCAGvCiE,sBAAsBC,GACpB,OAAIA,GAAWA,EAAQC,eACd,CACLC,KAAMF,EAAQC,eAAeC,KAC7BC,WAAYH,EAAQC,eAAeE,YAGhC,CACLD,MAAMxC,EAAAA,EAAAA,GACJ,sJAEFyC,YAAYzC,EAAAA,EAAAA,GAAE,WAIlB0C,aAAarE,GACXH,KAAKC,MAAMwE,SAAStE,GACpBH,KAAKC,MAAMC,0BAA0B,oCAGjB,yBACpB,MAAM,YAACC,GAAeH,KAAKC,OACrB,KAACqE,EAAD,WAAOC,GAAcvE,KAAKmE,sBAAsBhE,EAAYJ,SAASqE,SAU3E,MAAO,CACL/C,SARA,QAAC,WAAD,YACE,QAAC,IAAD,CAAOqD,KAAK,QAAQC,MAAM,QAAC,KAAD,CAAUC,KAAK,OAAzC,UACG9C,EAAAA,EAAAA,GAAE,iDAEJwC,KAKHO,YAAaN,EACbO,UAAW,IAAM9E,KAAKwE,aAAarE,IAIhB,0BACrB,MAAM,YAACA,GAAeH,KAAKC,OACrB,KAACqE,EAAD,WAAOC,GAAcpE,EAAYJ,SAASqE,QAAQW,gBAAkB,GAU1E,MAAO,CACL1D,SATA,QAAC,WAAD,YACE,QAAC,IAAD,CAAOqD,KAAK,QAAQC,MAAM,QAAC,KAAD,CAAUC,KAAK,OAAzC,UACG9C,EAAAA,EAAAA,GAAE,kDAEJwC,KAMHO,YAAaN,EACbO,UAAW,IAAM9E,KAAKC,MAAM+E,UAAU7E,IAI1CgD,SACE,MAAM,UAAC8B,EAAD,YAAY9E,EAAZ,aAAyBL,EAAzB,SAAuCC,EAAvC,gBAAiDmF,GAAmBlF,KAAKC,MAEzEkF,EACmB,WAAvBhF,EAAYiF,QAAuBjF,EAAYJ,SAASsF,WACpDrF,KAAKsF,oBACLtF,KAAKmF,mBAEX,OACE,QAAC,IAAD,CAAQI,OAAQ,CAAC,oBAAjB,SACG,EAAEC,UAAAA,MACD,QAACC,EAAD,CAAsCR,UAAWA,EAAjD,WACE,QAACS,EAAD,WACE,QAAC,IAAD,CAAiBvF,YAAaA,OAEhC,yBACE,QAAC,IAAD,CACE2D,SAAU0B,EACVG,SAAS,OACT3B,OAAOlC,EAAAA,EAAAA,GACL,oEAJJ,UAOGoD,IACC,QAAC,IAAD,CACEtF,gBAAiB,CACfgG,KAAM,4CACNC,mBAAmB,GAErBtC,YAAYzB,EAAAA,EAAAA,GAAE,cACd,eAAa,6BACbgC,WAAY0B,GAAoC,WAAvBrF,EAAYiF,QACrCT,MAAM,QAAC,KAAD,IACNnB,iBAAkB,OAClB1D,aAAcA,EACdC,SAAUA,EACV+F,SAAS,UACTlB,KAAK,WAGT,QAACmB,EAAD,CACEC,YAAU,EACVrB,MAAM,QAAC,KAAD,IACNb,WAAY0B,GAAoC,WAAvBrF,EAAYiF,QACrCa,GAAE,oBAAenG,EAAaoG,KAA5B,yBAAiDnG,EAASK,IAA1D,YAAiED,EAAYgG,GAA7E,KACF,eAAa,+BALf,UAOGrE,EAAAA,EAAAA,GAAE,qBAIT,yBACE,QAAC,IAAD,CACEgC,SAAU0B,EACVxB,OAAOlC,EAAAA,EAAAA,GACL,oEAHJ,UAME,QAAC,IAAD,CACEgE,SAAS,SACTM,aAAcpG,KAAKqG,qBACnBvC,UAAW0B,KACPL,EAJN,UAME,QAACY,EAAD,CACEjC,UAAW0B,EACXQ,YAAU,EACVrB,MAAM,QAAC,KAAD,IACN,eAAa,4BAJf,UAMG7C,EAAAA,EAAAA,GAAE,sBAMX,QAACwE,EAAD,CAAyBlB,OAAQjF,EAAYiF,WAjEzBjF,EAAYgG,OA1EvBjC,EAAAA,YAAAA,uBAmJrB,MAAM6B,GAAe,OAAOQ,EAAAA,GAAP,sBAAH,UACPC,GAAKA,EAAEC,MAAMC,SADN,KAIZjB,GAAkB,OAAO,MAAP,sBAAH,0DAKfC,GAAqB,OAAO,MAAP,sBAAH,iCAIlBiB,EACJ1G,IAEA,MAAMwG,GAAQG,EAAAA,EAAAA,MACR,OAACxB,KAAWoB,GAAKvG,EACjB4G,EAAmB,WAAXzB,EAAsBqB,EAAM9E,QAAU8E,EAAMC,QACpDI,EACO,WAAX1B,GACItD,EAAAA,EAAAA,GAAE,sEACFA,EAAAA,EAAAA,GAAE,qEACR,OACE,QAAC,IAAD,CAASkC,MAAO8C,EAAhB,UACE,kBAASN,EAAT,WACE,QAAC,IAAD,CAAiB5B,KAAM,EAAGiC,MAAOA,KACjC,QAACE,EAAD,oBACa,WAAX3B,GAAsBtD,EAAAA,EAAAA,GAAE,YAAaA,EAAAA,EAAAA,GAAE,qBAf3C6E,EAAAA,YAAAA,oBAsBN,MAAML,GAA0B,OAAOK,EAAP,sBAAH,0CAGlBH,GAAKA,EAAEC,MAAMC,SAHK,4EAQhBF,GAAKA,EAAEC,MAAMO,SARG,kBASTC,EAAAA,EAAAA,GAAM,GATG,yBAcvBF,GAAwB,OAAO,MAAP,sBAAH,aACbE,EAAAA,EAAAA,GAAM,KADO,OACIA,EAAAA,EAAAA,GAAM,IADV,KC1M3B,MAAMC,UAAgCC,EAAAA,EAGpC,wDAqFahH,IAEX,MAAM,MAACiH,GAASpH,KAAKC,MAAMoH,OAC3BrH,KAAKC,MAAMqH,OAAOC,KAAlB,oBACeH,EADf,yBACqCjH,EAAYJ,SAASK,IAD1D,YACiED,EAAYgG,GAD7E,UAxFF,wBA6FYhG,IACV,MAAM,MAACiH,GAASpH,KAAKC,MAAMoH,OAErBG,EAAmB,IAAIxH,KAAKyH,MAAMC,gBAElCC,EAAe3H,KAAKyH,MAAMC,eAAeE,QAAOC,GAAKA,EAAE1B,KAAOhG,EAAYgG,KAChFnG,KAAK8H,SAAS,CAACJ,eAAgBC,IAE/B,MAAMI,EAA0B,CAC9BC,OAAQ,SACR/F,MAAO,KACLjC,KAAK8H,SAAS,CAACJ,eAAgBF,KAC/BxF,EAAAA,EAAAA,KAAgBF,EAAAA,EAAAA,GAAE,mCAItB9B,KAAKiI,IAAIC,QAAT,yBAAmCd,EAAnC,yBAAyDjH,EAAYgG,GAArE,KAA4E4B,OA7G9E,yBAgHa5H,IACX,IAAIG,EAEJ,MAAO6H,EAAYC,GAAWjI,EAAYgI,WAAWE,MAAM,KAEzD/H,EAD8B,SAA5BH,EAAYmI,YACR,WAAH,OAAcH,EAAd,4BAEG,WAAH,OAAcA,EAAd,0BAA0CC,EAA1C,4BAGLlH,OAAOC,KAAKb,EAAK,cA1HnB,qCA6HwB,KACtBN,KAAKE,0BAA0B,sCA7HjCqI,eACE,MAAM,MAACnB,EAAD,gBAAQoB,GAAmBxI,KAAKC,MAAMoH,OAC5C,MAAO,CACL,CACE,cADF,yBAEoBD,EAFpB,8CAE+DoB,IAE/D,CACE,iBADF,yBAEoBpB,EAFpB,uCAEwDoB,EAFxD,sBAOe,sBACjB,MAAO,cAGG,eACV,OAAOxI,KAAKyH,MAAMgB,YAAYC,UAAU,GAG3B,kBACb,OAAO1I,KAAK4D,SAAS+E,YAGb,aACR,OAAO3I,KAAK4D,SAASgF,OAGb,aACR,MAAM7I,EAAWC,KAAKD,SAChB6D,EAAW5D,KAAK4D,SAIhBiF,GAAUjF,EAASQ,QAAQyE,QAAU,IAAIC,KAAIC,IACjD,OAAQA,EAAKpE,MACX,IAAK,eACL,IAAK,kBACH,MAAO,IAAIoE,EAAMpE,MAAM,QAAC,KAAD,KACzB,QACE,MAAO,IAAIoE,EAAMpE,MAAM,QAAC,KAAD,SAW7B,OAPK5E,EAASgE,QAAUH,EAASQ,QAAQ4E,iBACvCH,EAAOtB,KAAK,CACV7C,KAAM,UACNC,MAAM,QAAC,KAAD,IACNsE,KAAMrF,EAASQ,QAAQ4E,gBAAgBE,aAGpCL,EAGQ,oBACf,MAAMjF,EAAW5D,KAAK4D,SACtB,MAAO,CACL,CAACtD,IAAKsD,EAASuF,WAAYnF,MAAO,eAClC,CAAC1D,IAAKsD,EAASwF,UAAWpF,MAAO,iBAIzB,eACV,OAAOhE,KAAKD,SAAS6D,SAGV,gBACX,OAAO5D,KAAKyH,MAAMC,eAAe2B,OAAS,EAGtB,yBACpB,OAAOrJ,KAAKsJ,UAAY,YAAc,gBAGrB,sBACjB,OAAOtJ,KAAKD,SAASgC,KAGR,kBACb,OAAO/B,KAAK4D,SAAS2F,SA+CvBC,gBAAgBC,EAA+BC,GAC7C,MAAM,aAAC5J,GAAgBE,KAAKC,MACtBF,EAAWC,KAAKD,UAChB,SAAC6D,GAAY7D,EAKb2D,EAAc,CAClBiG,MAAO,CAACC,cAAc3C,EAAAA,EAAAA,GAAM,IAC5BrC,KALW,QAMXkB,SALe,UAMf,eAAgB,iBAChBhC,SAAU2F,EACV3J,aAAAA,GAGF,OAAK4J,EAID3J,EAASgE,QAET,QAAC,IAAD,CACEhE,SAAUA,EACVyD,iBAAkBxD,KAAKsB,UACvB1B,gBAAiB,CACfgG,KAAM,4CACNC,kBAA+C,kBAA5B7F,KAAK6J,uBAEtBnG,IAINE,EAASQ,QAAQ4E,iBAEjB,QAAC,KAAD,CACErE,MAAM,QAAC,KAAD,IACNmF,KAAMlG,EAASQ,QAAQ4E,gBAAgB1I,IACvC2D,QAASjE,KAAK+J,sBACdC,UAAQ,KACJtG,EALN,SAOGE,EAASQ,QAAQ4E,gBAAgBzF,cAMjC,QAAC,EAAA0G,SAAD,IA/BEjK,KAAKkK,iCAkChBC,uBACE,MAAM,eAACzC,GAAkB1H,KAAKyH,OACxB,aAAC3H,GAAgBE,KAAKC,MACtBF,EAAWC,KAAKD,SAEtB,IAAK2H,EAAe2B,OAClB,OAAOrJ,KAAKoK,4BAGd,MAAMC,GAAYC,EAAAA,EAAAA,IAAa5C,GAC/B,OACE,QAAC,EAAAuC,SAAD,WACGI,IACC,QAAC,IAAD,CAAO3F,KAAK,UAAUC,MAAM,QAAC,KAAD,CAAUC,KAAK,OAA3C,SACGyF,IAGJ3C,EAAeoB,KAAI3I,IAClB,QAACoK,EAAD,WACE,QAACrG,EAAD,CACEpE,aAAcA,EACdC,SAAUA,EACVI,YAAaA,EACbsE,SAAUzE,KAAKyE,SACfO,UAAWhF,KAAKgF,UAChB,eAAc7E,EAAYgG,GAC1BjG,0BAA2BF,KAAKE,0BAChCgF,kBAAmBmF,KATFlK,EAAYgG,UAkB3C,MAAMoE,GAAiB,OAAO,MAAP,qBAAH,YACPtD,EAAAA,EAAAA,GAAM,GADC,sBAEET,GAAKA,EAAEC,MAAM+D,QAFf,yCAIEhE,GAAKA,EAAEC,MAAMgE,YAJf,0CAOWjE,GAAKA,EAAEC,MAAM+D,QAPxB,MAWpB,GAAeE,EAAAA,EAAAA,GAAiBxD,I,sdCjPjB,MAAMyD,UAAwBC,EAAAA,UAK3CzH,SACE,MAAM,YAAChD,EAAD,QAAc0K,GAAW7K,KAAKC,MACpC,OACE,QAAC6K,EAAD,YACE,yBACE,QAAC,IAAD,CAAiBlG,KAAMiG,EAAU,GAAK,GAAI1K,YAAaA,OAEzD,QAAC4K,EAAD,CAAQF,QAASA,EAAjB,WACE,QAACG,EAAD,CAAiB,eAAa,mBAA9B,SACG7K,EAAY4B,QAEf,QAACkJ,EAAD,CAAYJ,QAASA,EAArB,SAA+B1K,EAAYgI,oBAhBhCwC,EAAAA,YAAAA,mB,OAAAA,EAAAA,eACiB,CAClCE,SAAS,IAqBb,MAAMC,GAAO,OAAO,MAAP,sBAAH,sCAIJC,GAAS,OAAO,MAAP,sBAAH,uCAGRvE,GAAMA,EAAEqE,QAAU,uBAAyB,IAHnC,oBAIQrE,GAAMA,EAAEqE,QAAU,MAAQ,UAJlC,kBAKM5D,EAAAA,EAAAA,GAAM,GALZ,wCAUN+D,GAAkB,OAAO,MAAP,sBAAH,4CAOfC,GAAa,OAAO,MAAP,sBAAH,UACLzE,GAAMA,EAAEqE,QAAUrE,EAAEC,MAAMO,QAAUR,EAAEC,MAAMyE,SADvC,iBAEC1E,GAAMA,EAAEqE,SAAU5D,EAAAA,EAAAA,GAAM,GAAK,WAF9B,gBAGAT,GAAOA,EAAEqE,QAAwB,WAAd5D,EAAAA,EAAAA,GAAM,MAHzB","sources":["webpack:///./app/views/organizationIntegrations/addIntegration.tsx","webpack:///./app/views/organizationIntegrations/addIntegrationButton.tsx","webpack:///./app/views/organizationIntegrations/installedIntegration.tsx","webpack:///./app/views/organizationIntegrations/integrationDetailedView.tsx","webpack:///./app/views/organizationIntegrations/integrationItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as queryString from 'query-string';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {t} from 'app/locale';\nimport {IntegrationProvider, IntegrationWithConfig, Organization} from 'app/types';\nimport {trackIntegrationAnalytics} from 'app/utils/integrationUtil';\n\ntype Props = {\n  children: (\n    openDialog: (urlParams?: {[key: string]: string}) => void\n  ) => React.ReactNode;\n  provider: IntegrationProvider;\n  onInstall: (data: IntegrationWithConfig) => void;\n  account?: string;\n  organization: Organization; // for analytics\n  analyticsParams?: {\n    view:\n      | 'integrations_directory_integration_detail'\n      | 'integrations_directory'\n      | 'onboarding'\n      | 'project_creation';\n    already_installed: boolean;\n  };\n  modalParams?: {[key: string]: string};\n};\n\nexport default class AddIntegration extends React.Component<Props> {\n  componentDidMount() {\n    window.addEventListener('message', this.didReceiveMessage);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('message', this.didReceiveMessage);\n    this.dialog && this.dialog.close();\n  }\n\n  dialog: Window | null = null;\n\n  computeCenteredWindow(width: number, height: number) {\n    // Taken from: https://stackoverflow.com/questions/4068373/center-a-popup-window-on-screen\n    const screenLeft =\n      window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n\n    const screenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n    const innerWidth = window.innerWidth\n      ? window.innerWidth\n      : document.documentElement.clientWidth\n      ? document.documentElement.clientWidth\n      : screen.width;\n\n    const innerHeight = window.innerHeight\n      ? window.innerHeight\n      : document.documentElement.clientHeight\n      ? document.documentElement.clientHeight\n      : screen.height;\n\n    const left = innerWidth / 2 - width / 2 + screenLeft;\n    const top = innerHeight / 2 - height / 2 + screenTop;\n\n    return {left, top};\n  }\n\n  openDialog = (urlParams?: {[key: string]: string}) => {\n    const {account, analyticsParams, modalParams, organization, provider} = this.props;\n\n    trackIntegrationAnalytics('integrations.installation_start', {\n      integration: provider.key,\n      integration_type: 'first_party',\n      organization,\n      ...analyticsParams,\n    });\n    const name = 'sentryAddIntegration';\n    const {url, width, height} = provider.setupDialog;\n    const {left, top} = this.computeCenteredWindow(width, height);\n\n    let query: {[key: string]: string} = {...urlParams};\n\n    if (account) {\n      query.account = account;\n    }\n\n    if (modalParams) {\n      query = {...query, ...modalParams};\n    }\n\n    const installUrl = `${url}?${queryString.stringify(query)}`;\n    const opts = `scrollbars=yes,width=${width},height=${height},top=${top},left=${left}`;\n\n    this.dialog = window.open(installUrl, name, opts);\n    this.dialog && this.dialog.focus();\n  };\n\n  didReceiveMessage = (message: MessageEvent) => {\n    const {analyticsParams, onInstall, organization, provider} = this.props;\n\n    if (message.origin !== document.location.origin) {\n      return;\n    }\n\n    if (message.source !== this.dialog) {\n      return;\n    }\n\n    const {success, data} = message.data;\n    this.dialog = null;\n\n    if (!success) {\n      addErrorMessage(data.error);\n      return;\n    }\n\n    if (!data) {\n      return;\n    }\n    trackIntegrationAnalytics('integrations.installation_complete', {\n      integration: provider.key,\n      integration_type: 'first_party',\n      organization,\n      ...analyticsParams,\n    });\n    addSuccessMessage(t('%s added', provider.name));\n    onInstall(data);\n  };\n\n  render() {\n    const {children} = this.props;\n\n    return children(this.openDialog);\n  }\n}\n","import * as React from 'react';\n\nimport Button from 'app/components/button';\nimport Tooltip from 'app/components/tooltip';\nimport {t} from 'app/locale';\nimport {IntegrationWithConfig} from 'app/types';\n\nimport AddIntegration from './addIntegration';\n\ntype Props = {\n  onAddIntegration: (data: IntegrationWithConfig) => void;\n  buttonText?: string;\n  reinstall?: boolean;\n} & React.ComponentProps<typeof Button> &\n  Pick<\n    React.ComponentProps<typeof AddIntegration>,\n    'provider' | 'organization' | 'analyticsParams' | 'modalParams'\n  >;\n\nexport default class AddIntegrationButton extends React.Component<Props> {\n  render() {\n    const {\n      provider,\n      buttonText,\n      onAddIntegration,\n      organization,\n      reinstall,\n      analyticsParams,\n      modalParams,\n      ...buttonProps\n    } = this.props;\n\n    const label =\n      buttonText || t(reinstall ? 'Enable' : 'Add %s', provider.metadata.noun);\n\n    return (\n      <Tooltip\n        disabled={provider.canAdd}\n        title={`Integration cannot be added on Sentry. Enable this integration via the ${provider.name} instance.`}\n      >\n        <AddIntegration\n          provider={provider}\n          onInstall={onAddIntegration}\n          organization={organization}\n          analyticsParams={analyticsParams}\n          modalParams={modalParams}\n        >\n          {onClick => (\n            <Button\n              disabled={!provider.canAdd}\n              {...buttonProps}\n              onClick={() => onClick()}\n            >\n              {label}\n            </Button>\n          )}\n        </AddIntegration>\n      </Tooltip>\n    );\n  }\n}\n","import * as React from 'react';\nimport {useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport Access from 'app/components/acl/access';\nimport Alert from 'app/components/alert';\nimport Button from 'app/components/button';\nimport CircleIndicator from 'app/components/circleIndicator';\nimport Confirm from 'app/components/confirm';\nimport Tooltip from 'app/components/tooltip';\nimport {IconDelete, IconFlag, IconSettings, IconWarning} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Integration, IntegrationProvider, ObjectStatus, Organization} from 'app/types';\nimport {IntegrationAnalyticsKey} from 'app/utils/analytics/integrationAnalyticsEvents';\n\nimport AddIntegrationButton from './addIntegrationButton';\nimport IntegrationItem from './integrationItem';\n\nexport type Props = {\n  organization: Organization;\n  provider: IntegrationProvider;\n  integration: Integration;\n  onRemove: (integration: Integration) => void;\n  onDisable: (integration: Integration) => void;\n  trackIntegrationAnalytics: (eventKey: IntegrationAnalyticsKey) => void; // analytics callback\n  className?: string;\n  requiresUpgrade?: boolean;\n};\n\nexport default class InstalledIntegration extends React.Component<Props> {\n  handleUninstallClick = () => {\n    this.props.trackIntegrationAnalytics('integrations.uninstall_clicked');\n  };\n\n  getRemovalBodyAndText(aspects: Integration['provider']['aspects']) {\n    if (aspects && aspects.removal_dialog) {\n      return {\n        body: aspects.removal_dialog.body,\n        actionText: aspects.removal_dialog.actionText,\n      };\n    }\n    return {\n      body: t(\n        'Deleting this integration will remove any project associated data. This action cannot be undone. Are you sure you want to delete this integration?'\n      ),\n      actionText: t('Delete'),\n    };\n  }\n\n  handleRemove(integration: Integration) {\n    this.props.onRemove(integration);\n    this.props.trackIntegrationAnalytics('integrations.uninstall_completed');\n  }\n\n  get removeConfirmProps() {\n    const {integration} = this.props;\n    const {body, actionText} = this.getRemovalBodyAndText(integration.provider.aspects);\n\n    const message = (\n      <React.Fragment>\n        <Alert type=\"error\" icon={<IconFlag size=\"md\" />}>\n          {t('Deleting this integration has consequences!')}\n        </Alert>\n        {body}\n      </React.Fragment>\n    );\n    return {\n      message,\n      confirmText: actionText,\n      onConfirm: () => this.handleRemove(integration),\n    };\n  }\n\n  get disableConfirmProps() {\n    const {integration} = this.props;\n    const {body, actionText} = integration.provider.aspects.disable_dialog || {};\n    const message = (\n      <React.Fragment>\n        <Alert type=\"error\" icon={<IconFlag size=\"md\" />}>\n          {t('This integration cannot be removed in Sentry')}\n        </Alert>\n        {body}\n      </React.Fragment>\n    );\n\n    return {\n      message,\n      confirmText: actionText,\n      onConfirm: () => this.props.onDisable(integration),\n    };\n  }\n\n  render() {\n    const {className, integration, organization, provider, requiresUpgrade} = this.props;\n\n    const removeConfirmProps =\n      integration.status === 'active' && integration.provider.canDisable\n        ? this.disableConfirmProps\n        : this.removeConfirmProps;\n\n    return (\n      <Access access={['org:integrations']}>\n        {({hasAccess}) => (\n          <IntegrationFlex key={integration.id} className={className}>\n            <IntegrationItemBox>\n              <IntegrationItem integration={integration} />\n            </IntegrationItemBox>\n            <div>\n              <Tooltip\n                disabled={hasAccess}\n                position=\"left\"\n                title={t(\n                  'You must be an organization owner, manager or admin to configure'\n                )}\n              >\n                {requiresUpgrade && (\n                  <AddIntegrationButton\n                    analyticsParams={{\n                      view: 'integrations_directory_integration_detail',\n                      already_installed: true,\n                    }}\n                    buttonText={t('Update Now')}\n                    data-test-id=\"integration-upgrade-button\"\n                    disabled={!(hasAccess && integration.status === 'active')}\n                    icon={<IconWarning />}\n                    onAddIntegration={() => {}}\n                    organization={organization}\n                    provider={provider}\n                    priority=\"primary\"\n                    size=\"small\"\n                  />\n                )}\n                <StyledButton\n                  borderless\n                  icon={<IconSettings />}\n                  disabled={!(hasAccess && integration.status === 'active')}\n                  to={`/settings/${organization.slug}/integrations/${provider.key}/${integration.id}/`}\n                  data-test-id=\"integration-configure-button\"\n                >\n                  {t('Configure')}\n                </StyledButton>\n              </Tooltip>\n            </div>\n            <div>\n              <Tooltip\n                disabled={hasAccess}\n                title={t(\n                  'You must be an organization owner, manager or admin to uninstall'\n                )}\n              >\n                <Confirm\n                  priority=\"danger\"\n                  onConfirming={this.handleUninstallClick}\n                  disabled={!hasAccess}\n                  {...removeConfirmProps}\n                >\n                  <StyledButton\n                    disabled={!hasAccess}\n                    borderless\n                    icon={<IconDelete />}\n                    data-test-id=\"integration-remove-button\"\n                  >\n                    {t('Uninstall')}\n                  </StyledButton>\n                </Confirm>\n              </Tooltip>\n            </div>\n\n            <StyledIntegrationStatus status={integration.status} />\n          </IntegrationFlex>\n        )}\n      </Access>\n    );\n  }\n}\n\nconst StyledButton = styled(Button)`\n  color: ${p => p.theme.gray300};\n`;\n\nconst IntegrationFlex = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst IntegrationItemBox = styled('div')`\n  flex: 1;\n`;\n\nconst IntegrationStatus = (\n  props: React.HTMLAttributes<HTMLDivElement> & {status: ObjectStatus}\n) => {\n  const theme = useTheme();\n  const {status, ...p} = props;\n  const color = status === 'active' ? theme.success : theme.gray300;\n  const titleText =\n    status === 'active'\n      ? t('This Integration can be disabled by clicking the Uninstall button')\n      : t('This Integration has been disconnected from the external provider');\n  return (\n    <Tooltip title={titleText}>\n      <div {...p}>\n        <CircleIndicator size={6} color={color} />\n        <IntegrationStatusText>{`${\n          status === 'active' ? t('enabled') : t('disabled')\n        }`}</IntegrationStatusText>\n      </div>\n    </Tooltip>\n  );\n};\n\nconst StyledIntegrationStatus = styled(IntegrationStatus)`\n  display: flex;\n  align-items: center;\n  color: ${p => p.theme.gray300};\n  font-weight: light;\n  text-transform: capitalize;\n  &:before {\n    content: '|';\n    color: ${p => p.theme.gray200};\n    margin-right: ${space(1)};\n    font-weight: normal;\n  }\n`;\n\nconst IntegrationStatusText = styled('div')`\n  margin: 0 ${space(0.75)} 0 ${space(0.5)};\n`;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'app/actionCreators/indicator';\nimport {RequestOptions} from 'app/api';\nimport Alert from 'app/components/alert';\nimport AsyncComponent from 'app/components/asyncComponent';\nimport Button from 'app/components/button';\nimport {IconFlag, IconOpen, IconWarning} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Integration, IntegrationProvider} from 'app/types';\nimport {getAlertText} from 'app/utils/integrationUtil';\nimport withOrganization from 'app/utils/withOrganization';\n\nimport AbstractIntegrationDetailedView from './abstractIntegrationDetailedView';\nimport AddIntegrationButton from './addIntegrationButton';\nimport InstalledIntegration from './installedIntegration';\n\ntype State = {\n  configurations: Integration[];\n  information: {providers: IntegrationProvider[]};\n};\n\nclass IntegrationDetailedView extends AbstractIntegrationDetailedView<\n  AbstractIntegrationDetailedView['props'],\n  State & AbstractIntegrationDetailedView['state']\n> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {orgId, integrationSlug} = this.props.params;\n    return [\n      [\n        'information',\n        `/organizations/${orgId}/config/integrations/?provider_key=${integrationSlug}`,\n      ],\n      [\n        'configurations',\n        `/organizations/${orgId}/integrations/?provider_key=${integrationSlug}&includeConfig=0`,\n      ],\n    ];\n  }\n\n  get integrationType() {\n    return 'first_party' as const;\n  }\n\n  get provider() {\n    return this.state.information.providers[0];\n  }\n\n  get description() {\n    return this.metadata.description;\n  }\n\n  get author() {\n    return this.metadata.author;\n  }\n\n  get alerts() {\n    const provider = this.provider;\n    const metadata = this.metadata;\n    // The server response for integration installations includes old icon CSS classes\n    // We map those to the currently in use values to their react equivalents\n    // and fallback to IconFlag just in case.\n    const alerts = (metadata.aspects.alerts || []).map(item => {\n      switch (item.icon) {\n        case 'icon-warning':\n        case 'icon-warning-sm':\n          return {...item, icon: <IconWarning />};\n        default:\n          return {...item, icon: <IconFlag />};\n      }\n    });\n\n    if (!provider.canAdd && metadata.aspects.externalInstall) {\n      alerts.push({\n        type: 'warning',\n        icon: <IconOpen />,\n        text: metadata.aspects.externalInstall.noticeText,\n      });\n    }\n    return alerts;\n  }\n\n  get resourceLinks() {\n    const metadata = this.metadata;\n    return [\n      {url: metadata.source_url, title: 'View Source'},\n      {url: metadata.issue_url, title: 'Report Issue'},\n    ];\n  }\n\n  get metadata() {\n    return this.provider.metadata;\n  }\n\n  get isEnabled() {\n    return this.state.configurations.length > 0;\n  }\n\n  get installationStatus() {\n    return this.isEnabled ? 'Installed' : 'Not Installed';\n  }\n\n  get integrationName() {\n    return this.provider.name;\n  }\n\n  get featureData() {\n    return this.metadata.features;\n  }\n\n  onInstall = (integration: Integration) => {\n    // send the user to the configure integration view for that integration\n    const {orgId} = this.props.params;\n    this.props.router.push(\n      `/settings/${orgId}/integrations/${integration.provider.key}/${integration.id}/`\n    );\n  };\n\n  onRemove = (integration: Integration) => {\n    const {orgId} = this.props.params;\n\n    const origIntegrations = [...this.state.configurations];\n\n    const integrations = this.state.configurations.filter(i => i.id !== integration.id);\n    this.setState({configurations: integrations});\n\n    const options: RequestOptions = {\n      method: 'DELETE',\n      error: () => {\n        this.setState({configurations: origIntegrations});\n        addErrorMessage(t('Failed to remove Integration'));\n      },\n    };\n\n    this.api.request(`/organizations/${orgId}/integrations/${integration.id}/`, options);\n  };\n\n  onDisable = (integration: Integration) => {\n    let url: string;\n\n    const [domainName, orgName] = integration.domainName.split('/');\n    if (integration.accountType === 'User') {\n      url = `https://${domainName}/settings/installations/`;\n    } else {\n      url = `https://${domainName}/organizations/${orgName}/settings/installations/`;\n    }\n\n    window.open(url, '_blank');\n  };\n\n  handleExternalInstall = () => {\n    this.trackIntegrationAnalytics('integrations.installation_start');\n  };\n\n  renderTopButton(disabledFromFeatures: boolean, userHasAccess: boolean) {\n    const {organization} = this.props;\n    const provider = this.provider;\n    const {metadata} = provider;\n\n    const size = 'small' as const;\n    const priority = 'primary' as const;\n\n    const buttonProps = {\n      style: {marginBottom: space(1)},\n      size,\n      priority,\n      'data-test-id': 'install-button',\n      disabled: disabledFromFeatures,\n      organization,\n    };\n\n    if (!userHasAccess) {\n      return this.renderRequestIntegrationButton();\n    }\n\n    if (provider.canAdd) {\n      return (\n        <AddIntegrationButton\n          provider={provider}\n          onAddIntegration={this.onInstall}\n          analyticsParams={{\n            view: 'integrations_directory_integration_detail',\n            already_installed: this.installationStatus !== 'Not Installed',\n          }}\n          {...buttonProps}\n        />\n      );\n    }\n    if (metadata.aspects.externalInstall) {\n      return (\n        <Button\n          icon={<IconOpen />}\n          href={metadata.aspects.externalInstall.url}\n          onClick={this.handleExternalInstall}\n          external\n          {...buttonProps}\n        >\n          {metadata.aspects.externalInstall.buttonText}\n        </Button>\n      );\n    }\n\n    // This should never happen but we can't return undefined without some refactoring.\n    return <Fragment />;\n  }\n\n  renderConfigurations() {\n    const {configurations} = this.state;\n    const {organization} = this.props;\n    const provider = this.provider;\n\n    if (!configurations.length) {\n      return this.renderEmptyConfigurations();\n    }\n\n    const alertText = getAlertText(configurations);\n    return (\n      <Fragment>\n        {alertText && (\n          <Alert type=\"warning\" icon={<IconFlag size=\"sm\" />}>\n            {alertText}\n          </Alert>\n        )}\n        {configurations.map(integration => (\n          <InstallWrapper key={integration.id}>\n            <InstalledIntegration\n              organization={organization}\n              provider={provider}\n              integration={integration}\n              onRemove={this.onRemove}\n              onDisable={this.onDisable}\n              data-test-id={integration.id}\n              trackIntegrationAnalytics={this.trackIntegrationAnalytics}\n              requiresUpgrade={!!alertText}\n            />\n          </InstallWrapper>\n        ))}\n      </Fragment>\n    );\n  }\n}\n\nconst InstallWrapper = styled('div')`\n  padding: ${space(2)};\n  border: 1px solid ${p => p.theme.border};\n  border-bottom: none;\n  background-color: ${p => p.theme.background};\n\n  &:last-child {\n    border-bottom: 1px solid ${p => p.theme.border};\n  }\n`;\n\nexport default withOrganization(IntegrationDetailedView);\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport space from 'app/styles/space';\nimport {Integration} from 'app/types';\nimport IntegrationIcon from 'app/views/organizationIntegrations/integrationIcon';\n\ntype DefaultProps = {\n  compact: boolean;\n};\n\ntype Props = DefaultProps & {\n  integration: Integration;\n};\nexport default class IntegrationItem extends Component<Props> {\n  static defaultProps: DefaultProps = {\n    compact: false,\n  };\n\n  render() {\n    const {integration, compact} = this.props;\n    return (\n      <Flex>\n        <div>\n          <IntegrationIcon size={compact ? 22 : 32} integration={integration} />\n        </div>\n        <Labels compact={compact}>\n          <IntegrationName data-test-id=\"integration-name\">\n            {integration.name}\n          </IntegrationName>\n          <DomainName compact={compact}>{integration.domainName}</DomainName>\n        </Labels>\n      </Flex>\n    );\n  }\n}\n\nconst Flex = styled('div')`\n  display: flex;\n`;\ntype StyledProps = Pick<Props, 'compact'>;\nconst Labels = styled('div')<StyledProps>`\n  box-sizing: border-box;\n  display: flex;\n  ${p => (p.compact ? 'align-items: center;' : '')};\n  flex-direction: ${p => (p.compact ? 'row' : 'column')};\n  padding-left: ${space(1)};\n  min-width: 0;\n  justify-content: center;\n`;\n\nconst IntegrationName = styled('div')`\n  font-size: 1.6rem;\n`;\n\n// Not using the overflowEllipsis style import here\n// as it sets width 100% which causes layout issues in the\n// integration list.\nconst DomainName = styled('div')<StyledProps>`\n  color: ${p => (p.compact ? p.theme.gray200 : p.theme.gray400)};\n  margin-left: ${p => (p.compact ? space(1) : 'inherit')};\n  margin-top: ${p => (!p.compact ? space(0.25) : 'inherit')};\n  font-size: 1.4rem;\n  line-height: 1.2;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n"],"names":["AddIntegration","React","urlParams","account","analyticsParams","modalParams","organization","provider","this","props","trackIntegrationAnalytics","integration","key","integration_type","url","width","height","setupDialog","left","top","computeCenteredWindow","query","installUrl","queryString","opts","dialog","window","open","focus","message","onInstall","origin","document","location","source","success","data","addSuccessMessage","t","name","addErrorMessage","error","componentDidMount","addEventListener","didReceiveMessage","componentWillUnmount","removeEventListener","close","screenLeft","undefined","screenX","screenTop","screenY","innerWidth","documentElement","clientWidth","screen","innerHeight","clientHeight","render","children","openDialog","AddIntegrationButton","buttonText","onAddIntegration","reinstall","buttonProps","label","metadata","noun","disabled","canAdd","title","onClick","InstalledIntegration","getRemovalBodyAndText","aspects","removal_dialog","body","actionText","handleRemove","onRemove","type","icon","size","confirmText","onConfirm","disable_dialog","onDisable","className","requiresUpgrade","removeConfirmProps","status","canDisable","disableConfirmProps","access","hasAccess","IntegrationFlex","IntegrationItemBox","position","view","already_installed","priority","StyledButton","borderless","to","slug","id","onConfirming","handleUninstallClick","StyledIntegrationStatus","Button","p","theme","gray300","IntegrationStatus","useTheme","color","titleText","IntegrationStatusText","gray200","space","IntegrationDetailedView","AbstractIntegrationDetailedView","orgId","params","router","push","origIntegrations","state","configurations","integrations","filter","i","setState","options","method","api","request","domainName","orgName","split","accountType","getEndpoints","integrationSlug","information","providers","description","author","alerts","map","item","externalInstall","text","noticeText","source_url","issue_url","length","isEnabled","features","renderTopButton","disabledFromFeatures","userHasAccess","style","marginBottom","installationStatus","href","handleExternalInstall","external","Fragment","renderRequestIntegrationButton","renderConfigurations","renderEmptyConfigurations","alertText","getAlertText","InstallWrapper","border","background","withOrganization","IntegrationItem","Component","compact","Flex","Labels","IntegrationName","DomainName","gray400"],"sourceRoot":""}