{"version":3,"file":"chunks/app_views_settings_projectDataForwarding_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/inactivePlugins.tsx","webpack:///./app/components/pluginList.tsx","webpack:///./app/components/sentryDocumentTitle.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/projectDataForwarding.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport TextOverflow from 'app/components/textOverflow';\nimport {t} from 'app/locale';\nimport PluginIcon from 'app/plugins/components/pluginIcon';\nimport space from 'app/styles/space';\nimport {Plugin} from 'app/types';\n\ntype Props = {\n  plugins: Plugin[];\n  onEnablePlugin: (plugin: Plugin) => void;\n};\n\nconst InactivePlugins = ({plugins, onEnablePlugin}: Props) => {\n  if (plugins.length === 0) {\n    return null;\n  }\n\n  return (\n    <Panel>\n      <PanelHeader>{t('Inactive Integrations')}</PanelHeader>\n\n      <PanelBody>\n        <Plugins>\n          {plugins.map(plugin => (\n            <IntegrationButton\n              key={plugin.id}\n              onClick={() => onEnablePlugin(plugin)}\n              className={`ref-plugin-enable-${plugin.id}`}\n            >\n              <Label>\n                <StyledPluginIcon pluginId={plugin.id} />\n                <TextOverflow>{plugin.shortName || plugin.name}</TextOverflow>\n              </Label>\n            </IntegrationButton>\n          ))}\n        </Plugins>\n      </PanelBody>\n    </Panel>\n  );\n};\n\nconst Plugins = styled('div')`\n  display: flex;\n  padding: ${space(1)};\n  flex: 1;\n  flex-wrap: wrap;\n`;\n\nconst IntegrationButton = styled('button')`\n  margin: ${space(1)};\n  width: 175px;\n  text-align: center;\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: #889ab0;\n  letter-spacing: 0.1px;\n  font-weight: 600;\n  text-transform: uppercase;\n  border: 1px solid #eee;\n  background: inherit;\n  border-radius: ${p => p.theme.borderRadius};\n  padding: 10px;\n\n  &:hover {\n    border-color: #ccc;\n  }\n`;\n\nconst Label = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledPluginIcon = styled(PluginIcon)`\n  margin-right: ${space(1)};\n`;\n\nexport default InactivePlugins;\n","import {disablePlugin, enablePlugin} from 'app/actionCreators/plugins';\nimport InactivePlugins from 'app/components/inactivePlugins';\nimport PluginConfig from 'app/components/pluginConfig';\nimport {t} from 'app/locale';\nimport {Organization, Plugin, Project} from 'app/types';\n\nimport {Panel, PanelItem} from './panels';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n  pluginList: Plugin[];\n  onDisablePlugin?: (plugin: Plugin) => void;\n  onEnablePlugin?: (plugin: Plugin) => void;\n};\n\nconst PluginList = ({\n  organization,\n  project,\n  pluginList,\n  onDisablePlugin = () => {},\n  onEnablePlugin = () => {},\n}: Props) => {\n  const handleEnablePlugin = (plugin: Plugin) => {\n    enablePlugin({\n      projectId: project.slug,\n      orgId: organization.slug,\n      pluginId: plugin.slug,\n    });\n\n    onEnablePlugin(plugin);\n  };\n\n  const handleDisablePlugin = (plugin: Plugin) => {\n    disablePlugin({\n      projectId: project.slug,\n      orgId: organization.slug,\n      pluginId: plugin.slug,\n    });\n\n    onDisablePlugin(plugin);\n  };\n\n  if (!pluginList.length) {\n    return (\n      <Panel>\n        <PanelItem>\n          {t(\"Oops! Looks like there aren't any available integrations installed.\")}\n        </PanelItem>\n      </Panel>\n    );\n  }\n\n  return (\n    <div>\n      {pluginList\n        .filter(p => p.enabled)\n        .map(data => (\n          <PluginConfig\n            data={data}\n            organization={organization}\n            project={project}\n            key={data.id}\n            onDisablePlugin={handleDisablePlugin}\n          />\n        ))}\n\n      <InactivePlugins\n        plugins={pluginList.filter(p => !p.enabled && !p.isHidden)}\n        onEnablePlugin={handleEnablePlugin}\n      />\n    </div>\n  );\n};\n\nexport default PluginList;\n","import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\ntype Props = {\n  // Main page title\n  title: string;\n  orgSlug?: string;\n  projectSlug?: string;\n  children?: React.ReactNode;\n};\n\nfunction SentryDocumentTitle({title, orgSlug, projectSlug, children}: Props) {\n  function getDocTitle() {\n    if (!orgSlug && !projectSlug) {\n      return title;\n    }\n\n    if (orgSlug && projectSlug) {\n      return `${title} - ${orgSlug} - ${projectSlug}`;\n    }\n\n    if (orgSlug) {\n      return `${title} - ${orgSlug}`;\n    }\n\n    return `${title} - ${projectSlug}`;\n  }\n\n  const docTitle = getDocTitle();\n\n  return (\n    <DocumentTitle title={`${docTitle} - Sentry`}>\n      {children as React.ReactChild}\n    </DocumentTitle>\n  );\n}\n\nexport default SentryDocumentTitle;\n","import * as React from 'react';\n\nimport Access from 'app/components/acl/access';\nimport Alert from 'app/components/alert';\nimport {IconWarning} from 'app/icons';\nimport {t} from 'app/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['project:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" icon={<IconWarning size=\"xs\" />} {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport Feature from 'app/components/acl/feature';\nimport FeatureDisabled from 'app/components/acl/featureDisabled';\nimport Alert from 'app/components/alert';\nimport AsyncComponent from 'app/components/asyncComponent';\nimport MiniBarChart from 'app/components/charts/miniBarChart';\nimport ExternalLink from 'app/components/links/externalLink';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport PluginList from 'app/components/pluginList';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport {IconInfo} from 'app/icons';\nimport {t, tct} from 'app/locale';\nimport {Organization, Plugin, Project, TimeseriesValue} from 'app/types';\nimport {Series} from 'app/types/echarts';\nimport withOrganization from 'app/utils/withOrganization';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\nimport PermissionAlert from 'app/views/settings/project/permissionAlert';\n\ntype RouteParams = {projectId: string; orgId: string};\n\ntype StatProps = {\n  params: RouteParams;\n};\n\ntype StatState = AsyncComponent['state'] & {\n  stats: TimeseriesValue[];\n};\n\nclass DataForwardingStats extends AsyncComponent<StatProps, StatState> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {orgId, projectId} = this.props.params;\n    const until = Math.floor(new Date().getTime() / 1000);\n    const since = until - 3600 * 24 * 30;\n\n    const options = {\n      query: {\n        since,\n        until,\n        resolution: '1d',\n        stat: 'forwarded',\n      },\n    };\n\n    return [['stats', `/projects/${orgId}/${projectId}/stats/`, options]];\n  }\n\n  renderBody() {\n    const {projectId} = this.props.params;\n    const {stats} = this.state;\n    const series: Series = {\n      seriesName: t('Forwarded'),\n      data: stats.map(([timestamp, value]) => ({name: timestamp * 1000, value})),\n    };\n    const forwardedAny = series.data.some(({value}) => value > 0);\n\n    return (\n      <Panel>\n        <SentryDocumentTitle title={t('Data Forwarding')} projectSlug={projectId} />\n        <PanelHeader>{t('Forwarded events in the last 30 days (by day)')}</PanelHeader>\n        <PanelBody withPadding>\n          {forwardedAny ? (\n            <MiniBarChart\n              isGroupedByDate\n              showTimeInTooltip\n              labelYAxisExtents\n              series={[series]}\n              height={150}\n            />\n          ) : (\n            <EmptyMessage\n              title={t('Nothing forwarded in the last 30 days.')}\n              description={t('Total events forwarded to third party integrations.')}\n            />\n          )}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  organization: Organization;\n  project: Project;\n};\n\ntype State = AsyncComponent['state'] & {\n  plugins: Plugin[];\n};\n\nclass ProjectDataForwarding extends AsyncComponent<Props, State> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {orgId, projectId} = this.props.params;\n\n    return [['plugins', `/projects/${orgId}/${projectId}/plugins/`]];\n  }\n\n  get forwardingPlugins() {\n    return this.state.plugins.filter(\n      p => p.type === 'data-forwarding' && p.hasConfiguration\n    );\n  }\n\n  updatePlugin(plugin: Plugin, enabled: boolean) {\n    const plugins = this.state.plugins.map(p => ({\n      ...p,\n      enabled: p.id === plugin.id ? enabled : p.enabled,\n    }));\n\n    this.setState({plugins});\n  }\n\n  onEnablePlugin = (plugin: Plugin) => this.updatePlugin(plugin, true);\n  onDisablePlugin = (plugin: Plugin) => this.updatePlugin(plugin, false);\n\n  renderBody() {\n    const {params, organization, project} = this.props;\n    const plugins = this.forwardingPlugins;\n    const hasAccess = organization.access.includes('project:write');\n\n    const pluginsPanel =\n      plugins.length > 0 ? (\n        <PluginList\n          organization={organization}\n          project={project}\n          pluginList={plugins}\n          onEnablePlugin={this.onEnablePlugin}\n          onDisablePlugin={this.onDisablePlugin}\n        />\n      ) : (\n        <Panel>\n          <EmptyMessage\n            title={t('There are no integrations available for data forwarding')}\n          />\n        </Panel>\n      );\n\n    return (\n      <div data-test-id=\"data-forwarding-settings\">\n        <Feature\n          features={['projects:data-forwarding']}\n          hookName=\"feature-disabled:data-forwarding\"\n        >\n          {({hasFeature, features}) => (\n            <Fragment>\n              <SettingsPageHeader title={t('Data Forwarding')} />\n              <TextBlock>\n                {tct(\n                  `Data Forwarding allows processed events to be sent to your\n                favorite business intelligence tools. The exact payload and\n                types of data depend on the integration you're using. Learn\n                more about this functionality in our [link:documentation].`,\n                  {\n                    link: (\n                      <ExternalLink href=\"https://docs.sentry.io/product/data-management-settings/data-forwarding/\" />\n                    ),\n                  }\n                )}\n              </TextBlock>\n              <PermissionAlert />\n\n              <Alert icon={<IconInfo size=\"md\" />}>\n                {tct(\n                  `Sentry forwards [em:all applicable events] to the provider, in\n                some cases this may be a significant volume of data.`,\n                  {\n                    em: <strong />,\n                  }\n                )}\n              </Alert>\n\n              {!hasFeature && (\n                <FeatureDisabled\n                  alert\n                  featureName=\"Data Forwarding\"\n                  features={features}\n                />\n              )}\n\n              <DataForwardingStats params={params} />\n              {hasAccess && hasFeature && pluginsPanel}\n            </Fragment>\n          )}\n        </Feature>\n      </div>\n    );\n  }\n}\n\nexport default withOrganization(ProjectDataForwarding);\n"],"names":["InactivePlugins","plugins","onEnablePlugin","length","t","Plugins","map","plugin","IntegrationButton","onClick","className","id","Label","StyledPluginIcon","pluginId","shortName","name","space","p","theme","fontSizeSmall","borderRadius","PluginIcon","PluginList","organization","project","pluginList","onDisablePlugin","handleDisablePlugin","disablePlugin","projectId","slug","orgId","filter","enabled","data","isHidden","enablePlugin","SentryDocumentTitle","title","orgSlug","projectSlug","children","docTitle","PermissionAlert","access","props","hasAccess","type","icon","size","DataForwardingStats","AsyncComponent","getEndpoints","this","params","until","Math","floor","Date","getTime","options","query","since","resolution","stat","renderBody","stats","state","series","seriesName","timestamp","value","forwardedAny","some","withPadding","isGroupedByDate","showTimeInTooltip","labelYAxisExtents","height","description","ProjectDataForwarding","updatePlugin","hasConfiguration","setState","forwardingPlugins","includes","pluginsPanel","features","hookName","hasFeature","Fragment","tct","link","href","em","alert","featureName","withOrganization"],"sourceRoot":""}