[metadata]
name = plasmapy
provides = plasmapy
author = PlasmaPy Community
description = Python package for plasma physics
long_description = file: README.md
long_description_content_type = text/markdown
license = BSD+Patent
license_file = LICENSE.md
url = https://www.plasmapy.org
project_urls = 
	Documentation=https://docs.plasmapy.org/
	Changelog=https://docs.plasmapy.org/en/stable/whatsnew/index.html
	Source=https://github.com/plasmapy/plasmapy
	Issues=https://github.com/plasmapy/plasmapy/issues/
	Twitter=https://twitter.com/PlasmaPy
edit_on_github = True
github_project = PlasmaPy/PlasmaPy
keywords = plasma physics, plasma, science, atomic
classifiers = 
	Development Status :: 3 - Alpha
	Intended Audience :: Science/Research
	License :: OSI Approved :: BSD License
	Operating System :: OS Independent
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3.7
	Programming Language :: Python :: 3.8
	Programming Language :: Python :: 3.8
	Programming Language :: Python :: 3.9
	Programming Language :: Python :: Implementation :: CPython
	Topic :: Scientific/Engineering :: Physics
	Topic :: Scientific/Engineering :: Astronomy

[options]
python_requires = >=3.7
packages = find:
include_package_data = True
setup_requires = 
install_requires = 
	astropy >= 4.0
	cached-property >= 1.5.2
	matplotlib >= 3.3.0
	numpy >= 1.18.1
	packaging
	pandas >= 1.0.0
	scipy >= 1.2
	setuptools >= 41.2
	tqdm >= 4.41.0
	xarray >= 0.14.0

[options.extras_require]
extras = 
	setuptools_scm
	tox
	h5py
	mpmath
	lmfit
	numba
tests = 
	%(extras)s
	pytest >= 5.1
	hypothesis
	pytest-regressions
docs = 
	%(extras)s
	docutils
	ipykernel
	ipywidgets
	nbsphinx
	numpydoc
	pillow
	pygments >= 2.4.1
	sphinx >= 3.2.0
	sphinx-changelog
	sphinx-copybutton
	sphinx-gallery
	sphinxcontrib-bibtex
	sphinx_rtd_theme >= 1.0.0
	towncrier >= 19.2.0
developer = 
	%(docs)s
	%(extras)s
	%(tests)s
all = 
	%(extras)s

[options.packages.find]
exclude = docs/automodapi

[options.package_data]
plasmapy.particles.data = *
plasmapy.tests = coveragerc

[build_docs]
source-dir = docs
build-dir = docs/_build
all_files = 1

[tool:pytest]
minversion = 5.1
testpaths = "plasmapy"
norecursedirs = "build" "docs/"
doctest_optionflags = 
	NORMALIZE_WHITESPACE
	ELLIPSIS
	NUMBER
addopts = --doctest-modules --doctest-continue-on-failure
filterwarnings = 
	ignore:.*Creating a LegacyVersion.*:DeprecationWarning
looponfailroots = 
	plasmapy

[flake8]
convention = numpy
extend-ignore = 
	D105,
	D107,
	D202,
	D205,
	D302,
	D400,
	D403,
	E203,
	E501,
	E731,
	F401,
	F405,
	W605,
	RST210,
	RST213,
	RST305,
	RST306
exclude = 
	extern,
	sphinx,
	*test*,
	*parsetab.py,
	conftest.py,
	docs/conf.py,
	setup.py,
	.jupyter
rst-roles = 
	attr
	cite
	cite:ct
	cite:cts
	cite:p
	cite:ps
	cite:t
	cite:ts
	class
	confval
	data
	event
	exc
	file
	func
	meth
	mod
	ref
	rst:dir
rst-directives = 
	confval
	deprecated
	event
	nbgallery
	rst:directive
	todo
enable-extensions = 
	FS003
per-file-ignores = 
	plasmapy/formulary/__init__.py:F403
	plasmapy/__init__.py:FS003
	plasmapy/diagnostics/charged_particle_radiography.py:FS003

[coverage:run]
omit = 
	ci-helpers/*
	*/tests/*
	plasmapy/setup_package.py
	plasmapy/version.py

[coverage:report]
exclude_lines = 
	coverage: ignore
	ImportError
	ModuleNotFoundError
	@vectorize
	@numba.vectorize

[egg_info]
tag_build = 
tag_date = 0

