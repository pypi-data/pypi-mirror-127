[metadata]
name = numerary
version = attr:numerary.version.__vers_str__
url = https://posita.github.io/numerary/0.1/
author = Matt Bogosian
author_email = matt@bogosian.net
project_urls = 
	Source Repository = https://github.com/posita/numerary/
classifiers = 
	Topic :: Education
	Topic :: Scientific/Engineering :: Mathematics
	Topic :: Software Development :: Libraries :: Python Modules
	Typing :: Typed
	Development Status :: 3 - Alpha
	Intended Audience :: Developers
	Intended Audience :: Education
	Intended Audience :: Science/Research
	License :: OSI Approved :: MIT License
	Operating System :: OS Independent
	Programming Language :: Python
	Programming Language :: Python :: 3.7
	Programming Language :: Python :: 3.8
	Programming Language :: Python :: 3.9
	Programming Language :: Python :: 3.10
	Programming Language :: Python :: Implementation :: CPython
	Programming Language :: Python :: Implementation :: PyPy
license = MIT License
license_files = LICENSE
description = Python hacks for type-checking numbers
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8

[options]
packages = numerary
include_package_data = True
python_requires = >=3.7
install_requires = 
	typing-extensions>=3.10;python_version<'3.9'
setup_requires = 
	typing-extensions>=3.10;python_version<'3.9'

[options.extras_require]
dev = 
	beartype>=0.8,!=0.9.0  # for testing
	numpy  # for testing
	pre-commit
	sympy>=1.9  # for testing
	tox

[tox:tox]
envlist = check, py{38,39}-lint{,-beartype}, py39{,-beartype}, py{37,38,310,py3}-beartype
skipsdist = true
skip_missing_interpreters = true

[gh-actions]
python = 
	3.7: py37-lint{,-beartype} py37-beartype
	3.8: py38-lint{,-beartype} py38-beartype
	3.9: check, py39-lint{,-beartype}, py39{,-beartype}
	3.10: py310-lint{,-beartype} py310-beartype
	pypy-3.7: pypy3-beartype

[testenv]
commands = 
	pytest --cov=numerary {posargs}
deps = 
	--editable .
	beartype: beartype>=0.8,!=0.9.0
	!pypy3-!pypy37: numpy
	pytest-cov
	pytest-gitignore
	sympy>=1.9
passenv = 
	PYTHONBREAKPOINT
setenv = 
	PYTHONWARNINGS = {env:PYTHONWARNINGS:ignore}

[testenv:check]
commands = 
	rm -frv site
	mkdocs build --strict
	python -c 'from setuptools import setup ; setup()' bdist_wheel
	twine check dist/*
deps = 
	--editable .
	mike
	mkdocs!=1.2
	mkdocs-exclude
	mkdocs-material
	mkdocstrings
	sympy
	twine
whitelist_externals = 
	git
	make
	rm

[testenv:py{37,38,39,310}-lint{,-beartype}]
commands = 
	pre-commit run --all-files --show-diff-on-failure
	beartype: mypy --config-file={toxinidir}/pyproject.toml --warn-unused-ignores .
	!beartype: mypy --config-file={toxinidir}/pyproject.toml .
	{toxinidir}/helpers/mypy-doctests.py -a=--config-file={toxinidir}/pyproject.toml .
deps = 
	--editable .
	beartype: beartype>=0.8,!=0.9.0
	mypy
	pre-commit
	sympy

[flake8]
ignore = 
	E501,  # line too long (... > ... characters)
	W503,  # line break occurred before a binary operator

[egg_info]
tag_build = 
tag_date = 0

